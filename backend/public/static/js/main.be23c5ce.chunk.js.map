{"version":3,"sources":["services/api.ts","components/ParticipantsDraws/Create/styles.tsx","global/Timer.ts","components/ParticipantsDraws/ModalDraw/styles.ts","components/ParticipantsDraws/ModalDraw/index.tsx","components/ParticipantsDraws/Create/index.tsx","store/index.ts","store/screen/index.ts","pages/Login/index.tsx","pages/ForgoutPassword/index.tsx","pages/UserRegistration/index.tsx","components/Draw/List/styles.ts","components/Draw/List/index.tsx","components/Draw/Create/index.tsx","components/Draw/Update/index.tsx","components/Draw/Delete/index.tsx","components/Raffle/List/styles.ts","components/Raffle/List/index.tsx","components/Raffle/Create/index.tsx","components/Raffle/Update/index.tsx","components/Raffle/Delete/index.tsx","components/Images/List/styles.ts","components/Images/List/index.tsx","components/Images/Create/index.tsx","components/Images/Update/index.tsx","components/Images/Delete/index.tsx","components/Quotas_Draw/List/styles.ts","components/Quotas_Draw/List/index.tsx","components/Quotas_Draw/Create/index.tsx","components/Quotas_Draw/Update/index.tsx","components/Quotas_Draw/Delete/index.tsx","components/Quotas_Raffle/List/styles.ts","components/Quotas_Raffle/List/index.tsx","components/Quotas_Raffle/Create/index.tsx","components/Quotas_Raffle/Update/index.tsx","components/Quotas_Raffle/Delete/index.tsx","components/Business/List/index.tsx","components/Business/Create/index.tsx","components/Business/Update/index.tsx","components/Business/Delete/index.tsx","components/BanksAccount/List/styles.ts","components/BanksAccount/List/index.tsx","components/BanksAccount/Create/index.tsx","components/BanksAccount/Update/index.tsx","components/BanksAccount/Delete/index.tsx","components/Users/Create/index.tsx","components/Users/Update/index.tsx","components/Users/Delete/index.tsx","components/ParticipantsDraws/Update/index.tsx","components/ParticipantsDraws/Delete/index.tsx","components/WinnerDraw/List/styles.ts","components/WinnerDraw/List/index.tsx","components/WinnerDraw/Create/index.tsx","components/WinnerDraw/Update/index.tsx","components/WinnerDraw/Delete/index.tsx","components/ParticipantsRaffles/Create/styles.tsx","components/ParticipantsRaffles/ModalRaffle/styles.ts","components/ParticipantsRaffles/ModalRaffle/index.tsx","components/ParticipantsRaffles/Create/index.tsx","components/ParticipantsRaffles/Upate/index.tsx","components/ParticipantsRaffles/Delete/index.tsx","components/WinnerRaffle/List/styles.ts","components/WinnerRaffle/List/index.tsx","components/WinnerRaffle/Create/index.tsx","components/WinnerRaffle/Update/index.tsx","components/WinnerRaffle/Delete/index.tsx","components/Reports/Draws/styles.ts","components/Reports/Draws/index.tsx","components/Reports/Raffles/styles.ts","components/Reports/Raffles/index.tsx","components/MenuAdmin/index.tsx","components/MyShopping/styles.tsx","components/MyShopping/index.tsx","components/MenuComum/index.tsx","components/Sidebar/index.tsx","pages/Dashboard/index.tsx","pages/Home/styles.ts","pages/Home/index.tsx","global/Auth.ts","global/History.ts","routes.tsx","App.tsx","index.tsx"],"names":["token","sessionStorage","getItem","api","axios","create","baseURL","headers","Container","styled","div","updateAllResevations","dateEnd","difference","Date","days","Math","round","hours","minutes","seconds","Title","h1","Subtitle","h2","Header","header","ContainerRow","ContainerRowInfo","ContainerSlider","ImageSlider","img","ContainerColumn","ContainerInfoRow","ValorTitle","h3","Valor","DateTitle","DateDraw","Description","Timer","CardProcess","CardImg","ContainerQuotas","QuotasHeader","ContainerButtonsFilter","ButtonsFilter","button","props","color","ContinerQuotasShow","ButtonQuota","ContainerConfirmation","length","ButtonConfirmation","MoadalDraw","useState","quotasDraw","setQuotasDraw","quotasVerifyDraw","setQuotasVerifyDraw","participants","setParticipants","draw","setDraw","React","images","setImages","draw_id","setDraw_Id","day","setDay","month","setMonth","year","setYear","setMinutes","showTime","setShowTime","quotasSelected","setQuotasSelected","setSeconds","free","setFree","resevation","setResevation","sold","setSold","useEffect","a","get","data","getDraw_Quotas","getParticipants","dateResult","TimerCounter","date_draw","interval","setInterval","console","log","sign","clearInterval","id","parseInt","date","months","getUTCDate","getMonth","getUTCFullYear","getMinutes","getDraws","getImages","render","map","quota_draw","response","status","number","draw_quota_id","participant_item","undefined","renderQuotas","dataUser","item","payload","users_user_id","JSON","parse","user_id","draw_quotas_draw_quota_id","find","quota","draws_draw_id","post","title","subtitle","image","index","src","data_image","style","margin","value","source","description","escapeHtml","justifyContent","width","onClick","display","document","querySelectorAll","forEach","element","colorValue","className","filter","verify","handleSetQuotasExcludeSelected","useStyles","makeStyles","root","maxWidth","Create","classes","dispatch","useDispatch","draws","setDraws","Card","minWidth","CardActionArea","naturalSlideWidth","naturalSlideHeight","totalSlides","dragEnabled","height","objectFit","alt","name","CardContent","Typography","gutterBottom","variant","component","borderRadius","backgroundColor","CardActions","Button","size","setItem","type","state","ModalDraw","rootReducer","combineReducers","screen","ParticipantsDrawsCreate","action","store","createStore","Copyright","align","Link","href","getFullYear","theme","paper","marginTop","spacing","flexDirection","alignItems","avatar","palette","secondary","main","form","submit","Login","email","setEmail","password","setPassword","responseLogin","setResponseLogin","stringify","username","Alert","severity","window","location","CssBaseline","Avatar","onSubmit","e","preventDefault","noValidate","TextField","required","fullWidth","label","onChange","target","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Grid","container","xs","Box","mt","ForgoutPassword","cpf","setCpf","replace","UserRegistration","setName","phone","setPhone","address","setAddress","createStyles","flexWrap","withoutLabel","textField","setTitle","setStatus","setDescription","setSubtitle","setValue","setDate","statusOpen","setStatusOpen","setResponse","event","FormControl","InputLabelProps","shrink","multiline","InputLabel","htmlFor","Input","startAdornment","InputAdornment","position","Select","labelId","open","onClose","onOpen","MenuItem","setDraw_id","draw_idOpen","setDraw_idOpen","put","key","handleChangeDraw","fetch","body","Authorization","method","json","List","raffles","setRaffles","handleTimerDate","raffle","date_raffle","getUTCMonth","getDate","getUTCHours","getUTCMinutes","getUTCSeconds","CardMedia","setImage","multiple","onDone","file","base64","raffle_id","setRaffle_id","raffle_idOpen","setRaffle_idOpen","setDraws_Draw_Id","setData_Image","image_id","setImage_Id","image_idOpen","setImage_idOpen","handleChangeImage","Quota","Update","draw_quotas","setDraw_Quotas","setNumber","setDraw_Quota_Id","drawQuotas_idOpen","setDrawQuotas_idOpen","draw_quota","raffles_quotas","setRaffles_Quotas","getRaffle_Quotas","raffle_quotas","setRaffle_Quotas","quota_raffle_id","setQuota_Raffle_Id","raffleQuotas_idOpen","setRaffleQuotas_idOpen","raffle_quota","Delete","business","setBusiness","business_id","setBusiness_Id","business_idOpen","setBusiness_idOpen","getBusiness","busines","fantasy_name","cnpj","setCnpj","setFantasyName","logo","setLogo","banner","setBanner","regulation","setRegulation","facebook","setFacebook","whatsapp","setWhatsapp","instagram","setInstagram","social","socials","handleChangeBusiness","banks","setBanks","getBanks","bank","agency","number_account","nameBank","setNameBank","numberAccount","setNumberAccount","setAgency","bank_account_id","setBank_Account_Id","bank_idOpen","setBank_idOpen","handleChangeBank","nameUser","setNameUser","setUser_Id","sessionData","participant_id","setParticipan_id","setDraw_Quotas_Draw_Quota_Id","setUsers_User_Id","participant_idOpen","setParticipant_idOpen","participant","getUsers","random","handleChangeParticipant","abs","created_at","maxHeight","media","MediaCard","winnerDraws","setWinnerDraws","getWinnerDraws","winner","cotas","diplay","video","url","controls","setParticiapant_id","setVideo","participants_draw_participant_id","winnerDraw_id","setWinner_id","winnerDraw","winnerDraw_idOpen","setWinnerDraw_idOpen","winner_id","MoadalRaffle","quotasRaffle","setQuotasRaffle","quotasVerifyRaffle","setQuotasVerifyRaffle","setRaffle","setRaffle_Id","NaN","getRaffles","quota_raffle","quotas_raffle_quota_raffle_id","raffles_raffle_id","ModalRaffle","setRaffle_Quotas_Raffle_Quota_Id","winnerRaffles","setWinnerRaffles","participants_raffle_participant_id","winnerRaffle_id","setWinnerRaffle_id","winnerRaffle","setWinnerRaffle","winnerRaffle_idOpen","setWinnerRaffle_idOpen","getWinnerRaffles","Caption","caption","ContainerPrint","GlobalCSSPRINT","createGlobalStyle","formControl","Draws","setOpen","participantsDraw","setParticipantsDraw","print","ids","Raffles","background","nested","paddingLeft","MenuAdmin","drawsOpen","setDrawsOpen","rafflesOpen","setRafflesOpen","winnersDraw","setWinnersDraw","winnersRaffle","setWinnersRaffle","participantsRaffle","setParticipantsRaffle","reports","setReports","quotasDraws","setQuotasDraws","quotasRaffles","setQuotasRaffles","users","setUsers","usertype","handleBanksAccountDelete","BanksAccountDelete","aria-labelledby","ListItem","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","DrawList","DrawCreate","DrawUpdate","DrawDelete","RaffleList","RaffleCreate","RaffleUpdate","RaffleDelete","ParticipantsDrawCreate","ParticipantsDrawUpdate","ParticipantsDrawDelete","WinnerDrawList","WinnerDrawCreate","WinnerDrawUpdate","WinnerDrawDelete","QuotasDrawList","QuotasDrawCreate","QuotasDrawUpdate","QuotasDrawDelete","ImageList","ImageCreate","ImageUpdate","ImageDelete","Quotas_RaffleList","Quotas_RaffleCreate","Quotas_RaffleUpdate","Quotas_RaffleDelete","ParticipantsRaffleCreate","ParticipantsRaffleUpdate","ParticipantsRaffleDelete","WinnerRaffleList","WinnerRaffleCreate","WinnerRaffleUpdate","WinnerRaffleDelete","UsersCreate","UsersUpdate","UsersDelete","BusinessList","BusinessCreate","BusinessUpdate","BusinessDelete","BanksAccountList","BanksAccountCreate","BanksAccountUpdate","ReportsDraw","ReportsRaffle","textDecoration","CardItem","SubTitle","h4","RowText","p","MyShopping","participantsRaffles","setParticipantsRaffles","participantsDraws","setParticipantsDraws","getParticipantsRaffles","getParticipantsDraws","MenuComum","Sidebar","toolbar","paddingRight","toolbarIcon","padding","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","paddingTop","paddingBottom","overflow","fixedHeight","Dashboard","CurrentScreen","useSelector","AppBar","clsx","Toolbar","IconButton","edge","aria-label","noWrap","Drawer","Divider","Logo","SectionRow","InfoSpan","Menu","ItemMenu","li","Banner","ContainerProcess","section","ImageProcess","TitleProcess","DescriptionProcess","ContainerDraws","TitleDraw","CardDraw","SliderDraw","ImageDraw","StatusDraw","ContainerRowWinners","Footer","footer","FooterRow","ItemFooter","span","FooterSocial","Hr","hr","Transition","forwardRef","ref","Slide","direction","Home","businnes","setBusinnes","countWinners","setCounterWinnners","getWinners","getBusinnes","textAlign","split","fontSize","fontFamily","Dialog","TransitionComponent","keepMounted","aria-describedby","DialogTitle","DialogContent","DialogContentText","isAuthenticated","history","createBrowserHistory","PrivateRoute","Component","rest","to","pathname","from","Routes","History","exact","path","App","ReactDOM","StrictMode","getElementById"],"mappings":"wPAEMA,EAAS,iBAAaC,eAAeC,QAAQ,UAWpCC,EAPHC,IAAMC,OAAO,CACrBC,QAHe,GAIfC,QAAS,CACN,cAAiBP,K,uJCPjB,IAAMQ,EAAYC,IAAOC,IAAV,K,+GCMP,SAASC,EAAqBC,GAE3C,IAIIC,EAHYD,EADA,IAAIE,KAYpB,MANe,CACbC,KAAMC,KAAKC,MAAMJ,EAAU,OAC3BK,MAAOF,KAAKC,MAAOJ,EAAU,KAAuB,IACpDM,QAASH,KAAKC,MAAOJ,EAAa,IAAO,GAAM,IAC/CO,QAASJ,KAAKC,MAAOJ,EAAa,IAAQ,K,mjKClBvC,IAAML,GAAYC,IAAOC,IAAV,MAMTW,GAAQZ,IAAOa,GAAV,MAGLC,GAAWd,IAAOe,GAAV,MAGRC,GAAShB,IAAOiB,OAAV,MAONC,GAAelB,IAAOC,IAAV,MASZkB,GAAmBnB,IAAOC,IAAV,MAShBmB,GAAkBpB,IAAOC,IAAV,KAWfoB,GAAcrB,IAAOsB,IAAV,KAMXC,GAAkBvB,IAAOC,IAAV,KAQfuB,GAAmBxB,IAAOC,IAAV,KAYhBwB,GAAazB,IAAO0B,GAAV,KAOVC,GAAQ3B,IAAOC,IAAV,KAaL2B,GAAY5B,IAAO0B,GAAV,KAOTG,GAAW7B,IAAOC,IAAV,KAYR6B,GAAc9B,IAAOC,IAAV,KAQX8B,GAAQ/B,IAAOC,IAAV,KAaL+B,GAAchC,IAAOC,IAAV,KAWXgC,GAAUjC,IAAOsB,IAAV,KAKPY,GAAkBlC,IAAOC,IAAV,KAQfkC,GAAenC,IAAOC,IAAV,KAKZmC,GAAyBpC,IAAOC,IAAV,KAStBoC,GAAgBrC,IAAOsC,OAAV,KACJ,SAACC,GAAD,OAAWA,EAAMC,SAU1BC,GAAqBzC,IAAOC,IAAV,KAOlByC,GAAc1C,IAAOsC,OAAV,KACF,SAACC,GAAD,OAAWA,EAAMC,SAS1BG,GAAwB3C,IAAOC,IAAV,KAErB,SAACsC,GAAD,OAAYA,EAAMK,OAAS,EAAI,OAAS,UAQxCC,GAAqB7C,IAAOsC,OAAV,KC5KhB,SAASQ,KAAc,IAAD,EACCC,mBAA2B,IAD5B,mBAC5BC,EAD4B,KAChBC,EADgB,OAEaF,mBAAc,IAF3B,mBAE5BG,EAF4B,KAEVC,EAFU,OAGKJ,mBAA+B,IAHpC,mBAG5BK,EAH4B,KAGdC,EAHc,OAIXN,qBAJW,mBAI5BO,EAJ4B,KAItBC,EAJsB,OAKPC,IAAMT,SAAmB,IALlB,mBAK5BU,EAL4B,KAKpBC,EALoB,OAMLX,qBANK,mBAM5BY,EAN4B,KAMnBC,EANmB,OAObb,qBAPa,mBAO5Bc,EAP4B,KAOvBC,EAPuB,OAQTf,qBARS,mBAQ5BgB,EAR4B,KAQrBC,EARqB,OASXjB,qBATW,mBAS5BkB,EAT4B,KAStBC,EATsB,OAULnB,qBAVK,mBAUnBoB,GAVmB,aAWHpB,qBAXG,mBAW5BqB,EAX4B,KAWlBC,EAXkB,OAYStB,mBAAmB,IAZ5B,oBAY5BuB,GAZ4B,MAYZC,GAZY,SAaLxB,mBAAS,GAbJ,qBAanByB,IAbmB,gBAcXzB,oBAAS,GAdE,qBAc5B0B,GAd4B,MActBC,GAdsB,SAeC3B,oBAAS,GAfV,qBAe5B4B,GAf4B,MAehBC,GAfgB,SAgBX7B,oBAAS,GAhBE,qBAgB5B8B,GAhB4B,MAgBtBC,GAhBsB,MAkBnCC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,gBADjC,gBACUC,EADV,EACUA,KACRjC,EAAciC,GAFhB,4CADc,uBAAC,WAAD,wBAKdC,KACC,IAEHJ,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,kDACsBzF,eAAeC,QACxD,aAHN,gBACUyF,EADV,EACUA,KAMR7B,EAAgB6B,EAAK,IAPvB,4CADc,uBAAC,WAAD,wBAUdE,KACC,IACHL,qBAAU,WACR,IACMM,EAAaC,EADE,IAAIjF,KAAJ,iBAAYiD,QAAZ,IAAYA,OAAZ,EAAYA,EAAMiC,aAEjCC,EAAWC,aAAY,WAC3BjB,IAAW,SAAC7D,GAAD,OAAaA,EAAU,KAClC+E,QAAQC,IAAIN,IAEsB,IAAhC9E,KAAKqF,KAAKP,EAAW/E,QACY,IAAjCC,KAAKqF,KAAKP,EAAW5E,SACc,IAAnCF,KAAKqF,KAAKP,EAAW3E,WAIW,IAAhCH,KAAKqF,KAAKP,EAAW/E,OACW,IAAhCC,KAAKqF,KAAKP,EAAW5E,SACc,IAAnCF,KAAKqF,KAAKP,EAAW3E,WAIW,IAAhCH,KAAKqF,KAAKP,EAAW/E,QACY,IAAjCC,KAAKqF,KAAKP,EAAW5E,QACa,IAAlCF,KAAKqF,KAAKP,EAAW3E,UAIU,IAA/BH,KAAKqF,KAAKP,EAAW/E,QACY,IAAjCC,KAAKqF,KAAKP,EAAW5E,SACc,IAAnCF,KAAKqF,KAAKP,EAAW3E,UAIU,IAA/BH,KAAKqF,KAAKP,EAAW/E,OACW,IAAhCC,KAAKqF,KAAKP,EAAW5E,SACc,IAAnCF,KAAKqF,KAAKP,EAAW3E,SAtBrB2D,EAAY,aA0BZA,EAAY,SAAD,OACAgB,EAAW/E,KADX,mBAC0B+E,EAAW5E,MADrC,qBACuD4E,EAAW3E,YAG9E,KACH,OAAO,kBAAMmF,cAAcL,OAE7BT,qBAAU,WAAM,4CACd,oCAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,gBACZzF,eAAeC,QAAQ,aAFpC,gBACUyF,EADV,EACUA,KAIFY,EAAUtG,eAAeC,QAAQ,WACvCmE,EAAWmC,SAASD,IACpBvC,EAAQ2B,EAAK,IAEPc,EAAO,IAAI3F,KAAK6E,EAAK,GAAGK,WACxBU,EAAS,CAAC,KAAD,wDAcfnC,EAAO,GAAD,OAAIkC,EAAKE,eACflC,EAAS,GAAD,OAAIiC,EAAOD,EAAKG,cACxBjC,EAAQ,GAAD,OAAI8B,EAAKI,mBAChBjC,EAAW,GAAD,OAAI6B,EAAKK,eA3BrB,6CADc,uBAAC,WAAD,wBA8BdC,KACC,IAEHvB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,WADjC,gBACUC,EADV,EACUA,KAERxB,EAAUwB,GAHZ,4CADc,uBAAC,WAAD,wBAMdqB,KACC,IAEHxB,qBAAU,YACR,WACE,IAAMyB,EAASxD,EAAWyD,KAAI,SAACC,GAC7B,IAAIC,EAwBJ,OAtB4B,IAAxBvD,EAAaR,OACf+D,EAAW,CACTC,OAAQ,OACRC,OAAQH,EAAWG,OACnBC,cAAeJ,EAAWI,cAC1BnD,WAGFP,EAAaqD,KAAI,SAACM,GACZA,EAAiBD,gBAAkBJ,EAAWI,gBAChDH,EAAQ,eAAQI,YAILC,IAAbL,IACFA,EAAW,CACTC,OAAQ,OACRC,OAAQH,EAAWG,OACnBC,cAAeJ,EAAWI,cAC1BnD,YAGGgD,KAGTxD,EAAoBqD,GAEtBS,KACC,CAACjE,EAAYI,IA7JmB,8CA8KnC,4BAAA4B,EAAA,sDACMV,GAAe1B,OAAS,IACpBsE,EAAgB1H,eAAeC,QAAQ,QAE7C6E,GAAemC,IAAf,uCAAmB,WAAOU,GAAP,qBAAAnC,EAAA,6DACXoC,EAAU,CACdC,cAAeC,KAAKC,MAAML,GAAUM,QACpCC,0BAA2B1B,SAAS,GAAD,iBAE/B/C,EAAW0E,MAAK,SAACC,GAAD,OAAWA,EAAMd,SAAWM,YAFb,aAE/B,EAAmDL,gBAGvDc,cAAejE,GARA,SAWMjE,EAAImI,KAAK,oBAAqBT,GAXpC,gBAWTlC,EAXS,EAWTA,KACRQ,QAAQC,IAAIT,GAZK,2CAAnB,wDAJJ,4CA9KmC,sBAkOnC,OACE,kBAAC,GAAD,KACE,kBAAClE,GAAD,KACE,kBAACJ,GAAD,YAAQ0C,QAAR,IAAQA,OAAR,EAAQA,EAAMwE,OACd,kBAAChH,GAAD,YAAWwC,QAAX,IAAWA,OAAX,EAAWA,EAAMyE,WAEnB,kBAAC7G,GAAD,KACE,kBAACE,GAAD,KACGqC,EAAOgD,KAAI,SAACuB,EAAOC,GAAR,OACVD,EAAMJ,eAAiBjE,EACrB,kBAACtC,GAAD,CACE6G,IAAKF,EAAMG,aAGb,yCAIN,kBAAC5G,GAAD,KACE,kBAACC,GAAD,KACE,kBAACG,GAAD,KACE,kBAACF,GAAD,cACA,uBAAG2G,MAAO,CAAEC,OAAQ,IAApB,aAA6B/E,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMgF,QAErC,kBAACzG,GAAD,KACE,kBAACD,GAAD,gBACA,uBAAGwG,MAAO,CAAEC,OAAQ,IACjBxE,EADH,IACSE,EADT,IACiBE,KAIrB,kBAACnC,GAAD,KACG,IACD,kBAAC,IAAD,CAAeyG,OAAM,OAAEjF,QAAF,IAAEA,OAAF,EAAEA,EAAMkF,YAAaC,YAAY,KAExD,kBAAC1G,GAAD,KACE,2BAAIqC,MAIV,kBAACjD,GAAD,CAAkBiH,MAAO,CAAEM,eAAgB,WACzC,kBAAC1G,GAAD,KACE,kBAACC,GAAD,CAASiG,IAAG,UJhTH,GIgTG,kBACZ,kBAACpH,GAAD,yBACA,uBAAGsH,MAAO,CAAEO,MAAO,QAAnB,iEAIF,kBAAC3G,GAAD,KACE,kBAACC,GAAD,CAASiG,IAAG,UJvTH,GIuTG,kBACZ,kBAACpH,GAAD,gCACA,uBAAGsH,MAAO,CAAEO,MAAO,QAAnB,iEAIF,kBAAC3G,GAAD,KACE,kBAACC,GAAD,CAASiG,IAAG,UJ9TH,GI8TG,kBACZ,kBAACpH,GAAD,4BACA,uBAAGsH,MAAO,CAAEO,MAAO,QAAnB,wDAIF,kBAAC3G,GAAD,KACE,kBAACC,GAAD,CAASiG,IAAG,UJrUH,GIqUG,kBACZ,kBAACpH,GAAD,0BACA,uBAAGsH,MAAO,CAAEO,MAAO,QAAnB,qEAKJ,kBAACzG,GAAD,KACE,kBAACC,GAAD,KACE,qCACA,kBAACrB,GAAD,0DAEF,kBAACsB,GAAD,KACE,6BACE,kBAACC,GAAD,CAAeG,MAAO,OAAQoG,QA5GV,WAC5B,IAAMC,GAAmB,IAATpE,GAAgB,QAAU,OACKqE,SAASC,iBACtD,SAEMC,SAAQ,SAACC,GACfA,EAAQb,MAAMS,QAAUA,KAE1BnE,IAASD,MAoGD,SAGA,kBAACpC,GAAD,CAAeG,MAAO,OAAQoG,QApGJ,WAClC,IAAMC,GAAyB,IAAflE,GAAsB,QAAU,OACDmE,SAASC,iBACtD,SAEMC,SAAQ,SAACC,GACfA,EAAQb,MAAMS,QAAUA,KAE1BjE,IAAeD,MA4FP,cAGA,kBAACtC,GAAD,CAAeG,MAAO,QAASoG,QA7FV,WAC7B,IAAMC,GAAmB,IAAThE,GAAgB,QAAU,OACKiE,SAASC,iBACtD,UAEMC,SAAQ,SAACC,GACfA,EAAQb,MAAMS,QAAUA,KAE1B/D,IAASD,MAqFD,WAKJ,kBAACpC,GAAD,KACGS,EAAiBuD,KAAI,SAACkB,GACrB,IAAIuB,EAAa,QAQjB,MAPsB,gBAAb,OAALvB,QAAK,IAALA,OAAA,EAAAA,EAAOf,QACTsC,EAAa,OACc,UAAb,OAALvB,QAAK,IAALA,OAAA,EAAAA,EAAOf,QAChBsC,EAAa,QACc,UAAb,OAALvB,QAAK,IAALA,OAAA,EAAAA,EAAOf,UAChBsC,EAAa,QAGb,kBAACxG,GAAD,CACEyG,UAAWD,EACXN,QAAS,kBAzKU/B,EA0KM,OAACc,QAAD,IAACA,OAAD,EAACA,EAAOd,YAzK9B,UAyKsB,OAAgBc,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOf,UAtKpC,IAFPtC,GAAe8E,QAAO,SAACzB,GAAD,OAAWA,IAAUd,KAE/CjE,QACT2B,GAAkB,GAAD,mBAAKD,IAAL,CAAqBuC,KAExCnB,QAAQC,IAAIrB,MAPgB,IAACuC,GA4KnBrE,MAAO0G,GALT,OAOGvB,QAPH,IAOGA,OAPH,EAOGA,EAAOd,aAMlB,kBAAClE,GAAD,CAAuBC,OAAQ0B,GAAe1B,QAC5C,yBAAKwF,MAAO,CAAEO,MAAO,UAClBrE,GAAemC,KAAI,SAACkB,GAAD,OAClB,kBAACjF,GAAD,CACEF,MAAO,OACPoG,QAAS,kBA9KkB,SAAC/B,GACtC,IAAMwC,EAAS/E,GAAe8E,QAAO,SAACzB,GAAD,OAAWA,GAASd,KACzDtC,GAAkB8E,GA4KOC,CAA+B3B,KAE7CA,OAIP,6BACE,2BACGrD,GAAe1B,OADlB,YAC4BU,QAD5B,IAC4BA,OAD5B,EAC4BA,EAAMgF,MADlC,QAC8C,IAC3ChE,GAAe1B,OAASmD,SAAS,GAAD,cAAIzC,QAAJ,IAAIA,OAAJ,EAAIA,EAAMgF,QAAU,KAEvD,kBAACzF,GAAD,CAAoB+F,QAlWO,6CAkW3B,gBCnXV,IAAMW,GAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVrB,OAAQ,KAIG,SAASsB,KACtB,IAAMC,EAAUL,KACVM,EAAWC,cAFc,EAGL/G,mBAAkB,IAHb,mBAGxBgH,EAHwB,KAGjBC,EAHiB,OAIHjH,mBAAmB,IAJhB,mBAIxBU,EAJwB,KAIhBC,EAJgB,KA6B/B,OAvBAqB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,WADjC,gBACUC,EADV,EACUA,KAERxB,EAAUwB,GAHZ,4CADc,uBAAC,WAAD,wBAMdqB,KACC,IAEHxB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IAQD,kBAACvG,EAAD,KACGgK,EAAMnH,OAAS,EACZmH,EAAMtD,KAAI,SAACnD,GAAD,OACR,kBAAC2G,EAAA,EAAD,CACEd,UAAWS,EAAQH,KACnBrB,MAAO,CAAEO,MAAO,MAAOuB,SAAU,QAAQ7B,OAAQ,wBAEjD,kBAAC8B,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,kBAAmB,IACnBC,mBAAoB,GACpBC,YAAa,EACbC,aAAa,GAGb,kBAAC,IAAD,KACG9G,EAAOgD,KAAI,SAACuB,EAAOC,GAAR,OACVD,EAAMJ,gBAAkBtE,EAAKK,QAC3B,kBAAC,IAAD,CAAOsE,MAAOA,EAAOG,MAAO,CAAEoC,OAAQ,UACpC,yBACEpC,MAAO,CAACqC,UAAU,cAClBC,IAAK1C,EAAM2C,KACXH,OAAO,OACP7B,MAAM,OACNT,IAAKF,EAAMG,WACXL,MAAOE,EAAM2C,QAIjB,0CAKR,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7C1H,EAAKwE,OAER,kBAAC+C,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7C1H,EAAKyE,UAER,kBAAC8C,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,KAEV,kBAAC,IAAD,CACEzC,OAAQjF,EAAKkF,YACbC,YAAY,KAGhB,kBAACoC,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,KAHZ,MAKM1H,EAAKgF,OAEX,kBAACuC,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,IACV5C,MAAO,CACLO,MAAO,OACP6B,OAAQ,OACRS,aAAc,QACdC,gBAAgB,GAAD,OACG,WAAhB5H,EAAKsD,OAAsB,QAAU,YAM/C,kBAACuE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,SAAS7I,MAAM,UAAU4F,MAAO,CAACS,QAAQ,GAAD,OAAoB,WAAhBvF,EAAKsD,OAAoB,QAAQ,SAAYgC,QAAS,kBAjFpG9C,EAiFyHxC,EAAKK,QAhFrJnE,eAAe8L,QAAQ,UAAvB,UAAoCxF,SAEpC+D,EAAiB,CAAE0B,KAAM,MAAOC,MAAOC,KAHzC,IAAyB3F,IAiFX,mBAMN,ICvIV,IAAM4F,GAAcC,YAAgB,CAChCC,OCGW,WAAoF,IAA7DJ,EAA4D,uDAA1CK,GAA0BC,EAAgB,uCAChG,OAAQA,EAAOP,MACb,IAAK,MACHC,EAAQM,EAAON,MACf,MACF,QACE,OAAOA,EAGX,OAAOA,KDPMO,GAFDC,YAAYN,I,6IES1B,SAASO,KACP,OACE,kBAACpB,EAAA,EAAD,CAAYE,QAAQ,QAAQvI,MAAM,gBAAgB0J,MAAM,UACrD,kBACD,kBAACC,GAAA,EAAD,CAAM3J,MAAM,UAAU4J,KAAK,mCAA3B,mCAEQ,KACP,IAAI/L,MAAOgM,cACX,KAKP,IAAM9C,GAAYC,aAAW,SAAC8C,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzB5D,QAAS,OACT6D,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNvE,OAAQiE,EAAMG,QAAQ,GACtBvB,gBAAiBoB,EAAMO,QAAQC,UAAUC,MAE3CC,KAAM,CACJrE,MAAO,OACP6D,UAAWF,EAAMG,QAAQ,IAE3BQ,OAAQ,CACN5E,OAAQiE,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASS,KACtB,IAAMtD,EAAUL,KADc,EAEJxG,mBAAS,IAFL,mBAEvBoK,EAFuB,KAEhBC,EAFgB,OAGErK,mBAAS,IAHX,mBAGvBsK,EAHuB,KAGbC,EAHa,OAIYvK,qBAJZ,mBAIvBwK,EAJuB,KAIRC,EAJQ,iDAM9B,gCAAAxI,EAAA,yDACQoC,EAAUE,KAAKmG,UAAU,CAC7BC,SAAUP,EACVE,eAGEF,EAAMvK,OAAS,GAAKyK,EAASzK,OAAS,GAN5C,gCAO2BlD,EAAImI,KAAK,SAAUT,EAAS,CACjDtH,QAAS,CACP,eAAgB,sBATxB,gBAauB,iBANXoF,EAPZ,EAOYA,MAONsI,EAAiB,kBAACG,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAClB,iBAARA,IAChB1F,eAAe8L,QAAQ,QAASpG,EAAK3F,OACrCC,eAAe8L,QAAQ,OAAQhE,KAAKmG,UAAUvI,EAAI,KAAS,KAC3DsI,EAAiB,kBAACG,GAAA,EAAD,CAAOC,SAAS,WAAhB,wBACjBC,OAAOC,SAAS1B,KAAhB,cAnBN,4CAN8B,sBA8B9B,OACE,kBAAC,KAAD,CAAWpB,UAAU,OAAOtB,SAAS,MACnC,kBAACqE,GAAA,EAAD,MACA,yBAAK5E,UAAWS,EAAQ2C,OACtB,kBAACyB,GAAA,EAAD,CAAQ7E,UAAWS,EAAQgD,QACzB,kBAAC,KAAD,OAEF,kBAAC/B,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,MAAnC,SAGA,0BACE5B,UAAWS,EAAQoD,KACnBiB,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBACnBC,YAAY,GAEZ,kBAACC,GAAA,EAAD,CACEtD,QAAQ,WACR1C,OAAO,SACPiG,UAAQ,EACRC,WAAS,EACTzI,GAAG,QACH0I,MAAM,gBACN7D,KAAK,QACL8D,SAAU,SAACxF,GAAD,OAAamE,EAASnE,EAAQyF,OAAOpG,QAC/CqG,aAAa,QACbC,WAAS,IAEX,kBAACP,GAAA,EAAD,CACEtD,QAAQ,WACR1C,OAAO,SACPiG,UAAQ,EACRC,WAAS,EACT5D,KAAK,WACL6D,MAAM,WACNC,SAAU,SAACxF,GAAD,OAAaqE,EAAYrE,EAAQyF,OAAOpG,QAClDiD,KAAK,WACLzF,GAAG,WACH6I,aAAa,qBAEf,kBAACE,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUzG,MAAM,WAAW9F,MAAM,YAC1CgM,MAAM,gBAEPjB,EACD,kBAACnC,EAAA,EAAD,CACEG,KAAK,SACLgD,WAAS,EACTxD,QAAQ,YACRvI,MAAM,UACNoG,QA/EoB,2CAgFpBO,UAAWS,EAAQqD,QANrB,WAUA,kBAAC+B,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAM7H,MAAI,EAAC+H,IAAE,GACX,kBAAC/C,GAAA,EAAD,CAAMC,KAAK,mBAAmBrB,QAAQ,SAAtC,wBAIF,kBAACiE,GAAA,EAAD,CAAM7H,MAAI,GACR,kBAACgF,GAAA,EAAD,CAAMC,KAAK,oBAAoBrB,QAAQ,SAAvC,+BAOR,kBAACoE,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACnD,GAAD,Q,yBCpIR,SAASA,KACP,OACE,kBAACpB,EAAA,EAAD,CAAYE,QAAQ,QAAQvI,MAAM,gBAAgB0J,MAAM,UACrD,kBACD,kBAACC,GAAA,EAAD,CAAM3J,MAAM,UAAU4J,KAAK,mCAA3B,mCAEQ,KACP,IAAI/L,MAAOgM,cACX,KAKP,IAAM9C,GAAYC,aAAW,SAAC8C,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzB5D,QAAS,OACT6D,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNvE,OAAQiE,EAAMG,QAAQ,GACtBvB,gBAAiBoB,EAAMO,QAAQC,UAAUC,MAE3CC,KAAM,CACJrE,MAAO,OACP6D,UAAWF,EAAMG,QAAQ,IAE3BQ,OAAQ,CACN5E,OAAQiE,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAAS4C,KACtB,IAAMzF,EAAUL,KADwB,EAElBxG,mBAAS,IAFS,mBAEjCuM,EAFiC,KAE5BC,EAF4B,OAGdxM,mBAAS,IAHK,mBAGjCoK,EAHiC,KAG1BC,EAH0B,OAIErK,qBAJF,mBAIjCwK,EAJiC,KAIlBC,EAJkB,iDAQxC,gCAAAxI,EAAA,yDACQoC,EAAUE,KAAKmG,UAAU,CAC7B6B,MACAnC,UAGiB,KAAfmC,EAAI1M,OANV,gCAO2BlD,EAAImI,KAAK,oBAAqBT,EAAS,CAC5DtH,QAAS,CACP,eAAgB,sBATxB,gBAaiB,oDANLoF,EAPZ,EAOYA,MAONsI,EAAiB,kBAACG,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAC1B,qCAATA,EACTsI,EAAiB,kBAACG,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACxB,kEAATA,GACTsI,EAAiB,kBAACG,GAAA,EAAD,CAAOC,SAAS,QAAQ1I,IAlB/C,4CARwC,sBA+BxC,OACE,kBAAC,KAAD,CAAW8F,UAAU,OAAOtB,SAAS,MACnC,kBAACqE,GAAA,EAAD,MACA,yBAAK5E,UAAWS,EAAQ2C,OACtB,kBAACyB,GAAA,EAAD,CAAQ7E,UAAWS,EAAQgD,QACzB,kBAAC,KAAD,OAEF,kBAAC/B,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,MAAnC,8BAGA,0BACE5B,UAAWS,EAAQoD,KACnBiB,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBACnBC,YAAY,GAEZ,kBAACC,GAAA,EAAD,CACEtD,QAAQ,WACR1C,OAAO,SACPiG,UAAQ,EACRC,WAAS,EACTzI,GAAG,MACH0I,MAAM,MACNC,SAAU,SAACxF,GAAD,OACRsG,EAAOtG,EAAQyF,OAAOpG,MAAMkH,QAAQ,UAAW,MAEjD7E,KAAK,MACLgE,aAAa,MACbC,WAAS,IAEX,kBAACP,GAAA,EAAD,CACEtD,QAAQ,WACR1C,OAAO,SACPiG,UAAQ,EACRC,WAAS,EACTzI,GAAG,QACH0I,MAAM,QACNC,SAAU,SAACxF,GAAD,OAAamE,EAASnE,EAAQyF,OAAOpG,QAC/CqC,KAAK,QACLgE,aAAa,QACbC,WAAS,IAEVrB,EACD,kBAACnC,EAAA,EAAD,CACEG,KAAK,SACLgD,WAAS,EACTxD,QAAQ,YACRvI,MAAM,UACNoG,QA9E8B,2CA+E9BO,UAAWS,EAAQqD,QANrB,YAYJ,kBAACkC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,Q,yBCvHR,SAASnD,KACP,OACE,kBAACpB,EAAA,EAAD,CAAYE,QAAQ,QAAQvI,MAAM,gBAAgB0J,MAAM,UACrD,kBACD,kBAACC,GAAA,EAAD,CAAM3J,MAAM,UAAU4J,KAAK,mCAA3B,mCAEQ,KACP,IAAI/L,MAAOgM,cACX,KAKP,IAAM9C,GAAYC,aAAW,SAAC8C,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzB5D,QAAS,OACT6D,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNvE,OAAQiE,EAAMG,QAAQ,GACtBvB,gBAAiBoB,EAAMO,QAAQC,UAAUC,MAE3CC,KAAM,CACJrE,MAAO,OACP6D,UAAWF,EAAMG,QAAQ,IAE3BQ,OAAQ,CACN5E,OAAQiE,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASgD,KACtB,IAAM7F,EAAUL,KADyB,EAEnBxG,mBAAS,IAFU,mBAElCuM,EAFkC,KAE7BC,EAF6B,OAGjBxM,mBAAS,IAHQ,mBAGlC4H,EAHkC,KAG5B+E,EAH4B,OAIf3M,mBAAS,IAJM,mBAIlCoK,EAJkC,KAI3BC,EAJ2B,OAKfrK,mBAAS,IALM,mBAKlC4M,EALkC,KAK3BC,EAL2B,OAMT7M,mBAAS,IANA,mBAMlCsK,EANkC,KAMxBC,EANwB,OAOXvK,mBAAS,IAPE,mBAOlC8M,EAPkC,KAOzBC,EAPyB,OAQC/M,qBARD,mBAQlCwK,EARkC,KAQnBC,EARmB,iDAUzC,gCAAAxI,EAAA,yDACQoC,EAAU,CACdkI,MACA3E,OACAwC,QACAwC,QACAtC,WACAwC,aAGe,KAAfP,EAAI1M,QACJ+H,EAAK/H,OAAS,GACduK,EAAMvK,OAAS,GACf+M,EAAM/M,QAAU,GAChByK,EAASzK,QAAU,GACnBiN,EAAQjN,OAAS,IAfrB,gCAiB2BlD,EAAImI,KAAK,QAAST,EAAS,CAChDtH,QAAS,CACP,eAAgB,sBAnBxB,gBAuBiB,gCANLoF,EAjBZ,EAiBYA,MAONsI,EAAiB,kBAACG,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAC1B,yBAATA,EACTsI,EAAiB,kBAACG,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACxB,qDAATA,GACTsI,EAAiB,kBAACG,GAAA,EAAD,CAAOC,SAAS,QAAQ1I,IA5B/C,4CAVyC,sBA2CzC,OACE,kBAAC,KAAD,CAAW8F,UAAU,OAAOtB,SAAS,MACnC,kBAACqE,GAAA,EAAD,MACA,yBAAK5E,UAAWS,EAAQ2C,OACtB,kBAACyB,GAAA,EAAD,CAAQ7E,UAAWS,EAAQgD,QACzB,kBAAC,KAAD,OAEF,kBAAC/B,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,MAAnC,uBAGA,0BACE5B,UAAWS,EAAQoD,KACnBiB,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBACnBC,YAAY,GAEZ,kBAACC,GAAA,EAAD,CACEtD,QAAQ,WACR1C,OAAO,SACPoG,SAAU,SAACxF,GAAD,OACRsG,EAAOtG,EAAQyF,OAAOpG,MAAMkH,QAAQ,UAAW,MAEjDlB,UAAQ,EACRC,WAAS,EACTzI,GAAG,MACH0I,MAAM,MACN7D,KAAK,MACLgE,aAAa,MACbC,WAAS,IAEX,kBAACP,GAAA,EAAD,CACEtD,QAAQ,WACR1C,OAAO,SACPoG,SAAU,SAACxF,GAAD,OAAayG,EAAQzG,EAAQyF,OAAOpG,QAC9CgG,UAAQ,EACRC,WAAS,EACTzI,GAAG,OACH0I,MAAM,OACN7D,KAAK,OACLgE,aAAa,OACbC,WAAS,IAEX,kBAACP,GAAA,EAAD,CACEtD,QAAQ,WACR1C,OAAO,SACPoG,SAAU,SAACxF,GAAD,OAAamE,EAASnE,EAAQyF,OAAOpG,QAC/CgG,UAAQ,EACRC,WAAS,EACTzI,GAAG,QACH0I,MAAM,QACN7D,KAAK,QACLgE,aAAa,QACbC,WAAS,IAEX,kBAACP,GAAA,EAAD,CACEtD,QAAQ,WACR1C,OAAO,SACPoG,SAAU,SAACxF,GAAD,OACR2G,EAAS3G,EAAQyF,OAAOpG,MAAMkH,QAAQ,UAAW,MAEnDlB,UAAQ,EACRC,WAAS,EACTzI,GAAG,QACH0I,MAAM,WACN7D,KAAK,QACLgE,aAAa,QACbC,WAAS,IAEX,kBAACP,GAAA,EAAD,CACEtD,QAAQ,WACR1C,OAAO,SACPoG,SAAU,SAACxF,GAAD,OAAaqE,EAAYrE,EAAQyF,OAAOpG,QAClDgG,UAAQ,EACRC,WAAS,EACTzI,GAAG,WACH0I,MAAM,WACN7D,KAAK,WACLgE,aAAa,WACbC,WAAS,IAEX,kBAACP,GAAA,EAAD,CACEtD,QAAQ,WACR1C,OAAO,SACPoG,SAAU,SAACxF,GAAD,OAAa6G,EAAW7G,EAAQyF,OAAOpG,QACjDgG,UAAQ,EACRC,WAAS,EACTzI,GAAG,UACH0I,MAAM,cACN7D,KAAK,UACLgE,aAAa,UACbC,WAAS,IAEVrB,EACD,kBAACnC,EAAA,EAAD,CACEG,KAAK,SACLgD,WAAS,EACTxD,QAAQ,YACRvI,MAAM,UACNoG,QA5I+B,2CA6I/BO,UAAWS,EAAQqD,QANrB,eAYJ,kBAACkC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,Q,ghBCrMD,IAAMrP,GAAYC,IAAOC,IAAV,MCiBhBsJ,GAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVrB,OAAQ,KAIG,SAASsB,KACtB,IAAMC,EAAUL,KADe,GAEdO,cACS/G,mBAAkB,KAHb,mBAGxBgH,EAHwB,KAGjBC,EAHiB,OAIHjH,mBAAmB,IAJhB,mBAIxBU,EAJwB,KAIhBC,EAJgB,KAwB/B,OAlBAqB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,WADjC,gBACUC,EADV,EACUA,KAERxB,EAAUwB,GAHZ,4CADc,uBAAC,WAAD,wBAMdqB,KACC,IAEHxB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IAGD,kBAAC,GAAD,KACGyD,EAAMnH,OAAS,EACZmH,EAAMtD,KAAI,SAACnD,GAAD,OACR,kBAAC2G,EAAA,EAAD,CACEd,UAAWS,EAAQH,KACnBrB,MAAO,CAAEO,MAAO,MAAOuB,SAAU,QAAS7B,OAAQ,qBAElD,kBAAC8B,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,kBAAmB,IACnBC,mBAAoB,GACpBC,YAAa,EACbC,aAAa,GAEb,kBAAC,IAAD,KACG9G,EAAOgD,KAAI,SAACuB,EAAOC,GAAR,OACVD,EAAMJ,gBAAkBtE,EAAKK,QAC3B,kBAAC,IAAD,CAAOsE,MAAOA,EAAOG,MAAO,CAAEoC,OAAQ,UACpC,yBACEpC,MAAO,CAAEqC,UAAW,cACpBC,IAAK1C,EAAM2C,KACXH,OAAO,OACP7B,MAAM,OACNT,IAAKF,EAAMG,WACXL,MAAOE,EAAM2C,QAIjB,0CAKR,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7C1H,EAAKwE,OAER,kBAAC+C,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7C1H,EAAKyE,UAER,kBAAC8C,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,KAEV,kBAAC,IAAD,CACEzC,OAAQjF,EAAKkF,YACbC,YAAY,KAGhB,kBAACoC,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,KAHZ,MAKM1H,EAAKgF,OAEX,kBAACuC,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,IACV5C,MAAO,CACLO,MAAO,OACP6B,OAAQ,OACRS,aAAc,QACdC,gBAAgB,GAAD,OACG,WAAhB5H,EAAKsD,OAAsB,QAAU,gBAQnD,I,0ECrHJ2C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACJ+F,OAAQiE,EAAMG,QAAQ,SAIf,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGN/F,IAAMT,SAAS,IAHT,mBAGxB+E,EAHwB,KAGlBqI,EAHkB,OAIH3M,IAAMT,SAAiB,IAJpB,mBAIxB6D,EAJwB,KAIhBwJ,EAJgB,OAKO5M,IAAMT,SAAiB,IAL9B,mBAKxByF,EALwB,KAKX6H,EALW,OAMC7M,IAAMT,SAAiB,IANxB,mBAMxBgF,EANwB,KAMduI,EANc,OAQN9M,IAAMT,SAAiB,GARjB,mBAQxBuF,EARwB,KAQlBiI,EARkB,OASR/M,IAAMT,SAAiB,oBATf,mBASxBiD,EATwB,KASnBwK,EATmB,OAUKhN,IAAMT,UAAS,GAVpB,mBAUxB0N,EAVwB,KAUZC,EAVY,OAWAlN,IAAMT,WAXN,mBAWxB4D,EAXwB,KAWfgK,EAXe,iDAoC/B,gCAAA3L,EAAA,6DACQoC,EAAU,CACZU,QACAC,WACAnB,SACA0B,QACAE,cACAjD,UAAWS,GAPjB,SAUwBtG,EAAImI,KAAK,QAAQT,GAVzC,gBAWe,+BADNlC,EAVT,EAUSA,MAEHyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACtB,+BAATA,GACNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAd7C,4CApC+B,sBA8D/B,OACE,0BAAMiE,UAAWS,EAAQH,KAAM2E,YAAY,EAAOH,SAAU,SAAA2C,GAAK,OAAIA,EAAMzC,kBAAkBQ,aAAa,OACxG,kBAACkC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAOxI,GAAG,iBAAiB0I,MAAM,SAASlG,MAAOR,EAAO2G,SA7CzD,SAACmC,GACzBT,EAASS,EAAMlC,OAAOpG,WA8CpB,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAMG,SApDJ,SAACmC,GAC5BN,EAAYM,EAAMlC,OAAOpG,QAmDuCA,MAAOP,EAAUjC,GAAG,iBAAiB0I,MAAM,eAEzG,kBAACqC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACzC,kBAACgG,GAAA,EAAD,CAAWvI,GAAG,iBAAiBwI,UAAU,EAAME,MAAM,kBAAkBjD,KAAK,iBAAiBjD,MAAOtC,EAAMyI,SA/CtF,SAACmC,GACxBJ,EAAQI,EAAMlC,OAAOpG,QA8CqHa,UAAWS,EAAQsG,UAAWY,gBAAiB,CAAEC,QAAQ,MAEjM,kBAACF,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWvI,GAAG,4BAA4BwI,UAAU,EAAMG,SA1ChC,SAACmC,GAC/BP,EAAeO,EAAMlC,OAAOpG,QAyCqEkG,MAAM,kBAAYwC,WAAS,EAAE1I,MAAOE,KAEnI,kBAACqI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QAC1C,kBAAC4I,GAAA,EAAD,CAAYC,QAAQ,6BAApB,SACE,kBAACC,GAAA,EAAD,CAAOrL,GAAG,4BAA4BwC,MAAOA,EAAOgG,UAAU,EAAMG,SAlDhD,SAACmC,GACzBL,EAASK,EAAMlC,OAAOpG,QAiD+E8I,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,QAEnH,kBAACT,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAACO,MAAO,SACf6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMhB,EACNiB,QAjCkB,WACxBhB,GAAc,IAiCRiB,OA9BiB,WACvBjB,GAAc,IA8BRpI,MAAO1B,EACP6H,SA7EmB,SAACmC,GAC1BR,EAAUQ,EAAMlC,OAAOpG,QA6EjBgG,UAAU,GAEV,kBAACsD,GAAA,EAAD,CAAUtJ,MAAM,UAAhB,SACA,kBAACsJ,GAAA,EAAD,CAAUtJ,MAAM,UAAhB,aAGJ,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CAAQL,QAAQ,YAAYvI,MAAM,UAAU+I,KAAK,SAAS3C,QAlGjC,2CAkGmDR,MAAO,CAACO,MAAM,SAAWQ,UAAWS,EAAQtH,QAAxH,aAIDqE,GCzHP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACJ+F,OAAQiE,EAAMG,QAAQ,SAIf,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGF/F,IAAMT,WAHJ,mBAGxBY,EAHwB,KAGhBkO,EAHgB,OAINrO,IAAMT,SAAkB,IAJlB,mBAIxBgH,EAJwB,KAIlBC,EAJkB,OAKNxG,IAAMT,SAA2B,IAL3B,mBAKxB+E,EALwB,KAKlBqI,EALkB,OAMH3M,IAAMT,SAA2B,IAN9B,mBAMxB6D,EANwB,KAMhBwJ,EANgB,OAOO5M,IAAMT,SAA2B,IAPxC,mBAOxByF,EAPwB,KAOX6H,EAPW,OAQC7M,IAAMT,SAA2B,IARlC,mBAQxBgF,EARwB,KAQduI,EARc,OASN9M,IAAMT,SAA2B,GAT3B,mBASxBuF,EATwB,KASlBiI,EATkB,OAUR/M,IAAMT,SAA2B,IAVzB,mBAUxBiD,EAVwB,KAUnBwK,EAVmB,OAWKhN,IAAMT,UAAS,GAXpB,mBAWxB0N,EAXwB,KAWZC,EAXY,OAYOlN,IAAMT,UAAS,GAZtB,mBAYxB+O,EAZwB,KAYXC,EAZW,OAcAvO,IAAMT,WAdN,mBAcxB4D,EAdwB,KAcfgK,EAde,iDA2D/B,gCAAA3L,EAAA,6DACQoC,EAAU,CACZzD,UACAmE,QACAC,WACAnB,SACA0B,QACAE,cACAjD,UAAWS,GARjB,SAWwBtG,EAAIsS,IAAI,QAAQ5K,GAXxC,gBAYe,mCADNlC,EAXT,EAWSA,MAEHyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACtB,mCAATA,GACNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAf7C,4CA3D+B,sBAkD/BH,qBAAU,WAAI,4CACZ,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACWC,EADX,EACWA,KAEP8E,EAAS9E,GAHb,4CADY,uBAAC,WAAD,wBAMZoB,KACA,IAqCF,OACE,0BAAM6C,UAAWS,EAAQH,KAAM2E,YAAY,EAAOH,SAAU,SAAA2C,GAAK,OAAIA,EAAMzC,kBAAkBQ,aAAa,OACtG,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAChC,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAACO,MAAO,SACf6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMK,EACNJ,QAjBmB,WACzBK,GAAe,IAiBTJ,OAdiB,WACvBI,GAAe,IAcTzJ,MAAO3E,EACP2K,UAAU,GAGRvE,EAAMtD,KAAI,SAACnD,EAAK2E,GAAN,OACN,kBAAC2J,GAAA,EAAD,CAAUK,IAAK3O,EAAKK,QAAS2E,MAAOhF,EAAKK,QAASiF,QAAS,kBA1FhD,SAAC9C,EAAoBmC,GAC5C4J,EAAW/L,GACXqK,EAASpG,EAAM9B,GAAOH,OACtBuI,EAAetG,EAAM9B,GAAOO,aAC5B8H,EAAYvG,EAAM9B,GAAOF,UACzBwI,EAASxG,EAAM9B,GAAOK,OACtBkI,EAAQzG,EAAM9B,GAAO1C,WACrB6K,EAAUrG,EAAM9B,GAAOrB,QAmFqDsL,CAAiB5O,EAAKK,QAAQsE,KAAW3E,EAAKwE,YAMxH,kBAAC+I,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAOxI,GAAG,iBAAiB0I,MAAM,SAASlG,MAAOR,EAAO2G,SAnFzD,SAACmC,GACzBT,EAASS,EAAMlC,OAAOpG,WAoFpB,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAMG,SA1FJ,SAACmC,GAC5BN,EAAYM,EAAMlC,OAAOpG,QAyFuCA,MAAOP,EAAUjC,GAAG,iBAAiB0I,MAAM,eAEzG,kBAACqC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACzC,kBAACgG,GAAA,EAAD,CAAWvI,GAAG,iBAAiBwI,UAAU,EAAME,MAAM,kBAAkBjD,KAAK,iBAAiBjD,MAAOtC,EAAMyI,SArFtF,SAACmC,GACxBJ,EAAQI,EAAMlC,OAAOpG,QAoFqHa,UAAWS,EAAQsG,UAAWY,gBAAiB,CAAEC,QAAQ,MAEjM,kBAACF,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWvI,GAAG,4BAA4BwI,UAAU,EAAMG,SAhFhC,SAACmC,GAC/BP,EAAeO,EAAMlC,OAAOpG,QA+EqEkG,MAAM,kBAAYwC,WAAS,EAAE1I,MAAOE,KAEnI,kBAACqI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QAC1C,kBAAC4I,GAAA,EAAD,CAAYC,QAAQ,6BAApB,SACE,kBAACC,GAAA,EAAD,CAAOrL,GAAG,4BAA4BwC,MAAOA,EAAOgG,UAAU,EAAMG,SAxFhD,SAACmC,GACzBL,EAASK,EAAMlC,OAAOpG,QAuF+E8I,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,QAEnH,kBAACT,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAACO,MAAO,SACf6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMhB,EACNiB,QA7DkB,WACxBhB,GAAc,IA6DRiB,OA1DiB,WACvBjB,GAAc,IA0DRpI,MAAO1B,EACP6H,SA9HmB,SAACmC,GAC1BR,EAAUQ,EAAMlC,OAAOpG,QA8HjBgG,UAAU,GAEV,kBAACsD,GAAA,EAAD,CAAUtJ,MAAM,UAAhB,SACA,kBAACsJ,GAAA,EAAD,CAAUtJ,MAAM,UAAhB,aAGJ,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CAAQL,QAAQ,YAAYvI,MAAM,UAAU+I,KAAK,SAAS3C,QAtJjC,2CAsJmDR,MAAO,CAACO,MAAM,SAAWQ,UAAWS,EAAQtH,QAAxH,cAIDqE,GC1KP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGD/F,IAAMT,WAHL,mBAGxBY,EAHwB,KAGfkO,EAHe,OAILrO,IAAMT,SAAkB,IAJnB,mBAIxBgH,EAJwB,KAIjBC,EAJiB,OAKOxG,IAAMT,UAAS,GALtB,mBAKxB+O,EALwB,KAKXC,EALW,OAOCvO,IAAMT,WAPP,mBAOxB4D,EAPwB,KAOdgK,EAPc,iDAsB/B,8BAAA3L,EAAA,sEAEyBmN,MAAY,QAAS,CAC1CC,KAAM9K,KAAKmG,UAAU,CACnB9J,QAAQA,IAEV7D,QAAS,CACR,eAAgB,mBACfuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WAVZ,cAEQ3L,EAFR,gBAYqBA,EAAS4L,OAZ9B,OAcgB,iCAFRrN,EAZR,QAeOyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACtB,iCAATA,GACNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAjB9C,4CAtB+B,sBAa/BH,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IA+BH,OACE,0BACE6C,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMK,EACNJ,QAtBmB,WACzBK,GAAe,IAsBTJ,OAnBkB,WACxBI,GAAe,IAmBTzJ,MAAO3E,EACP2K,UAAU,GAETvE,EAAMtD,KAAI,SAACnD,EAAM2E,GAAP,OACT,kBAAC2J,GAAA,EAAD,CACEK,IAAK3O,EAAKK,QACV2E,MAAOhF,EAAKK,QACZiF,QAAS,kBAjEK9C,EAiEkBxC,EAAKK,aAhE/CkO,EAAW/L,GADY,IAACA,IAmEbxC,EAAKwE,YAKd,kBAAC+I,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAtFuB,2CAuFvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,YAWDqE,G,yJC5HA,IAAM5G,GAAYC,IAAOC,IAAV,MCahBsJ,GAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVrB,OAAQ,KAIG,SAASmK,KACtB,IAAM5I,EAAUL,KADa,EAGC/F,IAAMT,SAAqB,IAH5B,mBAGtB0P,EAHsB,KAGbC,EAHa,KAc7B,SAASC,EAAgBC,GACvB,IAAM5M,EAAO,IAAI3F,KAAJ,UAAYuS,EAAOC,cAChC,OAAO9Q,EACL,IAAI1B,KACF2F,EAAKI,iBACLJ,EAAK8M,cACL9M,EAAK+M,UACL/M,EAAKgN,cACLhN,EAAKiN,gBACLjN,EAAKkN,kBAKX,OAvBAnO,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,YADjC,gBACUC,EADV,EACUA,KAERwN,EAAWxN,GAHb,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IAiBD,kBAAC,GAAD,KACGmM,EAAQ7P,OAAS,EACd6P,EAAQhM,KAAI,SAACmM,GAAD,OACV,kBAAC3I,EAAA,EAAD,CACEd,UAAWS,EAAQH,KACnBrB,MAAO,CACLO,MAAO,MACPuB,SAAU,QACV7B,OAAQ,qBAGV,kBAAC8B,EAAA,EAAD,KACE,kBAACgJ,GAAA,EAAD,CACEnI,UAAU,MACVN,IAAKkI,EAAO9K,MACZ0C,OAAO,MACPxC,MAAO4K,EAAO5K,MACdF,MAAO8K,EAAO9K,QAEhB,kBAAC8C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7C4H,EAAO9K,OAEV,kBAAC+C,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7C4H,EAAO7K,UAEV,kBAAC8C,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,KAEV,kBAAC,IAAD,CACEzC,OAAQqK,EAAOpK,YACfC,YAAY,KAGhB,kBAACoC,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,KAHZ,MAKM4H,EAAOtK,OAEb,kBAACuC,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,KAHZ,uBAKuB2H,EAAgBC,GAAQtS,KAL/C,UAK4D,IACzDqS,EAAgBC,GAAQnS,MAN3B,YAM2C,IACxCkS,EAAgBC,GAAQlS,SAE3B,kBAACmK,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,IACV5C,MAAO,CACLO,MAAO,OACP6B,OAAQ,OACRS,aAAc,QACdC,gBAAgB,GAAD,OACI,UAAjB0H,EAAOhM,OAAqB,QAAU,gBAQpD,I,wBC9GJ2C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACJ+F,OAAQiE,EAAMG,QAAQ,SAIf,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGN/F,IAAMT,SAAS,IAHT,mBAGxB+E,EAHwB,KAGlBqI,EAHkB,OAIH3M,IAAMT,SAAiB,IAJpB,mBAIxB6D,EAJwB,KAIhBwJ,EAJgB,OAKO5M,IAAMT,SAAiB,IAL9B,mBAKxByF,EALwB,KAKX6H,EALW,OAMC7M,IAAMT,SAAiB,IANxB,mBAMxBgF,EANwB,KAMduI,EANc,OAON9M,IAAMT,SAAiB,IAPjB,mBAOxBiF,EAPwB,KAOlBoL,EAPkB,OAQN5P,IAAMT,SAAiB,GARjB,mBAQxBuF,EARwB,KAQlBiI,EARkB,OASR/M,IAAMT,SAAiB,oBATf,mBASxBiD,EATwB,KASnBwK,EATmB,OAUKhN,IAAMT,UAAS,GAVpB,mBAUxB0N,EAVwB,KAUZC,EAVY,OAWAlN,IAAMT,WAXN,mBAWxB4D,EAXwB,KAWfgK,EAXe,iDAyC/B,gCAAA3L,EAAA,6DACQoC,EAAU,CACZU,QACAC,WACAnB,SACAoB,QACAM,QACAE,cACAqK,YAAa7M,GARnB,SAWwBtG,EAAImI,KAAK,UAAUT,GAX3C,gBAYe,4BADNlC,EAXT,EAWSA,MAEHyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACtB,0BAATA,GACNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAf7C,4CAzC+B,sBAoE/B,OACE,0BAAMiE,UAAWS,EAAQH,KAAM2E,YAAY,EAAOH,SAAU,SAAA2C,GAAK,OAAIA,EAAMzC,kBAAkBQ,aAAa,OACxG,kBAACkC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAOxI,GAAG,iBAAiB0I,MAAM,SAASlG,MAAOR,EAAO2G,SA9CzD,SAACmC,GACzBT,EAASS,EAAMlC,OAAOpG,WA+CpB,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAMG,SA1DJ,SAACmC,GAC5BN,EAAYM,EAAMlC,OAAOpG,QAyDuCA,MAAOP,EAAUjC,GAAG,iBAAiB0I,MAAM,eAEzG,kBAACqC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACzC,kBAACgG,GAAA,EAAD,CAAWvI,GAAG,iBAAiBwI,UAAU,EAAME,MAAM,kBAAkBjD,KAAK,iBAAiBjD,MAAOtC,EAAMyI,SAhDtF,SAACmC,GACxBJ,EAAQI,EAAMlC,OAAOpG,QA+CqHa,UAAWS,EAAQsG,UAAWY,gBAAiB,CAAEC,QAAQ,MAEjM,kBAACF,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWvI,GAAG,4BAA4BwI,UAAU,EAAMG,SA3ChC,SAACmC,GAC/BP,EAAeO,EAAMlC,OAAOpG,QA0CqEkG,MAAM,kBAAYwC,WAAS,EAAE1I,MAAOE,KAEnI,kBAACqI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QAC1C,kBAAC4I,GAAA,EAAD,CAAYC,QAAQ,6BAApB,SACE,kBAACC,GAAA,EAAD,CAAOrL,GAAG,4BAA4BwC,MAAOA,EAAOgG,UAAU,EAAMG,SAnDhD,SAACmC,GACzBL,EAASK,EAAMlC,OAAOpG,QAkD+E8I,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,QAEnH,kBAACT,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QAC1C,kBAAC,KAAD,CACEgL,UAAW,EACXC,OArEmB,SAACC,GACxBH,EAASG,EAAKC,QACd9N,QAAQC,IAAI4N,OAqEV,kBAAC1C,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAACO,MAAO,SACf6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMhB,EACNiB,QAtCkB,WACxBhB,GAAc,IAsCRiB,OAnCiB,WACvBjB,GAAc,IAmCRpI,MAAO1B,EACP6H,SAxFmB,SAACmC,GAC1BR,EAAUQ,EAAMlC,OAAOpG,QAwFjBgG,UAAU,GAEV,kBAACsD,GAAA,EAAD,CAAUtJ,MAAM,UAAhB,SACA,kBAACsJ,GAAA,EAAD,CAAUtJ,MAAM,UAAhB,aAGJ,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CAAQL,QAAQ,YAAYvI,MAAM,UAAU+I,KAAK,SAAS3C,QA7GjC,2CA6GmDR,MAAO,CAACO,MAAM,SAAWQ,UAAWS,EAAQtH,QAAxH,aAIDqE,GCrIP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACJ+F,OAAQiE,EAAMG,QAAQ,SAIf,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGE/F,IAAMT,WAHR,mBAGxB0Q,EAHwB,KAGdC,EAHc,OAIFlQ,IAAMT,SAAqB,IAJzB,mBAIxB0P,EAJwB,KAIhBC,EAJgB,OAKNlP,IAAMT,SAA2B,IAL3B,mBAKxB+E,EALwB,KAKlBqI,EALkB,OAMH3M,IAAMT,SAA2B,IAN9B,mBAMxB6D,EANwB,KAMhBwJ,EANgB,OAOO5M,IAAMT,SAA2B,IAPxC,mBAOxByF,EAPwB,KAOX6H,EAPW,OAQC7M,IAAMT,SAA2B,IARlC,mBAQxBgF,EARwB,KAQduI,EARc,OASN9M,IAAMT,SAA2B,IAT3B,mBASxBiF,EATwB,KASlBoL,EATkB,OAUN5P,IAAMT,SAA2B,GAV3B,mBAUxBuF,EAVwB,KAUlBiI,EAVkB,OAWR/M,IAAMT,SAA2B,oBAXzB,mBAWxBiD,EAXwB,KAWnBwK,EAXmB,OAYKhN,IAAMT,UAAS,GAZpB,mBAYxB0N,EAZwB,KAYZC,EAZY,OAaAlN,IAAMT,WAbN,mBAaxB4D,EAbwB,KAafgK,EAbe,OAcWnN,IAAMT,UAAS,GAd1B,mBAcxB4Q,GAdwB,KAcTC,GAdS,mDA2D/B,gCAAA5O,EAAA,6DACQoC,EAAU,CACZU,QACAC,WACAnB,SACAoB,QACAM,QACAE,cACAqK,YAAa7M,EACbyN,aATN,SAYwB/T,EAAIsS,IAAI,UAAU5K,GAZ1C,gBAae,gCADNlC,EAZT,EAYSA,MAEHyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACtB,gCAATA,GACNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAhB7C,4CA3D+B,sBAwG/B,OATAH,qBAAU,WAAI,4CACZ,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,YADjC,gBACWC,EADX,EACWA,KAEPwN,EAAWxN,GAHf,4CADY,uBAAC,WAAD,wBAMZoB,KACA,IAGA,0BAAM6C,UAAWS,EAAQH,KAAM2E,YAAY,EAAOH,SAAU,SAAA2C,GAAK,OAAIA,EAAMzC,kBAAkBQ,aAAa,OACtG,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAChC,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,SACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAACO,MAAO,SACf6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkC,GACNjC,QA1BqB,WAC3BkC,IAAiB,IA0BXjC,OAvBoB,WAC1BiC,IAAiB,IAuBXtL,MAAOmL,EACPnF,UAAU,GAGRmE,EAAQhM,KAAI,SAACmM,EAAO3K,GAAR,OACR,kBAAC2J,GAAA,EAAD,CAAUK,IAAKW,EAAOa,UAAWnL,MAAOsK,EAAOa,UAAW7K,QAAS,kBAvGxD,SAAC9C,EAAoBmC,GAC5CyL,EAAa5N,GACbqK,EAASsC,EAAQxK,GAAOH,OACxBuI,EAAeoC,EAAQxK,GAAOO,aAC9B8H,EAAYmC,EAAQxK,GAAOF,UAC3BqL,EAASX,EAAQxK,GAAOD,OACxBuI,EAASkC,EAAQxK,GAAOK,OACxBkI,EAAQiC,EAAQxK,GAAO4K,aACvBzC,EAAUqC,EAAQxK,GAAOrB,QA+F2DsL,CAAiBU,EAAOa,UAAUxL,KAAW2K,EAAO9K,YAMtI,kBAAC+I,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAOxI,GAAG,iBAAiB0I,MAAM,SAASlG,MAAOR,EAAO2G,SApFzD,SAACmC,GACzBT,EAASS,EAAMlC,OAAOpG,WAqFpB,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAMG,SAlGJ,SAACmC,GAC5BN,EAAYM,EAAMlC,OAAOpG,QAiGuCA,MAAOP,EAAUjC,GAAG,iBAAiB0I,MAAM,eAEzG,kBAACqC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACzC,kBAACgG,GAAA,EAAD,CAAWvI,GAAG,iBAAiBwI,UAAU,EAAME,MAAM,kBAAkBjD,KAAK,iBAAiBjD,MAAOtC,EAAMyI,SAtFtF,SAACmC,GACxBJ,EAAQI,EAAMlC,OAAOpG,QAqFqHa,UAAWS,EAAQsG,UAAWY,gBAAiB,CAAEC,QAAQ,MAEjM,kBAACF,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWvI,GAAG,4BAA4BwI,UAAU,EAAMG,SAjFhC,SAACmC,GAC/BP,EAAeO,EAAMlC,OAAOpG,QAgFqEkG,MAAM,kBAAYwC,WAAS,EAAE1I,MAAOE,KAEnI,kBAACqI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QAC1C,kBAAC4I,GAAA,EAAD,CAAYC,QAAQ,6BAApB,SACE,kBAACC,GAAA,EAAD,CAAOrL,GAAG,4BAA4BwC,MAAOA,EAAOgG,UAAU,EAAMG,SAzFhD,SAACmC,GACzBL,EAASK,EAAMlC,OAAOpG,QAwF+E8I,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,QAEnH,kBAACT,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QAC1C,kBAAC,KAAD,CACEgL,UAAW,EACXC,OA3GmB,SAACC,GACxBH,EAASG,EAAKC,QACd9N,QAAQC,IAAI4N,OA2GV,kBAAC1C,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAACO,MAAO,SACf6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMhB,EACNiB,QA3EkB,WACxBhB,GAAc,IA2ERiB,OAxEiB,WACvBjB,GAAc,IAwERpI,MAAO1B,EACP6H,SAhImB,SAACmC,GAC1BR,EAAUQ,EAAMlC,OAAOpG,QAgIjBgG,UAAU,GAEV,kBAACsD,GAAA,EAAD,CAAUtJ,MAAM,UAAhB,SACA,kBAACsJ,GAAA,EAAD,CAAUtJ,MAAM,UAAhB,aAGJ,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CAAQL,QAAQ,YAAYvI,MAAM,UAAU+I,KAAK,SAAS3C,QArKjC,4CAqKmDR,MAAO,CAACO,MAAM,SAAWQ,UAAWS,EAAQtH,QAAxH,cAIDqE,GC1LP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGG/F,IAAMT,WAHT,mBAGxB0Q,EAHwB,KAGbC,EAHa,OAIDlQ,IAAMT,SAAqB,IAJ1B,mBAIxB0P,EAJwB,KAIfC,EAJe,OAMClP,IAAMT,WANP,mBAMxB4D,EANwB,KAMdgK,EANc,OAOWnN,IAAMT,UAAS,GAP1B,mBAOxB4Q,EAPwB,KAOTC,EAPS,iDAa/B,8BAAA5O,EAAA,sEACyBmN,MAAY,UAAW,CAC5CC,KAAM9K,KAAKmG,UAAU,CACnBgG,UAAWA,IAEb3T,QAAS,CACP,eAAgB,mBAChBuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WATZ,cACQ3L,EADR,gBAWqBA,EAAS4L,OAX9B,OAae,8BAFPrN,EAXR,QAcIyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,8BAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAhB3C,4CAb+B,sBAkD/B,OATAH,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,YADjC,gBACUC,EADV,EACUA,KAERwN,EAAWxN,GAHb,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IAGD,0BACE6C,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,SACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkC,EACNjC,QA/BqB,WAC3BkC,GAAiB,IA+BXjC,OA5BoB,WAC1BiC,GAAiB,IA4BXtL,MAAOmL,EACPnF,UAAU,GAETmE,EAAQhM,KAAI,SAACmM,EAAQ3K,GAAT,OACX,kBAAC2J,GAAA,EAAD,CACEK,IAAKW,EAAOa,UACZnL,MAAOsK,EAAOa,UACd7K,QAAS,kBAhEK9C,EAgEkB8M,EAAOa,eA/DjDC,EAAa5N,GADU,IAACA,IAkEb8M,EAAO9K,YAMhB,kBAAC+I,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAtFuB,2CAuFvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,YAWDqE,G,2IC5HA,IAAM5G,GAAYC,IAAOC,IAAV,MCWhBsJ,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAEH/F,IAAMT,SAAmB,IAFtB,mBAExBU,EAFwB,KAEhBC,EAFgB,KAa/B,OATAqB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,WADjC,gBACUC,EADV,EACUA,KAERxB,EAAUwB,GAHZ,4CADc,uBAAC,WAAD,wBAMdqB,KACC,IAGD,kBAAC,GAAD,KACG9C,EAAOb,OAAS,EACba,EAAOgD,KAAI,SAAChD,GAAD,OACT,kBAACwG,EAAA,EAAD,CAAMd,UAAWS,EAAQH,KAAMrB,MAAO,CAACC,OAAQ,sBAC7C,kBAAC8B,EAAA,EAAD,KACE,yBACE/B,MAAO,CAACqC,UAAW,cACnBC,IAAKjH,EAAOkH,KACZH,OAAO,MACPtC,IAAKzE,EAAO0E,WACZL,MAAOrE,EAAOkH,OAEhB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CvH,EAAOkH,MAEV,kBAACE,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CvH,EAAOkH,YAMlB,ICvDV,IAAMpB,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGP/F,IAAMT,SAAS,IAHR,mBAGxB4H,EAHwB,KAGlB+E,EAHkB,OAILlM,IAAMT,SAAkB,IAJnB,mBAIxBgH,EAJwB,KAIjBC,EAJiB,OAKWxG,IAAMT,WALjB,mBAKxB6E,EALwB,KAKTiM,EALS,OAMKrQ,IAAMT,SAAiB,IAN5B,mBAMxBoF,EANwB,KAMZ2L,EANY,OAOCtQ,IAAMT,WAPP,mBAOxB4D,EAPwB,KAOdgK,EAPc,OAQOnN,IAAMT,UAAS,GARtB,mBAQxB+O,EARwB,KAQXC,EARW,iDA+B/B,gCAAA/M,EAAA,6DACQoC,EAAU,CACduD,OACA/C,gBACAO,cAJJ,SAOyBzI,EAAImI,KAAK,SAAUT,GAP5C,gBAQe,2CADLlC,EAPV,EAOUA,MAENyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,yCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAX3C,4CA/B+B,sBAuB/BH,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IAwBH,OACE,0BACE6C,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMK,EACNJ,QAtBmB,WACzBK,GAAe,IAsBTJ,OAnBkB,WACxBI,GAAe,IAmBTzJ,MAAOV,EACP0G,UAAU,GAETvE,EAAMtD,KAAI,SAACnD,EAAM2E,GAAP,OACT,kBAAC2J,GAAA,EAAD,CACEK,IAAK3O,EAAKK,QACV2E,MAAOhF,EAAKK,QACZiF,QAAS,kBAnEK9C,EAmEkBxC,EAAKK,aAlE/CkQ,EAAiB/N,GADM,IAACA,IAqEbxC,EAAKwE,YAKd,kBAAC+I,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVG,SApEiB,SAACmC,GACxBlB,EAAQkB,EAAMlC,OAAOpG,QAoEfA,MAAOqC,EACP7E,GAAG,iBACH0I,MAAM,UAGV,kBAACqC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC,KAAD,CAAYgL,UAAU,EAAOC,OA/EN,SAACC,GAC5BO,EAAcP,EAAKC,YAgFjB,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QArGuB,2CAsGvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,aAWDqE,GChIP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGP/F,IAAMT,SAA6B,IAH5B,mBAGxB4H,EAHwB,KAGlB+E,EAHkB,OAILlM,IAAMT,SAAkB,IAJnB,mBAIxBgH,EAJwB,KAIjBC,EAJiB,OAKHxG,IAAMT,SAAmB,IALtB,mBAKxBU,EALwB,KAKhBC,EALgB,OAOWF,IAAMT,WAPjB,mBAOxB6E,EAPwB,KAOTiM,EAPS,OAUCrQ,IAAMT,WAVP,mBAUxBgR,EAVwB,KAUdC,EAVc,OAYKxQ,IAAMT,SAA6B,IAZxC,mBAYxBoF,EAZwB,KAYZ2L,EAZY,OAaCtQ,IAAMT,WAbP,mBAaxB4D,EAbwB,KAadgK,EAbc,OAcOnN,IAAMT,UAAS,GAdtB,mBAcxB+O,EAdwB,KAcXC,EAdW,OAeSvO,IAAMT,UAAS,GAfxB,mBAexBkR,EAfwB,KAeVC,EAfU,KAiB/BnP,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IAEHvB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,WADjC,gBACUC,EADV,EACUA,KAERxB,EAAUwB,GAHZ,4CADc,uBAAC,WAAD,wBAMdqB,KACC,IAjC4B,4CAoD/B,gCAAAvB,EAAA,6DACQoC,EAAU,CACduD,OACA/C,gBACAO,aACA4L,YALJ,SAQyBrU,EAAIsS,IAAI,SAAU5K,GAR3C,gBASe,+CADLlC,EARV,EAQUA,MAENyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,kCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAZ3C,4CApD+B,sBAkF/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMwC,EACNvC,QArBoB,WAC1BwC,GAAgB,IAqBVvC,OAlBmB,WACzBuC,GAAgB,IAkBV5L,MAAOyL,EACPzF,UAAU,GAETvE,EAAMtD,KAAI,SAACnD,EAAM2E,GAAP,OACT,kBAAC2J,GAAA,EAAD,CACEK,IAAK3O,EAAKK,QACV2E,MAAOhF,EAAKK,QACZiF,QAAS,kBAtEK9C,EAsEkBxC,EAAKK,aArE/CkQ,EAAiB/N,GADM,IAACA,IAwEbxC,EAAKwE,YAMd,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMK,EACNJ,QApDmB,WACzBK,GAAe,IAoDTJ,OAjDkB,WACxBI,GAAe,IAiDTzJ,MAAOV,EACP0G,UAAU,GAET7K,EAAOgD,KAAI,SAACuB,EAAOC,GAAR,OACVD,EAAMJ,gBAAkBA,EACtB,kBAACgK,GAAA,EAAD,CACEK,IAAKjK,EAAM+L,SACXzL,MAAON,EAAM+L,SACbnL,QAAS,kBA5FG,SAAC9C,EAAwBmC,GACjD+L,EAAYlO,GACZ4J,EAAQjM,EAAOwE,GAAO0C,MACtBmJ,EAAcrQ,EAAOwE,GAAOE,YAyFDgM,CAAkBnM,EAAM+L,SAAU9L,KAEhDD,EAAM2C,MAGT,yBAAKsH,IAAKjK,EAAM+L,SAAU3L,MAAO,CAAES,QAAS,eAMpD,kBAACgI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVG,SAhGiB,SAACmC,GACxBlB,EAAQkB,EAAMlC,OAAOpG,QAgGfA,MAAOqC,EACP7E,GAAG,iBACH0I,MAAM,UAGV,kBAACqC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC,KAAD,CAAYgL,UAAU,EAAOC,OA3GN,SAACC,GAC5BO,EAAcP,EAAKC,YA4GjB,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QA9JuB,2CA+JvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,cAWDqE,GC3LP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAEL/F,IAAMT,SAAkB,IAFnB,mBAExBgH,EAFwB,KAEjBC,EAFiB,OAGHxG,IAAMT,SAAmB,IAHtB,mBAGxBU,EAHwB,KAGhBC,EAHgB,OAIWF,IAAMT,WAJjB,mBAIxB6E,EAJwB,KAITiM,EAJS,OAKCrQ,IAAMT,WALP,mBAKxBgR,EALwB,KAKdC,EALc,OAMCxQ,IAAMT,WANP,mBAMxB4D,EANwB,KAMdgK,EANc,OAOOnN,IAAMT,UAAS,GAPtB,mBAOxB+O,EAPwB,KAOXC,EAPW,OAQSvO,IAAMT,UAAS,GARxB,mBAQxBkR,EARwB,KAQVC,EARU,KAU/BnP,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IAEHvB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,WADjC,gBACUC,EADV,EACUA,KAERxB,EAAUwB,GAHZ,4CADc,uBAAC,WAAD,wBAMdqB,KACC,IA1B4B,4CAqC/B,8BAAAvB,EAAA,sEAEyBmN,MAAY,SAAU,CAC3CC,KAAM9K,KAAKmG,UAAU,CACnBsG,aAEFjU,QAAS,CACR,eAAgB,mBACfuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WAVZ,cAEQ3L,EAFR,gBAYqBA,EAAS4L,OAZ9B,OAcgB,gCAFRrN,EAZR,QAeOyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACtB,gCAATA,GACNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAjB9C,4CArC+B,sBAyE/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMwC,EACNvC,QArBoB,WAC1BwC,GAAgB,IAqBVvC,OAlBmB,WACzBuC,GAAgB,IAkBV5L,MAAOyL,EACPzF,UAAU,GAETvE,EAAMtD,KAAI,SAACnD,EAAM2E,GAAP,OACT,kBAAC2J,GAAA,EAAD,CACEK,IAAK3O,EAAKK,QACV2E,MAAOhF,EAAKK,QACZiF,QAAS,kBApEK9C,EAoEkBxC,EAAKK,aAnE/CkQ,EAAiB/N,GADM,IAACA,IAsEbxC,EAAKwE,YAMd,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMK,EACNJ,QApDmB,WACzBK,GAAe,IAoDTJ,OAjDkB,WACxBI,GAAe,IAiDTzJ,MAAOV,EACP0G,UAAU,GAET7K,EAAOgD,KAAI,SAACuB,EAAOC,GAAR,OACVD,EAAMJ,gBAAkBA,EACtB,kBAACgK,GAAA,EAAD,CACEK,IAAKjK,EAAM+L,SACXzL,MAAON,EAAM+L,SACbnL,QAAS,kBA1FI9C,EA0FoBkC,EAAM+L,cAzFnDC,EAAYlO,GADY,IAACA,IA4FZkC,EAAM2C,MAGT,yBAAKsH,IAAKjK,EAAM+L,SAAU3L,MAAO,CAAES,QAAS,eAOpD,kBAACgI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QA1IuB,2CA2IvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,YAWDqE,G,4YChLA,IAAM5G,GAAYC,IAAOC,IAAV,MAMTmU,GAAQpU,IAAOC,IAAV,MCHH,SAASoU,KAAU,IAAD,EACO7Q,IAAMT,SAA2B,IADxC,mBACxBuR,EADwB,KACXC,EADW,KAW/B,OARAxP,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,gBADjC,gBACUC,EADV,EACUA,KACRqP,EAAerP,GAFjB,4CADc,uBAAC,WAAD,wBAKdC,KACC,IAGD,kBAAC,GAAD,KACGmP,EAAY7N,KAAI,SAACkB,GAAD,OACf,kBAACyM,GAAD,KAAQzM,EAAMd,YCZtB,IAAM0C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGH/F,IAAMT,SAAS,IAHZ,mBAGxB8D,EAHwB,KAGhB2N,EAHgB,OAKChR,IAAMT,WALP,mBAKxB4D,EALwB,KAKdgK,EALc,iDAW/B,gCAAA3L,EAAA,6DACQoC,EAAU,CACdP,UAFJ,SAKyBnH,EAAImI,KAAK,cAAeT,GALjD,gBAMe,4BADLlC,EALV,EAKUA,MAENyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,4BAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAT3C,4CAX+B,sBAwB/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,oBACNlG,MAAOzB,EACP4H,SA9BmB,SAACmC,GAC1B4D,EAAU5D,EAAMlC,OAAOpG,WAiCrB,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QA9CuB,2CA+CvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,aAWDqE,GClEP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGH/F,IAAMT,SAAS,IAHZ,mBAGxB8D,EAHwB,KAGhB2N,EAHgB,OAIOhR,IAAMT,SAA2B,IAJxC,mBAIxBuR,EAJwB,KAIXC,EAJW,OAKW/Q,IAAMT,WALjB,mBAKxB+D,EALwB,KAKT2N,EALS,OAQmBjR,IAAMT,UAAS,GARlC,mBAQxB2R,EARwB,KAQLC,EARK,OASCnR,IAAMT,WATP,mBASxB4D,EATwB,KASdgK,EATc,iDAmC/B,gCAAA3L,EAAA,6DACQoC,EAAU,CACdP,SACAC,iBAHJ,SAMyBpH,EAAIsS,IAAI,cAAe5K,GANhD,gBAOe,gCADLlC,EANV,EAMUA,MAENyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,gCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAV3C,4CAnC+B,sBAiD/B,OAtBAH,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,gBADjC,gBACUC,EADV,EACUA,KACRqP,EAAerP,GAFjB,4CADc,uBAAC,WAAD,wBAKdC,KACC,IAiBD,0BACEgE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,SACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMiD,EACNhD,QA5CuB,WAC7BiD,GAAqB,IA4CfhD,OAzCsB,WAC5BgD,GAAqB,IAyCfrM,MAAOxB,EACPwH,UAAU,GAETgG,EAAY7N,KAAI,SAACmO,EAAY3M,GAAb,OACf,kBAAC2J,GAAA,EAAD,CACEK,IAAK2C,EAAW9N,cAChBwB,MAAOsM,EAAW9N,cAClB8B,QAAS,kBAzDY9C,EA0DK8O,EAAW9N,mBAzD/C2N,EAAiB3O,GADa,IAACA,IA6DpB8O,EAAW/N,aAMpB,kBAACgK,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,oBACNlG,MAAOzB,EACP4H,SA7EmB,SAACmC,GAC1B4D,EAAU5D,EAAMlC,OAAOpG,WAgFrB,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAjGuB,2CAkGvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,cAWDqE,GC7HP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGO/F,IAAMT,SAA2B,IAHxC,mBAGxBuR,EAHwB,KAGXC,EAHW,OAIW/Q,IAAMT,WAJjB,mBAIxB+D,EAJwB,KAIT2N,EAJS,OAOmBjR,IAAMT,UAAS,GAPlC,mBAOxB2R,EAPwB,KAOLC,EAPK,OAQCnR,IAAMT,WARP,mBAQxB4D,EARwB,KAQdgK,EARc,iDA8B/B,8BAAA3L,EAAA,sEACyBmN,MAAY,cAAe,CAChDC,KAAM9K,KAAKmG,UAAU,CACnB3G,kBAEFhH,QAAS,CACP,eAAgB,mBAChBuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WATZ,cACQ3L,EADR,gBAWqBA,EAAS4L,OAX9B,OAae,8BAFPrN,EAXR,QAcIyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,8BAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAhB3C,4CA9B+B,sBAkD/B,OA5BAH,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,gBADjC,gBACUC,EADV,EACUA,KACRqP,EAAerP,GAFjB,4CADc,uBAAC,WAAD,wBAKdC,KACC,IAuBD,0BACEgE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,SACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMiD,EACNhD,QAlDuB,WAC7BiD,GAAqB,IAkDfhD,OA/CsB,WAC5BgD,GAAqB,IA+CfrM,MAAOxB,EACPwH,UAAU,GAETgG,EAAY7N,KAAI,SAACmO,EAAY3M,GAAb,OACf,kBAAC2J,GAAA,EAAD,CACEK,IAAK2C,EAAW9N,cAChBwB,MAAOsM,EAAW9N,cAClB8B,QAAS,kBA/DY9C,EAgEK8O,EAAW9N,mBA/D/C2N,EAAiB3O,GADa,IAACA,IAmEpB8O,EAAW/N,aAMpB,kBAACgK,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAxFuB,2CAyFvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,WAWDqE,G,4YC9HA,IAAM5G,GAAYC,IAAOC,IAAV,MAMTmU,GAAQpU,IAAOC,IAAV,MCHH,SAASuS,KAAQ,IAAD,EACehP,IAAMT,SAA2B,IADhD,mBACtB8R,EADsB,KACNC,EADM,KAW7B,OARA/P,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,kBADjC,gBACUC,EADV,EACUA,KACR4P,EAAkB5P,GAFpB,4CADc,uBAAC,WAAD,wBAKd6P,KACC,IAGD,kBAAC,GAAD,KACGF,EAAepO,KAAI,SAACkB,GAAD,OAClB,kBAAC,GAAD,KAAQA,EAAMd,YCZtB,IAAM0C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGH/F,IAAMT,SAAS,IAHZ,mBAGxB8D,EAHwB,KAGhB2N,EAHgB,OAKChR,IAAMT,WALP,mBAKxB4D,EALwB,KAKdgK,EALc,iDAW/B,gCAAA3L,EAAA,6DACQoC,EAAU,CACdP,UAFJ,SAKyBnH,EAAImI,KAAK,gBAAiBT,GALnD,gBAMe,4BADLlC,EALV,EAKUA,MAENyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,4BAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAT3C,4CAX+B,sBAwB/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,oBACNlG,MAAOzB,EACP4H,SA9BmB,SAACmC,GAC1B4D,EAAU5D,EAAMlC,OAAOpG,WAiCrB,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QA9CuB,2CA+CvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,aAWDqE,GClEP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS4H,KACtB,IAAMzK,EAAUL,KADe,EAGH/F,IAAMT,SAAS,IAHZ,mBAGxB8D,EAHwB,KAGhB2N,EAHgB,OAIWhR,IAAMT,SAC9C,IAL6B,mBAIxBiS,EAJwB,KAITC,EAJS,OAOezR,IAAMT,WAPrB,mBAOxBmS,EAPwB,KAOPC,EAPO,OAUuB3R,IAAMT,UAAS,GAVtC,mBAUxBqS,EAVwB,KAUHC,EAVG,OAWC7R,IAAMT,WAXP,mBAWxB4D,EAXwB,KAWdgK,EAXc,iDAqC/B,gCAAA3L,EAAA,6DACQoC,EAAU,CACdP,SACAqO,mBAHJ,SAMyBxV,EAAIsS,IAAI,gBAAiB5K,GANlD,gBAOe,gCADLlC,EANV,EAMUA,MAENyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,gCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAV3C,4CArC+B,sBAmD/B,OAtBAH,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,kBADjC,gBACUC,EADV,EACUA,KACR+P,EAAiB/P,GAFnB,4CADc,uBAAC,WAAD,wBAKdC,KACC,IAiBD,0BACEgE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,SACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAM2D,EACN1D,QA5CyB,WAC/B2D,GAAuB,IA4CjB1D,OAzCsB,WAC5B0D,GAAuB,IAyCjB/M,MAAO4M,EACP5G,UAAU,GAET0G,EAAcvO,KAAI,SAAC6O,EAAcrN,GAAf,OACjB,kBAAC2J,GAAA,EAAD,CACEK,IAAKqD,EAAaJ,gBAClB5M,MAAOgN,EAAaJ,gBACpBtM,QAAS,kBAzDc9C,EA0DKwP,EAAaJ,qBAzDnDC,EAAmBrP,GADa,IAACA,IA6DtBwP,EAAazO,aAMtB,kBAACgK,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,oBACNlG,MAAOzB,EACP4H,SA7EmB,SAACmC,GAC1B4D,EAAU5D,EAAMlC,OAAOpG,WAgFrB,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAnGuB,2CAoGvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,WAWDqE,GC/HP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS8I,KACtB,IAAM3L,EAAUL,KADe,EAGW/F,IAAMT,SAC9C,IAJ6B,mBAGxBiS,EAHwB,KAGTC,EAHS,OAMezR,IAAMT,WANrB,mBAMxBmS,EANwB,KAMPC,EANO,OASuB3R,IAAMT,UAAS,GATtC,mBASxBqS,EATwB,KASHC,EATG,OAUC7R,IAAMT,WAVP,mBAUxB4D,EAVwB,KAUdgK,EAVc,iDAgC/B,8BAAA3L,EAAA,sEACyBmN,MAAY,gBAAiB,CAClDC,KAAM9K,KAAKmG,UAAU,CACnByH,oBAEFpV,QAAS,CACP,eAAgB,mBAChBuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WATZ,cACQ3L,EADR,gBAWqBA,EAAS4L,OAX9B,OAae,8BAFPrN,EAXR,QAcIyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,8BAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAhB3C,4CAhC+B,sBAoD/B,OA5BAH,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,kBADjC,gBACUC,EADV,EACUA,KACR+P,EAAiB/P,GAFnB,4CADc,uBAAC,WAAD,wBAKdC,KACC,IAuBD,0BACEgE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,SACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAM2D,EACN1D,QAlDyB,WAC/B2D,GAAuB,IAkDjB1D,OA/CsB,WAC5B0D,GAAuB,IA+CjB/M,MAAO4M,EACP5G,UAAU,GAET0G,EAAcvO,KAAI,SAAC6O,EAAcrN,GAAf,OACjB,kBAAC2J,GAAA,EAAD,CACEK,IAAKqD,EAAaJ,gBAClB5M,MAAOgN,EAAaJ,gBACpBtM,QAAS,kBA/Dc9C,EAgEKwP,EAAaJ,qBA/DnDC,EAAmBrP,GADa,IAACA,IAmEtBwP,EAAazO,aAMtB,kBAACgK,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QA1FuB,2CA2FvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,YAWDqE,GC3HP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAECxG,mBAAsB,IAFvB,mBAExByS,EAFwB,KAEdC,EAFc,OAGO1S,qBAHP,mBAGxB2S,EAHwB,KAGXC,EAHW,OAIe5S,oBAAkB,GAJjC,mBAIxB6S,EAJwB,KAIPC,EAJO,KAyB/B,OARA9Q,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,aADjC,gBACUC,EADV,EACUA,KACRuQ,EAAYvQ,GAFd,4CADc,uBAAC,WAAD,wBAKd4Q,KACC,IAGD,0BACE3M,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMmE,EACNlE,QA7BuB,WAC7BmE,GAAmB,IA6BblE,OA3BsB,WAC5BkE,GAAmB,IA2BbvN,MAAOoN,EACPpH,UAAU,GAETkH,EAAS/O,KAAI,SAACsP,EAAS9N,GAAV,OACZ,kBAAC2J,GAAA,EAAD,CACEK,IAAK8D,EAAQL,YACbpN,MAAOyN,EAAQL,YACf9M,QAAS,kBA1CS9C,EA0CkBiQ,EAAQL,iBAzCtDC,EAAe7P,GADY,IAACA,IA4CjBiQ,EAAQC,oBCpEvB,IAAMzM,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACJ+F,OAAQiE,EAAMG,QAAQ,SAIf,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAERxG,qBAFQ,mBAExBkT,EAFwB,KAEnBC,EAFmB,OAGOnT,qBAHP,mBAGxBiT,EAHwB,KAGXG,EAHW,OAIRpT,qBAJQ,mBAIxBqT,EAJwB,KAInBC,EAJmB,OAKJtT,qBALI,mBAKxBuT,EALwB,KAKjBC,EALiB,OAMNxT,qBANM,mBAMxB4M,EANwB,KAMlBC,EANkB,OAOI7M,qBAPJ,mBAOxByT,EAPwB,KAObC,EAPa,OAQA1T,qBARA,mBAQxB2T,EARwB,KAQfC,EARe,OASA5T,qBATA,mBASxB6T,EATwB,KASfC,EATe,OAUE9T,qBAVF,mBAUxB+T,EAVwB,KAUdC,EAVc,OAWAvT,IAAMT,WAXN,mBAWxB4D,EAXwB,KAWfgK,EAXe,iDAqB/B,gCAAA3L,EAAA,6DAEQoC,EAAU,CACZ6O,OACAD,eACAI,OACAzG,QACA6G,aACAF,SACAU,OAAO,GAAD,OAAKN,EAAL,YAAiBE,EAAjB,YAA6BE,IATzC,SAayBpX,EAAImI,KAAK,YAAYT,GAb9C,gBAee,8BAFLlC,EAbV,EAaUA,MAGJyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACtB,8BAATA,GACNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAlB7C,4CArB+B,sBA2C/B,OACE,0BAAMiE,UAAWS,EAAQH,KAAM2E,YAAY,EAAOH,SAAU,SAAA2C,GAAK,OAAIA,EAAMzC,kBAAkBQ,aAAa,OACxG,kBAACkC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAOxI,GAAG,iBAAiB0I,MAAM,OAAOlG,MAAO2N,EAAMxH,SAAU,SAAAxF,GAAO,OAAIiN,EAAQjN,EAAQyF,OAAOpG,WAExH,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAOxI,GAAG,iBAAiB0I,MAAM,gBAAgBlG,MAAO0N,EAAcvH,SAAU,SAAAxF,GAAO,OAAIkN,EAAelN,EAAQyF,OAAOpG,WAEhJ,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QAC1C,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,QACA,kBAAC,KAAD,CAAYuN,UAAW,EAAQC,OAvCX,SAACC,GACvB8C,EAAQ9C,EAAKC,YAwCX,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QAC1C,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAAC,KAAD,CAAYuN,UAAW,EAAQC,OAxCT,SAACC,GACzBgD,EAAUhD,EAAKC,YAyCb,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAOxI,GAAG,iBAAiB0I,MAAM,WAAWlG,MAAOqH,EAAOlB,SAAU,SAAAxF,GAAO,OAAI2G,EAAS3G,EAAQyF,OAAOpG,WAE9H,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAWC,UAAU,EAAOxI,GAAG,iBAAiB0I,MAAM,kBAAYlG,MAAOkO,EAAY/H,SAAU,SAAAxF,GAAO,OAAIwN,EAAcxN,EAAQyF,OAAOpG,WAEzI,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAavI,GAAG,iBAAiB0I,MAAM,WAAWlG,MAAOoO,EAAUjI,SAAU,SAAAxF,GAAO,OAAI0N,EAAY1N,EAAQyF,OAAOpG,WAErH,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAavI,GAAG,iBAAiB0I,MAAM,YAAYlG,MAAOwO,EAAWrI,SAAU,SAAAxF,GAAO,OAAI8N,EAAa9N,EAAQyF,OAAOpG,WAExH,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CAAavI,GAAG,iBAAiB0I,MAAM,WAAWlG,MAAOsO,EAAUnI,SAAU,SAAAxF,GAAO,OAAI4N,EAAY5N,EAAQyF,OAAOpG,WAErH,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CAAQL,QAAQ,YAAYvI,MAAM,UAAU+I,KAAK,SAASnD,MAAO,CAACO,MAAM,SAAUC,QA3EzD,2CA2E4EO,UAAWS,EAAQtH,QAAxH,aAIDqE,GC7FP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAECxG,mBAAsB,IAFvB,mBAExByS,EAFwB,KAEdC,EAFc,OAGO1S,mBAA6B,GAHpC,mBAGxB2S,EAHwB,KAGXC,EAHW,OAIP5S,qBAJO,mBAIxBkT,EAJwB,KAIlBC,EAJkB,OAKQnT,qBALR,mBAKxBiT,EALwB,KAKVG,EALU,OAMPpT,qBANO,mBAMxBqT,EANwB,KAMlBC,EANkB,OAOJtT,qBAPI,mBAOxBuT,EAPwB,KAOjBC,EAPiB,OAQLxT,qBARK,mBAQxB4M,EARwB,KAQjBC,EARiB,OASK7M,qBATL,mBASxByT,EATwB,KASZC,EATY,OAUC1T,qBAVD,mBAUxB2T,EAVwB,KAUdC,EAVc,OAWC5T,qBAXD,mBAWxB6T,EAXwB,KAWdC,EAXc,OAYG9T,qBAZH,mBAYxB+T,EAZwB,KAYbC,EAZa,OAaCvT,IAAMT,WAbP,mBAaxB4D,GAbwB,KAadgK,GAbc,QAce5N,oBAAkB,GAdjC,qBAcxB6S,GAdwB,MAcPC,GAdO,oDAsD/B,gCAAA7Q,EAAA,6DACQoC,EAAU,CACdsO,cACAO,OACAD,eACAI,OACAE,SACA3G,QACA6G,aACAQ,OAAO,GAAD,OAAMN,EAAN,YAAkBE,EAAlB,YAA8BE,IATxC,SAYyBpX,EAAIsS,IAAI,YAAa5K,GAZ9C,gBAce,kCAFLlC,EAZV,EAYUA,MAGNyL,GAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,kCAATA,EACTyL,GAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IACrB,qBAATA,GACTyL,GAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAnBzC,4CAtD+B,sBA6E/B,OA/BAH,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,aADjC,gBACUC,EADV,EACUA,KACRuQ,EAAYvQ,GAFd,4CADc,uBAAC,WAAD,wBAKd4Q,KACC,IA0BD,0BACE3M,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMmE,GACNlE,QApDuB,WAC7BmE,IAAmB,IAoDblE,OAlDsB,WAC5BkE,IAAmB,IAkDbvN,MAAOoN,EACPpH,UAAU,GAETkH,EAAS/O,KAAI,SAACsP,EAAS9N,GAAV,OACZ,kBAAC2J,GAAA,EAAD,CACEK,IAAK8D,EAAQL,YACbpN,MAAOyN,EAAQL,YACf9M,QAAS,kBA7EQ,SAAC9C,EAAwBmC,GACpD0N,EAAe7P,GACfoQ,EAAQV,EAASvN,GAAOgO,MACxBE,EAAeX,EAASvN,GAAO+N,cAC/BpG,EAAS4F,EAASvN,GAAO0H,OACzB8G,EAAcjB,EAASvN,GAAOuO,YAC9BH,EAAQb,EAASvN,GAAOmO,MACxBG,EAAUf,EAASvN,GAAOqO,QAE1B,IAAMW,EAAmB3P,KAAKC,MAAL,UAAciO,EAASvN,GAAO+O,SAEvDL,EAAYM,EAAQP,UACpBG,EAAYI,EAAQL,UACpBG,EAAaE,EAAQH,WAgEII,CAAqBnB,EAAQL,YAAazN,KAExD8N,EAAQC,mBAMjB,kBAACnF,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,OACNlG,MAAO2N,EACPxH,SAAU,SAACxF,GAAD,OAAaiN,EAAQjN,EAAQyF,OAAOpG,WAGlD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,gBACNlG,MAAO0N,EACPvH,SAAU,SAACxF,GAAD,OAAakN,EAAelN,EAAQyF,OAAOpG,WAGzD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,QACA,kBAAC,KAAD,CAAYuN,UAAU,EAAOC,OAhHX,SAACC,GACvB8C,EAAQ9C,EAAKC,YAiHX,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAAC,KAAD,CAAYuN,UAAU,EAAOC,OAjHT,SAACC,GACzBgD,EAAUhD,EAAKC,YAkHb,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,WACNlG,MAAOqH,EACPlB,SAAU,SAACxF,GAAD,OAAa2G,EAAS3G,EAAQyF,OAAOpG,WAGnD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,kBACNlG,MAAOkO,EACP/H,SAAU,SAACxF,GAAD,OAAawN,EAAcxN,EAAQyF,OAAOpG,WAGxD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,WACNlG,MAAOoO,EACPjI,SAAU,SAACxF,GAAD,OAAa0N,EAAY1N,EAAQyF,OAAOpG,WAGtD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,YACNlG,MAAOwO,EACPrI,SAAU,SAACxF,GAAD,OAAa8N,EAAa9N,EAAQyF,OAAOpG,WAGvD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,WACNlG,MAAOsO,EACPnI,SAAU,SAACxF,GAAD,OAAa4N,EAAY5N,EAAQyF,OAAOpG,WAGtD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACLnD,MAAO,CAAEO,MAAO,SAChBC,QAzLuB,4CA0LvBO,UAAWS,EAAQtH,QANrB,cAWDqE,ICrNP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAECxG,mBAAsB,IAFvB,mBAExByS,EAFwB,KAEdC,EAFc,OAGO1S,qBAHP,mBAGxB2S,EAHwB,KAGXC,EAHW,OAICnS,IAAMT,WAJP,mBAIxB4D,EAJwB,KAIdgK,EAJc,OAKe5N,oBAAkB,GALjC,mBAKxB6S,EALwB,KAKPC,EALO,iDA0B/B,8BAAA7Q,EAAA,sEAEyBmN,MAAY,YAAa,CAC5CC,KAAM9K,KAAKmG,UAAU,CACjBiI,YAAaA,IAEjB5V,QAAS,CACP,eAAgB,mBAChBuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WAVd,cAEQ3L,EAFR,gBAYuBA,EAAS4L,OAZhC,OAce,gCAFLrN,EAZV,QAeIyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,gCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAjB3C,4CA1B+B,sBA+C/B,OA7BAH,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,aADjC,gBACUC,EADV,EACUA,KACRuQ,EAAYvQ,GAFd,4CADc,uBAAC,WAAD,wBAKd4Q,KACC,IAwBD,0BACE3M,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMmE,EACNlE,QAlDuB,WAC7BmE,GAAmB,IAkDblE,OAhDsB,WAC5BkE,GAAmB,IAgDbvN,MAAOoN,EACPpH,UAAU,GAETkH,EAAS/O,KAAI,SAACsP,EAAS9N,GAAV,OACZ,kBAAC2J,GAAA,EAAD,CACEK,IAAK8D,EAAQL,YACbpN,MAAOyN,EAAQL,YACf9M,QAAS,kBA/DS9C,EA+DkBiQ,EAAQL,iBA9DtDC,EAAe7P,GADY,IAACA,IAiEjBiQ,EAAQC,mBAKjB,kBAACnF,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACLnD,MAAO,CAAEO,MAAO,SAChBC,QAnFuB,2CAoFvBO,UAAWS,EAAQtH,QANrB,YAWDqE,G,gLCxHA,IAAM5G,GAAYC,IAAOC,IAAV,MCahBsJ,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS+F,KACtB,IAAM5I,EAAUL,KADa,EAEHxG,mBAA0B,IAFvB,mBAEtBoU,EAFsB,KAEfC,EAFe,KAY7B,OARArS,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,mBADjC,gBACUC,EADV,EACUA,KACRkS,EAASlS,GAFX,4CADc,uBAAC,WAAD,wBAKdmS,KACC,IAGD,kBAAC,GAAD,KACGF,EAAMvU,OAAS,EACZuU,EAAM1Q,KAAI,SAAC6Q,GAAD,OACR,kBAACrN,EAAA,EAAD,CAAMd,UAAWS,EAAQH,KAAMrB,MAAO,CAAEO,MAAO,QAASN,OAAQ,wBAC9D,kBAAC8B,EAAA,EAAD,KACE,kBAACgJ,GAAA,EAAD,CACEnI,UAAU,MACVN,IAAK4M,EAAK3M,KACV3C,MAAOsP,EAAKtP,MACZF,MAAOwP,EAAK3M,OAEd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CsM,EAAK3M,MAER,kBAACE,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAhD,YACYsM,EAAKC,QAEjB,kBAAC1M,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAhD,SACSsM,EAAKrB,MAEd,kBAACpL,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAhD,QACQsM,EAAKhI,KAEb,kBAACzE,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAhD,UACUsM,EAAKE,sBAMvB,ICvEV,IAAMjO,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAEPxG,qBAFO,mBAExBkT,EAFwB,KAElBC,EAFkB,OAGCnT,qBAHD,mBAGxB0U,EAHwB,KAGdC,EAHc,OAIW3U,qBAJX,mBAIxB4U,EAJwB,KAITC,EAJS,OAKT7U,qBALS,mBAKxBuM,EALwB,KAKnBC,EALmB,OAMHxM,qBANG,mBAMxBwU,EANwB,KAMhBM,EANgB,OAOL9U,qBAPK,mBAOxBiF,EAPwB,KAOjBoL,EAPiB,OAQC5P,IAAMT,WARP,mBAQxB4D,EARwB,KAQdgK,EARc,iDAc/B,gCAAA3L,EAAA,6DACQoC,EAAU,CACd6O,OACAjO,QACAsH,MACAiI,SACAC,eAAgBG,EAChBhN,KAAM8M,GAPV,SAUyB/X,EAAImI,KAAK,gBAAiBT,GAVnD,gBAYe,2BAFLlC,EAVV,EAUUA,MAGNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,2BAATA,EACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IACrB,kCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAjBzC,4CAd+B,sBAmC/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,OACNlG,MAAOmP,EACPhJ,SAAU,SAACxF,GAAD,OAAayO,EAAYzO,EAAQyF,OAAOpG,WAGtD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,OACNlG,MAAO2N,EACPxH,SAAU,SAACxF,GAAD,OAAaiN,EAAQjN,EAAQyF,OAAOpG,WAGlD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,MACNlG,MAAOgH,EACPb,SAAU,SAACxF,GAAD,OAAasG,EAAOtG,EAAQyF,OAAOpG,WAGjD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,aACNlG,MAAOiP,EACP9I,SAAU,SAACxF,GAAD,OAAa4O,EAAU5O,EAAQyF,OAAOpG,WAGpD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAAC,KAAD,CAAYuN,UAAU,EAAOC,OAtET,SAACC,GACzBH,EAASG,EAAKC,YAuEZ,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,qBACNlG,MAAOqP,EACPlJ,SAAU,SAACxF,GAAD,OAAa2O,EAAiB3O,EAAQyF,OAAOpG,WAG3D,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACLnD,MAAO,CAAEO,MAAO,SAChBC,QAjGuB,2CAkGvBO,UAAWS,EAAQtH,QANrB,aAWDqE,GCpHP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS4H,KACtB,IAAMzK,EAAUL,KADe,EAELxG,mBAA0B,IAFrB,mBAExBoU,EAFwB,KAEjBC,EAFiB,OAGerU,qBAHf,mBAGxB+U,EAHwB,KAGPC,EAHO,OAIPhV,qBAJO,mBAIxBkT,EAJwB,KAIlBC,EAJkB,OAKCnT,qBALD,mBAKxB0U,EALwB,KAKdC,EALc,OAMW3U,qBANX,mBAMxB4U,EANwB,KAMTC,EANS,OAOT7U,qBAPS,mBAOxBuM,EAPwB,KAOnBC,EAPmB,OAQHxM,qBARG,mBAQxBwU,EARwB,KAQhBM,EARgB,OASL9U,qBATK,mBASxBiF,EATwB,KASjBoL,EATiB,OAUC5P,IAAMT,WAVP,mBAUxB4D,EAVwB,KAUdgK,EAVc,OAWO5N,oBAAkB,GAXzB,mBAWxBiV,EAXwB,KAWXC,EAXW,iDAwC/B,gCAAAjT,EAAA,6DACQoC,EAAU,CACd0Q,kBACA7B,OACAjO,QACAsH,MACAiI,SACAC,eAAgBG,EAChBhN,KAAM8M,GARV,SAWyB/X,EAAIsS,IAAI,gBAAiB5K,GAXlD,gBAae,+BAFLlC,EAXV,EAWUA,MAGNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,+BAATA,EACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IACrB,kCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAlBzC,4CAxC+B,sBA8D/B,OA7BAH,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,mBADjC,gBACUC,EADV,EACUA,KACRkS,EAASlS,GAFX,4CADc,uBAAC,WAAD,wBAKdmS,KACC,IAwBD,0BACElO,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMuG,EACNtG,QA3DoB,WAC1BuG,GAAe,IA2DTtG,OAzDkB,WACxBsG,GAAe,IAyDT3P,MAAOwP,EACPxJ,UAAU,GAET6I,EAAM1Q,KAAI,SAAC6Q,EAAMrP,GAAP,OACT,kBAAC2J,GAAA,EAAD,CACEK,IAAKqF,EAAKQ,gBACVxP,MAAOgP,EAAKQ,gBACZlP,QAAS,kBA9DI,SAAC9C,EAAwBmC,GAChD8P,EAAmBjS,GACnBoQ,EAAQiB,EAAMlP,GAAOgO,MACrByB,EAAYP,EAAMlP,GAAO0C,MACzBiN,EAAiBT,EAAMlP,GAAOuP,gBAC9BjI,EAAO4H,EAAMlP,GAAOqH,KACpBuI,EAAUV,EAAMlP,GAAOsP,QACvBnE,EAAS+D,EAAMlP,GAAOD,OAuDGkQ,CAAiBZ,EAAKQ,gBAAiB7P,KAErDqP,EAAK3M,WAMd,kBAACkG,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,OACNlG,MAAOmP,EACPhJ,SAAU,SAACxF,GAAD,OAAayO,EAAYzO,EAAQyF,OAAOpG,WAGtD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,OACNlG,MAAO2N,EACPxH,SAAU,SAACxF,GAAD,OAAaiN,EAAQjN,EAAQyF,OAAOpG,WAGlD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,MACNlG,MAAOgH,EACPb,SAAU,SAACxF,GAAD,OAAasG,EAAOtG,EAAQyF,OAAOpG,WAGjD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,aACNlG,MAAOiP,EACP9I,SAAU,SAACxF,GAAD,OAAa4O,EAAU5O,EAAQyF,OAAOpG,WAGpD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAAC,KAAD,CAAYuN,UAAU,EAAOC,OAtHT,SAACC,GACzBH,EAASG,EAAKC,YAuHZ,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,qBACNlG,MAAOqP,EACPlJ,SAAU,SAACxF,GAAD,OAAa2O,EAAiB3O,EAAQyF,OAAOpG,WAG3D,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACLnD,MAAO,CAAEO,MAAO,SAChBC,QApJuB,2CAqJvBO,UAAWS,EAAQtH,QANrB,cAWDqE,GChLP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS8I,KACtB,IAAM3L,EAAUL,KADe,EAELxG,mBAA0B,IAFrB,mBAExBoU,EAFwB,KAEjBC,EAFiB,OAGerU,qBAHf,mBAGxB+U,EAHwB,KAGPC,EAHO,OAICvU,IAAMT,WAJP,mBAIxB4D,EAJwB,KAIdgK,EAJc,OAKO5N,oBAAkB,GALzB,mBAKxBiV,EALwB,KAKXC,EALW,iDAwB/B,8BAAAjT,EAAA,sEACyBmN,MAAY,gBAAiB,CAClDC,KAAM9K,KAAKmG,UAAU,CACnBqK,gBAAiBA,IAEnBhY,QAAS,CACP,eAAgB,mBAChBuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WATZ,cACQ3L,EADR,gBAWqBA,EAAS4L,OAX9B,OAae,6BAFPrN,EAXR,QAcIyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,6BAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAhB3C,4CAxB+B,sBA4C/B,OA3BAH,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,mBADjC,gBACUC,EADV,EACUA,KACRkS,EAASlS,GAFX,4CADc,uBAAC,WAAD,wBAKdmS,KACC,IAsBD,0BACElO,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMuG,EACNtG,QAnDoB,WAC1BuG,GAAe,IAmDTtG,OAjDkB,WACxBsG,GAAe,IAiDT3P,MAAOwP,EACPxJ,UAAU,GAET6I,EAAM1Q,KAAI,SAAC6Q,EAAMrP,GAAP,OACT,kBAAC2J,GAAA,EAAD,CACEK,IAAKqF,EAAKQ,gBACVxP,MAAOgP,EAAKQ,gBACZlP,QAAS,kBAtDK9C,EAsDkBwR,EAAKQ,qBArD/CC,EAAmBjS,GADI,IAACA,IAwDbwR,EAAK3M,WAMd,kBAACkG,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACLnD,MAAO,CAAEO,MAAO,SAChBC,QAjFuB,2CAkFvBO,UAAWS,EAAQtH,QANrB,YAWDqE,GChHP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAGCxG,mBAAiB,IAHlB,mBAGxBoV,EAHwB,KAGdC,EAHc,OAITrV,mBAAiB,IAJR,mBAIxBuM,EAJwB,KAInBC,EAJmB,OAKLxM,mBAAiB,IALZ,mBAKxBoK,EALwB,KAKjBC,EALiB,OAMLrK,mBAAiB,IANZ,mBAMxB4M,EANwB,KAMjBC,EANiB,OAOC7M,mBAAiB,IAPlB,mBAOxBsK,EAPwB,KAOdC,EAPc,OAQDvK,mBAAiB,IARhB,mBAQxB8M,EARwB,KAQfC,EARe,OASCtM,IAAMT,WATP,mBASxB4D,EATwB,KASdgK,EATc,iDAW/B,gCAAA3L,EAAA,6DACQoC,EAAU,CACduD,KAAMwN,EACN7I,MACAnC,QACAwC,QACAtC,WACAwC,WAPJ,SAUyBnQ,EAAImI,KAAK,QAAST,GAV3C,gBAYe,6CAFLlC,EAVV,EAUUA,MAGNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,+BAATA,EACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IACrB,yBAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAjBzC,4CAX+B,sBAgC/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,OACNlG,MAAO6P,EACP1J,SAAU,SAACxF,GAAD,OAAamP,EAAYnP,EAAQyF,OAAOpG,WAGtD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,MACNlG,MAAOgH,EACPb,SAAU,SAACxF,GAAD,OAAasG,EAAOtG,EAAQyF,OAAOpG,WAGjD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,QACNlG,MAAO6E,EACPsB,SAAU,SAACxF,GAAD,OAAamE,EAASnE,EAAQyF,OAAOpG,WAGnD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,WACNlG,MAAOqH,EACPlB,SAAU,SAACxF,GAAD,OAAa2G,EAAS3G,EAAQyF,OAAOpG,WAGnD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,QACNlG,MAAO+E,EACPoB,SAAU,SAACxF,GAAD,OAAaqE,EAAYrE,EAAQyF,OAAOpG,WAGtD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,cACNlG,MAAOuH,EACPpB,SAAU,SAACxF,GAAD,OAAa6G,EAAW7G,EAAQyF,OAAOpG,WAGrD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAlGuB,2CAmGvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,aAWDqE,GC7HP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS4H,KACtB,IAAMzK,EAAUL,KADe,EAGDxG,qBAHC,mBAGxByE,EAHwB,KAGf6Q,EAHe,OAICtV,mBAAiB,IAJlB,mBAIxBoV,EAJwB,KAIdC,EAJc,OAKTrV,mBAAiB,IALR,mBAKxBuM,EALwB,KAKnBC,EALmB,OAMLxM,mBAAiB,IANZ,mBAMxBoK,EANwB,KAMjBC,EANiB,OAOLrK,mBAAiB,IAPZ,mBAOxB4M,EAPwB,KAOjBC,EAPiB,OAQC7M,mBAAiB,IARlB,mBAQxBsK,EARwB,KAQdC,EARc,OASDvK,mBAAiB,IAThB,mBASxB8M,EATwB,KASfC,EATe,OAUCtM,IAAMT,WAVP,mBAUxB4D,EAVwB,KAUdgK,EAVc,iDAY/B,gCAAA3L,EAAA,6DACQoC,EAAU,CACdI,UACAmD,KAAMwN,EACN7I,MACAnC,QACAwC,QACAtC,WACAwC,WARJ,SAWyBnQ,EAAIsS,IAAI,QAAS5K,GAX1C,gBAae,2CAFLlC,EAXV,EAWUA,MAGNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,uDAATA,EACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,KACrB,2CAATA,GAES,yBAATA,IADTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAlBzC,4CAZ+B,sBAyC/B,OALAH,qBAAU,WACR,IAAMuT,EAAmB9Y,eAAeC,QAAQ,QAC1CyF,EAAOoC,KAAKC,MAAM+Q,GACxBD,EAAWnT,EAAKsC,WACf,IAED,0BACE2B,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,OACNlG,MAAO6P,EACP1J,SAAU,SAACxF,GAAD,OAAamP,EAAYnP,EAAQyF,OAAOpG,WAGtD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,MACNlG,MAAOgH,EACPb,SAAU,SAACxF,GAAD,OAAasG,EAAOtG,EAAQyF,OAAOpG,WAGjD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,QACNlG,MAAO6E,EACPsB,SAAU,SAACxF,GAAD,OAAamE,EAASnE,EAAQyF,OAAOpG,WAGnD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,WACNlG,MAAOqH,EACPlB,SAAU,SAACxF,GAAD,OAAa2G,EAAS3G,EAAQyF,OAAOpG,WAGnD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,QACNlG,MAAO+E,EACPoB,SAAU,SAACxF,GAAD,OAAaqE,EAAYrE,EAAQyF,OAAOpG,WAGtD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,cACNlG,MAAOuH,EACPpB,SAAU,SAACxF,GAAD,OAAa6G,EAAW7G,EAAQyF,OAAOpG,WAGrD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QA3GuB,2CA4GvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,cAWDqE,GCvIP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS8I,KACtB,IAAM3L,EAAUL,KADe,EAGDxG,qBAHC,mBAGxByE,EAHwB,KAGf6Q,EAHe,OAITtV,mBAAiB,IAJR,mBAIxBuM,EAJwB,KAInBC,EAJmB,OAKLxM,mBAAiB,IALZ,mBAKxBoK,EALwB,KAKjBC,EALiB,OAMCrK,mBAAiB,IANlB,mBAMxBsK,EANwB,KAMdC,EANc,OAOC9J,IAAMT,WAPP,mBAOxB4D,EAPwB,KAOdgK,EAPc,iDAS/B,8BAAA3L,EAAA,sEACyBmN,MAAY,QAAS,CAC1CC,KAAM9K,KAAKmG,UAAU,CACnBjG,UACA2F,QACAmC,MACAjC,aAEFvN,QAAS,CACP,eAAgB,mBAChBuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WAZZ,cACQ3L,EADR,gBAcqBA,EAAS4L,OAd9B,OAgBe,iCAFPrN,EAdR,QAiBIyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,sCAATA,EACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IACrB,yBAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IArBzC,4CAT+B,sBAuC/B,OALAH,qBAAU,WACR,IAAMuT,EAAmB9Y,eAAeC,QAAQ,QAC1CyF,EAAOoC,KAAKC,MAAM+Q,GACxBD,EAAWnT,EAAKsC,WACf,IAED,0BACE2B,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,MACNlG,MAAOgH,EACPb,SAAU,SAACxF,GAAD,OAAasG,EAAOtG,EAAQyF,OAAOpG,WAGjD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,QACNlG,MAAO6E,EACPsB,SAAU,SAACxF,GAAD,OAAamE,EAASnE,EAAQyF,OAAOpG,WAInD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVxI,GAAG,iBACH0I,MAAM,QACNlG,MAAO+E,EACPoB,SAAU,SAACxF,GAAD,OAAaqE,EAAYrE,EAAQyF,OAAOpG,WAGtD,kBAACuI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QA/EuB,2CAgFvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,YAWDqE,GCnGP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS4H,KACtB,IAAMzK,EAAUL,KADe,EAGD/F,IAAMT,SAA6B,GAHlC,mBAGxBY,EAHwB,KAGfkO,EAHe,OAILrO,IAAMT,SAAkB,IAJnB,mBAIxBgH,EAJwB,KAIjBC,EAJiB,OAKSjH,mBAA+B,IALxC,mBAKxBK,EALwB,KAKVC,EALU,OAMYN,qBANZ,mBAMxBwV,EANwB,KAMRC,EANQ,OAOmCzV,qBAPnC,mBAOxB0E,EAPwB,KAOGgR,EAPH,OAUW1V,qBAVX,mBAUxBsE,EAVwB,KAUTqR,EAVS,OAWOlV,IAAMT,UAAS,GAXtB,mBAWxB+O,EAXwB,KAWXC,EAXW,OAYqBhP,oBAAS,GAZ9B,mBAYxB4V,EAZwB,KAYJC,EAZI,OAaK7V,oBAAS,GAbd,mBAaxB0N,EAbwB,KAaZC,EAbY,OAcH3N,qBAdG,mBAcxB6D,EAdwB,KAchBwJ,EAdgB,OAeC5M,IAAMT,WAfP,mBAexB4D,EAfwB,KAedgK,EAfc,KA2B/B5L,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IACHvB,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACyBtF,EAAIuF,IACzB,uBAFJ,gBACUC,EADV,EACUA,KAIRwT,EAAgB,UACdxT,EAAKwC,MACH,SAACmR,GAAD,OAAiBA,EAAYN,iBAAmBA,YAFpC,aACd,EAEGlR,eARP,4CADc,uBAAC,WAAD,wBAYdyR,KACC,CAACP,IAEJxT,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,kDACsBtB,IAF/C,gBACUuB,EADV,EACUA,KAIR7B,EAAgB6B,EAAK,IALvB,4CADc,uBAAC,WAAD,wBAQdE,KACC,CAACzB,IA3D2B,4CAqF/B,gCAAAqB,EAAA,6DACQoC,EAAU,CACdmR,iBACA9Q,4BACAJ,gBACAO,cAAejE,EACfiD,UANJ,SASyBlH,EAAIsS,IAAI,oBAAqB5K,GATtD,gBAWe,yCAFLlC,EATV,EASUA,MAGNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IACrB,uCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAGvCQ,QAAQC,IAAIT,GAjBd,4CArF+B,sBAyG/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMK,EACNJ,QA1DmB,WACzBK,GAAe,IA0DTJ,OAvDkB,WACxBI,GAAe,IAuDTzJ,MAAO3E,EACP2K,UAAU,GAETvE,EAAMtD,KAAI,SAACnD,EAAM2E,GAAP,OACT,kBAAC2J,GAAA,EAAD,CACEK,IAAK3O,EAAKK,QACV2E,MAAOhF,EAAKK,QACZiF,QAAS,kBA/GK9C,EA+GkBxC,EAAKK,aA9G/CkO,EAAW/L,GADY,IAACA,IAiHbxC,EAAKwE,YAKd,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,iBAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkH,EACNjH,QA3E0B,WAChCkH,GAAsB,IA2EhBjH,OAxEyB,WAC/BiH,GAAsB,IAwEhBtQ,MAAOiQ,EACPjK,UAAU,GAETlL,EAAaqD,KAAI,SAACoS,EAAa5Q,GAAd,aAChB4Q,EAAYlV,UAAYA,EACtB,kBAACiO,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOuQ,EAAYN,eACnB3P,QAAS,kBAtIS,SAAC9C,EAAwBmC,GACvDuQ,EAAiB1S,GACjB4S,EAAiBtV,EAAa6E,GAAOZ,eAErCoR,EAA6BrV,EAAa6E,GAAOnB,eAmInCkS,CAAwBH,EAAYN,eAAgBtQ,KAJxD,UAOM4Q,EAAYhS,OAPlB,YAQ2B,SAAvBgS,EAAYjS,OAAoB,OAAS,IAR7C,OAS4B,eAAvBiS,EAAYjS,OAA0B,YAAc,IATzD,OAU2B,SAAvBiS,EAAYjS,OAAoB,QAAU,GAV9C,oBAWcrG,KAAK0Y,IAAL,UACVlX,EAAM,IAAI1B,KAAJ,UAAYwY,EAAYK,qBADpB,aACV,EAA8CzY,SAIlD,yBAAKwR,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAM1D,kBAACgI,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMhB,EACNiB,QAvGkB,WACxBhB,GAAc,IAuGRiB,OApGiB,WACvBjB,GAAc,IAoGRpI,MAAO1B,EACP0H,UAAU,GAEV,kBAACsD,GAAA,EAAD,CAAUK,IAAK,EAAG3J,MAAM,OAAOM,QAAS,kBAAMwH,EAAU,UAAxD,QAGA,kBAACwB,GAAA,EAAD,CACEK,IAAK,EACL3J,MAAM,aACNM,QAAS,kBAAMwH,EAAU,gBAH3B,eASJ,kBAACS,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QA1MuB,2CA2MvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,cAWDqE,GCrOP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS4H,KACtB,IAAMzK,EAAUL,KADe,EAGD/F,IAAMT,SAA6B,GAHlC,mBAGxBY,EAHwB,KAGfkO,EAHe,OAILrO,IAAMT,SAAkB,IAJnB,mBAIxBgH,EAJwB,KAIjBC,EAJiB,OAKSjH,mBAA+B,IALxC,mBAKxBK,EALwB,KAKVC,EALU,OAMYN,qBANZ,mBAMxBwV,EANwB,KAMRC,EANQ,OAOmCzV,qBAPnC,mBAOxB0E,EAPwB,KAOGgR,EAPH,OAUW1V,qBAVX,mBAUxBsE,EAVwB,KAUTqR,EAVS,OAWOlV,IAAMT,UAAS,GAXtB,mBAWxB+O,EAXwB,KAWXC,EAXW,OAYqBhP,oBAAS,GAZ9B,mBAYxB4V,EAZwB,KAYJC,EAZI,OAaCpV,IAAMT,WAbP,mBAaxB4D,EAbwB,KAadgK,EAbc,KAwB/B5L,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IACHvB,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACyBtF,EAAIuF,IACzB,uBAFJ,gBACUC,EADV,EACUA,KAIRwT,EAAgB,UACdxT,EAAKwC,MACH,SAACmR,GAAD,OAAiBA,EAAYN,iBAAmBA,YAFpC,aACd,EAEGlR,eARP,4CADc,uBAAC,WAAD,wBAYdyR,KACC,CAACP,IAEJxT,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,kDACsBtB,IAF/C,gBACUuB,EADV,EACUA,KAIR7B,EAAgB6B,EAAK,IALvB,4CADc,uBAAC,WAAD,wBAQdE,KACC,CAACzB,IAxD2B,4CA0E/B,8BAAAqB,EAAA,sEACyBmN,MAAY,oBAAqB,CACtDC,KAAM9K,KAAKmG,UAAU,CACnB8K,iBACA9Q,4BACAJ,gBACAO,cAAejE,IAEjB7D,QAAS,CACP,eAAgB,mBAChBuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WAZZ,cACQ3L,EADR,gBAcqBA,EAAS4L,OAd9B,OAgBe,sCAFPrN,EAdR,QAiBIyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,sCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAnB3C,4CA1E+B,sBAiG/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMK,EACNJ,QArDmB,WACzBK,GAAe,IAqDTJ,OAlDkB,WACxBI,GAAe,IAkDTzJ,MAAO3E,EACP2K,UAAU,GAETvE,EAAMtD,KAAI,SAACnD,EAAM2E,GAAP,OACT,kBAAC2J,GAAA,EAAD,CACEK,IAAK3O,EAAKK,QACV2E,MAAOhF,EAAKK,QACZiF,QAAS,kBAzGK9C,EAyGkBxC,EAAKK,aAxG/CkO,EAAW/L,GADY,IAACA,IA2GbxC,EAAKwE,YAKd,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,iBAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkH,EACNjH,QAtE0B,WAChCkH,GAAsB,IAsEhBjH,OAnEyB,WAC/BiH,GAAsB,IAmEhBtQ,MAAOiQ,EACPjK,UAAU,GAETlL,EAAaqD,KAAI,SAACoS,EAAa5Q,GAAd,aAChB4Q,EAAYlV,UAAYA,EACtB,kBAACiO,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOuQ,EAAYN,eACnB3P,QAAS,kBAhIS,SAAC9C,EAAwBmC,GACvDuQ,EAAiB1S,GACjB4S,EAAiBtV,EAAa6E,GAAOZ,eACrCoR,EAA6BrV,EAAa6E,GAAOnB,eA8HnCkS,CAAwBH,EAAYN,eAAgBtQ,KAJxD,UAOM4Q,EAAYhS,OAPlB,YAOmD,SAAvBgS,EAAYjS,OAAoB,OAAS,IAPrE,OAOiG,eAAvBiS,EAAYjS,OAA0B,YAAc,IAP9H,OAO0J,SAAvBiS,EAAYjS,OAAoB,QAAU,GAP7K,oBAO2LrG,KAAK0Y,IAAL,UAASlX,EAAM,IAAI1B,KAAJ,UAAYwY,EAAYK,qBAAvC,aAAS,EAA8CzY,SAGlP,yBAAKwR,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAM1D,kBAACgI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QApKuB,2CAqKvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,YAWDqE,G,8OC3MA,IAAM5G,GAAYC,IAAOC,IAAV,MCahBsJ,GAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVyP,UAAW,KAEbC,MAAO,CACL5O,OAAQ,OAIG,SAAS6O,KACtB,IAAMzP,EAAUL,KADkB,EAEIxG,mBAEpC,IAJgC,mBAE3BuW,EAF2B,KAEdC,EAFc,KAkBlC,OAZAxU,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IACzB,gDAFJ,gBACUC,EADV,EACUA,KAIRqU,EAAerU,EAAK,IALtB,4CADc,uBAAC,WAAD,wBASdsU,KACC,IAGD,kBAAC,GAAD,KACGF,EAAY1W,OAAS,EAClB0W,EAAY7S,KAAI,SAACgT,GAAD,OACd,kBAACxP,EAAA,EAAD,CAAMd,UAAWS,EAAQH,KAAMrB,MAAO,CAACC,OAAQ,wBAC7C,kBAAC8B,EAAA,EAAD,KACE,kBAACgJ,GAAA,EAAD,CACEnI,UAAU,MACV7B,UAAWS,EAAQwP,MACnBpR,MAAOyR,EAAOzR,MACdF,MAAO2R,EAAO9O,OAEhB,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC3CyO,EAAO9O,MAEV,kBAACE,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CyO,EAAO3R,OAEV,kBAAC+C,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBAENwI,UAAU,KAJZ,IAMIyO,EAAOC,OAEX,kBAAC,KAAD,CAAatR,MAAO,CAACuR,OAAO,GAAD,OAAsB,MAAjBF,EAAOG,MAAgB,QAAQ,SAAaC,IAAKJ,EAAOG,MAAOjR,MAAwB,MAAjB8Q,EAAOG,MAAgB,IAAI,EAAGpP,OAAyB,MAAjBiP,EAAOG,MAAgB,IAAI,EAAGE,UAAU,UAK5L,IC5DV,IAAMvQ,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAELxG,mBAAkB,IAFb,mBAExBgH,EAFwB,KAEjBC,EAFiB,OAGDjH,mBAA6B,GAH5B,mBAGxBY,EAHwB,KAGfC,EAHe,OAISb,mBAA+B,IAJxC,mBAIxBK,EAJwB,KAIVC,EAJU,OAKcN,qBALd,mBAKxBwV,EALwB,KAKRwB,EALQ,OAMLhX,qBANK,mBAMxBiF,EANwB,KAMjBoL,EANiB,OAOLrQ,mBAAiB,KAPZ,mBAOxB6W,EAPwB,KAOjBI,EAPiB,OAQCxW,IAAMT,WARP,mBAQxB4D,EARwB,KAQdgK,EARc,OASOnN,IAAMT,UAAS,GATtB,mBASxB+O,EATwB,KASXC,EATW,OAUqBhP,oBAAS,GAV9B,mBAUxB4V,EAVwB,KAUJC,EAVI,KAmB/B7T,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IACHvB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,kDACsBtB,IAF/C,gBACUuB,EADV,EACUA,KAIR7B,EAAgB6B,EAAK,IALvB,4CADc,uBAAC,WAAD,wBAQdE,KACC,CAACzB,IApC2B,4CAyD/B,gCAAAqB,EAAA,6DACQoC,EAAU,CACdY,MAAOA,EACP4R,MAAOA,EACPK,iCAAkC1B,GAJtC,SAMyB7Y,EAAImI,KAAK,eAAgBT,GANlD,gBAQe,iCAFLlC,EANV,EAMUA,MAGNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IACrB,+BAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAXzC,4CAzD+B,sBAuE/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMK,EACNJ,QA3CmB,WACzBK,GAAe,IA2CTJ,OAxCkB,WACxBI,GAAe,IAwCTzJ,MAAO3E,EACP2K,UAAU,GAETvE,EAAMtD,KAAI,SAACnD,EAAM2E,GAAP,OACT,kBAAC2J,GAAA,EAAD,CACEK,IAAK3O,EAAKK,QACV2E,MAAOhF,EAAKK,QACZiF,QAAS,kBAlFK9C,EAkFkBxC,EAAKK,aAjF/CC,EAAWkC,GADY,IAACA,IAoFbxC,EAAKwE,YAKd,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,iBAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkH,EACNjH,QA5D0B,WAChCkH,GAAsB,IA4DhBjH,OAzDyB,WAC/BiH,GAAsB,IAyDhBtQ,MAAOiQ,EACPjK,UAAU,GAETlL,EAAaqD,KAAI,SAACoS,EAAa5Q,GAAd,OAChB4Q,EAAYlV,UAAYA,EACtB,kBAACiO,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOuQ,EAAYN,eACnB3P,QAAS,kBAxGU9C,EAyGO+S,EAAYN,oBAxGlDwB,EAAmBjU,GADW,IAACA,IAqGrB,UAOM+S,EAAYhS,OAPlB,YAQ2B,SAAvBgS,EAAYjS,OAAoB,OAAS,IAR7C,OAS4B,eAAvBiS,EAAYjS,OAA0B,YAAc,IATzD,OAU2B,SAAvBiS,EAAYjS,OAAoB,QAAU,KAI9C,yBAAKqL,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAK1D,kBAACgI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC,KAAD,CAAYgL,UAAU,EAAQC,OAnGP,SAACC,GAC5BH,EAASG,EAAKC,YAoGZ,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACD,UAAU,EAAQnF,UAAWS,EAAQvB,QAC1D,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVG,SAAU,SAACxF,GAAD,OAAa+Q,EAAS/Q,EAAQyF,OAAOpG,QAC/CA,MAAOsR,EACP9T,GAAG,iBACH0I,MAAM,kBAGV,kBAACqC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAzJuB,2CA0JvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,aAWDqE,GCpLP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS4H,KACtB,IAAMzK,EAAUL,KADe,EAELxG,mBAAkB,IAFb,mBAExBgH,EAFwB,KAEjBC,EAFiB,OAGDjH,mBAA6B,GAH5B,mBAGxBY,EAHwB,KAGfC,EAHe,OAISb,mBAA+B,IAJxC,mBAIxBK,EAJwB,KAIVC,EAJU,OAKcN,qBALd,mBAKxBwV,EALwB,KAKRwB,EALQ,OAMOhX,mBAA6B,GANpC,mBAMxBmX,EANwB,KAMTC,EANS,OAOMpX,mBAAyB,IAP/B,mBAOxBqX,EAPwB,KAOZb,EAPY,OAQLxW,qBARK,mBAQxBiF,EARwB,KAQjBoL,EARiB,OASLrQ,mBAAiB,KATZ,mBASxB6W,EATwB,KASjBI,EATiB,OAUCxW,IAAMT,WAVP,mBAUxB4D,EAVwB,KAUdgK,EAVc,OAWOnN,IAAMT,UAAS,GAXtB,mBAWxB+O,EAXwB,KAWXC,EAXW,OAYqBhP,oBAAS,GAZ9B,mBAYxB4V,EAZwB,KAYJC,EAZI,OAamB7V,oBAAS,GAb5B,mBAaxBsX,GAbwB,KAaLC,GAbK,KA2B/BvV,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IACHvB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,kBADjC,gBACUC,EADV,EACUA,KAERqU,EAAerU,GAHjB,4CADc,uBAAC,WAAD,wBAMdsU,KACC,IAEHzU,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,kDACsBtB,IAF/C,gBACUuB,EADV,EACUA,KAIR7B,EAAgB6B,EAAK,IALvB,4CADc,uBAAC,WAAD,wBAQdE,KACC,CAACzB,IArD2B,8CAmF/B,gCAAAqB,EAAA,6DACQoC,EAAU,CACdY,MAAOA,EACP4R,MAAOA,EACPW,UAAWL,EACXD,iCAAkC1B,GALtC,SAOyB7Y,EAAIsS,IAAI,eAAgB5K,GAPjD,gBASe,qCAFLlC,EAPV,EAOUA,MAGNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IACrB,mCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAZzC,4CAnF+B,sBAkG/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMK,EACNJ,QArDmB,WACzBK,GAAe,IAqDTJ,OAlDkB,WACxBI,GAAe,IAkDTzJ,MAAO3E,EACP2K,UAAU,GAETvE,EAAMtD,KAAI,SAACnD,EAAM2E,GAAP,OACT,kBAAC2J,GAAA,EAAD,CACEK,IAAK3O,EAAKK,QACV2E,MAAOhF,EAAKK,QACZiF,QAAS,kBA1GK9C,EA0GkBxC,EAAKK,aAzG/CC,EAAWkC,GADY,IAACA,IA4GbxC,EAAKwE,YAKd,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,iBAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkH,EACNjH,QAtE0B,WAChCkH,GAAsB,IAsEhBjH,OAnEyB,WAC/BiH,GAAsB,IAmEhBtQ,MAAOiQ,EACPjK,UAAU,GAETlL,EAAaqD,KAAI,SAACoS,EAAa5Q,GAAd,OAChB4Q,EAAYlV,UAAYA,EACtB,kBAACiO,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOuQ,EAAYN,eACnB3P,QAAS,kBAhIU9C,EAiIO+S,EAAYN,oBAhIlDwB,EAAmBjU,GADW,IAACA,IA6HrB,UAOM+S,EAAYhS,OAPlB,YAQ2B,SAAvBgS,EAAYjS,OAAoB,OAAS,IAR7C,OAS4B,eAAvBiS,EAAYjS,OAA0B,YAAc,IATzD,OAU2B,SAAvBiS,EAAYjS,OAAoB,QAAU,KAI9C,yBAAKqL,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAK1D,kBAACgI,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,cAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAM4I,GACN3I,QAjGyB,WAC/B4I,IAAqB,IAiGf3I,OA9FwB,WAC9B2I,IAAqB,IA8FfhS,MAAO4R,EACP5L,UAAU,GAET8L,EAAW3T,KAAI,SAACgT,EAAQxR,GAAT,OACdwR,EAAOQ,mCAAqC1B,EAC1C,kBAAC3G,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAO4R,EACPtR,QAAS,kBA/JS9C,EA+JoB2T,EAAOc,eA9JzDJ,EAAarU,GADgB,IAACA,IA4JpB,uBAKmB2T,EAAOc,UAL1B,6BAKwDd,EAAOQ,mCAG/D,yBAAKhI,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAK1D,kBAACgI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC,KAAD,CAAYgL,UAAU,EAAOC,OA1IN,SAACC,GAC5BH,EAASG,EAAKC,YA2IZ,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACD,UAAU,EAAQnF,UAAWS,EAAQvB,QAC1D,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVG,SAAU,SAACxF,GAAD,OAAa+Q,EAAS/Q,EAAQyF,OAAOpG,QAC/CA,MAAOsR,EACP9T,GAAG,iBACH0I,MAAM,kBAGV,kBAACqC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAjNuB,4CAkNvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,cAWDqE,GC9OP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS8I,KACtB,IAAM3L,EAAUL,KADe,EAELxG,mBAAkB,IAFb,mBAExBgH,EAFwB,KAEjBC,EAFiB,OAGDjH,mBAA6B,GAH5B,mBAGxBY,EAHwB,KAGfC,EAHe,OAISb,mBAA+B,IAJxC,mBAIxBK,EAJwB,KAIVC,EAJU,OAKcN,qBALd,mBAKxBwV,EALwB,KAKRwB,EALQ,OAMOhX,qBANP,mBAMxBmX,EANwB,KAMTC,EANS,OAOMpX,mBAAyB,IAP/B,mBAOxBqX,EAPwB,KAOZb,EAPY,OAQC/V,IAAMT,WARP,mBAQxB4D,EARwB,KAQdgK,EARc,OASOnN,IAAMT,UAAS,GATtB,mBASxB+O,EATwB,KASXC,EATW,OAUqBhP,oBAAS,GAV9B,mBAUxB4V,EAVwB,KAUJC,EAVI,OAWmB7V,oBAAS,GAX5B,mBAWxBsX,EAXwB,KAWLC,EAXK,KAyB/BvV,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IACHvB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,kBADjC,gBACUC,EADV,EACUA,KAERqU,EAAerU,GAHjB,4CADc,uBAAC,WAAD,wBAMdsU,KACC,IAEHzU,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,kDACsBtB,IAF/C,gBACUuB,EADV,EACUA,KAIR7B,EAAgB6B,EAAK,IALvB,4CADc,uBAAC,WAAD,wBAQdE,KACC,CAACzB,IAnD2B,4CA6E/B,8BAAAqB,EAAA,sEACyBmN,MAAY,eAAgB,CACjDC,KAAM9K,KAAKmG,UAAU,CACnB8M,UAAWL,IAGbpa,QAAS,CACP,eAAgB,mBAChBuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WAVZ,cACQ3L,EADR,gBAYqBA,EAAS4L,OAZ9B,OAce,kCAFPrN,EAZR,QAeIyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,kCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAjB3C,4CA7E+B,sBAkG/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMK,EACNJ,QA3DmB,WACzBK,GAAe,IA2DTJ,OAxDkB,WACxBI,GAAe,IAwDTzJ,MAAO3E,EACP2K,UAAU,GAETvE,EAAMtD,KAAI,SAACnD,EAAM2E,GAAP,OACT,kBAAC2J,GAAA,EAAD,CACEK,IAAK3O,EAAKK,QACV2E,MAAOhF,EAAKK,QACZiF,QAAS,kBA5GK9C,EA4GkBxC,EAAKK,aA3G/CC,EAAWkC,GADY,IAACA,IA8GbxC,EAAKwE,YAKd,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,iBAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkH,EACNjH,QA5E0B,WAChCkH,GAAsB,IA4EhBjH,OAzEyB,WAC/BiH,GAAsB,IAyEhBtQ,MAAOiQ,EACPjK,UAAU,GAETlL,EAAaqD,KAAI,SAACoS,EAAa5Q,GAAd,OAChB4Q,EAAYlV,UAAYA,EACtB,kBAACiO,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOuQ,EAAYN,eACnB3P,QAAS,kBAlIU9C,EAmIO+S,EAAYN,oBAlIlDwB,EAAmBjU,GADW,IAACA,IA+HrB,UAOM+S,EAAYhS,OAPlB,YAQ2B,SAAvBgS,EAAYjS,OAAoB,OAAS,IAR7C,OAS4B,eAAvBiS,EAAYjS,OAA0B,YAAc,IATzD,OAU2B,SAAvBiS,EAAYjS,OAAoB,QAAU,KAI9C,yBAAKqL,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAK1D,kBAACgI,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,cAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAM4I,EACN3I,QAvGyB,WAC/B4I,GAAqB,IAuGf3I,OApGwB,WAC9B2I,GAAqB,IAoGfhS,MAAO4R,EACP5L,UAAU,GAET8L,EAAW3T,KAAI,SAACgT,EAAQxR,GAAT,OACdwR,EAAOQ,mCAAqC1B,EAC1C,kBAAC3G,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAO4R,EACPtR,QAAS,kBAjKS9C,EAiKoB2T,EAAOc,eAhKzDJ,EAAarU,GADgB,IAACA,IA8JpB,uBAKmB2T,EAAOc,UAL1B,6BAKwDd,EAAOQ,mCAG/D,yBAAKhI,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAM1D,kBAACgI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAtMuB,2CAuMvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,YAWDqE,G,uIC5OA,IAAM5G,GAAYC,IAAOC,IAAV,M,2lKCAf,IAAMF,GAAYC,IAAOC,IAAV,MAMTW,GAAQZ,IAAOa,GAAV,MAGLC,GAAWd,IAAOe,GAAV,MAGRC,GAAShB,IAAOiB,OAAV,MAONC,GAAelB,IAAOC,IAAV,MAQZkB,GAAmBnB,IAAOC,IAAV,MAWhBmB,GAAkBpB,IAAOC,IAAV,MAWfoB,GAAcrB,IAAOsB,IAAV,MAOXC,GAAkBvB,IAAOC,IAAV,MAQfuB,GAAmBxB,IAAOC,IAAV,MAWhBwB,GAAazB,IAAO0B,GAAV,MAOVC,GAAQ3B,IAAOC,IAAV,MAaL2B,GAAY5B,IAAO0B,GAAV,MAOTG,GAAW7B,IAAOC,IAAV,MAYR6B,GAAc9B,IAAOC,IAAV,MAQX8B,GAAQ/B,IAAOC,IAAV,MAaL+B,GAAchC,IAAOC,IAAV,MAWXgC,GAAUjC,IAAOsB,IAAV,MAKPY,GAAkBlC,IAAOC,IAAV,MASfkC,GAAenC,IAAOC,IAAV,MAKZmC,GAAyBpC,IAAOC,IAAV,MAStBoC,GAAgBrC,IAAOsC,OAAV,MACJ,SAAAC,GAAK,OAAIA,EAAMC,SAUxBC,GAAqBzC,IAAOC,IAAV,MAOlByC,GAAc1C,IAAOsC,OAAV,MACF,SAAAC,GAAK,OAAIA,EAAMC,SASxBG,GAAwB3C,IAAOC,IAAV,MAErB,SAAAsC,GAAK,OAAIA,EAAMK,OAAS,EAAE,OAAO,UAQhCC,GAAqB7C,IAAOsC,OAAV,MC9KjB,SAASkY,KAAgB,IAAD,EACGzX,mBAA2B,IAD9B,mBAC9B0X,EAD8B,KAChBC,EADgB,OAEe3X,mBAAc,IAF7B,mBAE9B4X,EAF8B,KAEVC,EAFU,OAGG7X,mBAAiC,IAHpC,mBAG9BK,EAH8B,KAGhBC,EAHgB,OAITN,qBAJS,mBAI9B6P,EAJ8B,KAItBiI,EAJsB,OAKTrX,IAAMT,SAAmB,IALhB,mBAKtBW,GALsB,aAMHX,qBANG,mBAM9B0Q,EAN8B,KAMnBqH,EANmB,OAOf/X,qBAPe,mBAO9Bc,EAP8B,KAOzBC,EAPyB,OAQXf,qBARW,mBAQ9BgB,EAR8B,KAQvBC,EARuB,OASbjB,qBATa,mBAS9BkB,EAT8B,KASxBC,EATwB,OAUPnB,qBAVO,mBAUrBoB,GAVqB,aAWLpB,qBAXK,mBAW9BqB,EAX8B,KAWpBC,EAXoB,OAYOtB,mBAAmB,IAZ1B,mBAY9BuB,GAZ8B,KAYdC,GAZc,QAaPxB,mBAAS,GAbF,qBAarByB,IAbqB,gBAcbzB,oBAAS,GAdI,qBAc9B0B,GAd8B,MAcxBC,GAdwB,SAeD3B,oBAAS,GAfR,qBAe9B4B,GAf8B,MAelBC,GAfkB,SAgBb7B,oBAAS,GAhBI,qBAgB9B8B,GAhB8B,MAgBxBC,GAhBwB,MAkBrCC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,kBADjC,gBACUC,EADV,EACUA,KACRwV,EAAgBxV,GAFlB,4CADc,uBAAC,WAAD,wBAKd6P,KACC,IAEHhQ,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,sDAC0BzF,eAAeC,QAC5D,eAHN,gBACUyF,EADV,EACUA,KAKRQ,QAAQC,IAAIT,EAAK,IACjB7B,EAAgB6B,EAAK,IAPvB,4CADc,uBAAC,WAAD,wBAUdE,KACC,IACHL,qBAAU,WACR,IACMM,EAAaC,EADE,IAAIjF,KAAJ,iBAAYuS,QAAZ,IAAYA,OAAZ,EAAYA,EAAQC,eAEnCrN,EAAWC,aAAY,WAC3BjB,IAAW,SAAC7D,GAAD,OAAaA,EAAU,MAGA,IAAhCJ,KAAKqF,KAAKP,EAAW/E,QACY,IAAjCC,KAAKqF,KAAKP,EAAW5E,SACc,IAAnCF,KAAKqF,KAAKP,EAAW3E,WAIW,IAAhCH,KAAKqF,KAAKP,EAAW/E,OACW,IAAhCC,KAAKqF,KAAKP,EAAW5E,SACc,IAAnCF,KAAKqF,KAAKP,EAAW3E,WAIW,IAAhCH,KAAKqF,KAAKP,EAAW/E,QACY,IAAjCC,KAAKqF,KAAKP,EAAW5E,QACa,IAAlCF,KAAKqF,KAAKP,EAAW3E,UAIU,IAA/BH,KAAKqF,KAAKP,EAAW/E,QACY,IAAjCC,KAAKqF,KAAKP,EAAW5E,SACc,IAAnCF,KAAKqF,KAAKP,EAAW3E,UAIU,IAA/BH,KAAKqF,KAAKP,EAAW/E,OACW,IAAhCC,KAAKqF,KAAKP,EAAW5E,SACc,IAAnCF,KAAKqF,KAAKP,EAAW3E,UAIUqa,MAA/Bxa,KAAKqF,KAAKP,EAAW/E,OACWya,MAAhCxa,KAAKqF,KAAKP,EAAW5E,QACasa,MAAlCxa,KAAKqF,KAAKP,EAAW3E,SA5BrB2D,EAAY,aAgCZA,EAAY,SAAD,OACAgB,EAAW/E,KADX,mBAC0B+E,EAAW5E,MADrC,qBACuD4E,EAAW3E,YAG9E,KACH,OAAO,kBAAMmF,cAAcL,OAE7BT,qBAAU,WAAM,4CACd,oCAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,kBACVzF,eAAeC,QAAQ,eAFtC,gBACUyF,EADV,EACUA,KAIFY,EAAUtG,eAAeC,QAAQ,aACvCqb,EAAa/U,SAASD,IACtB+U,EAAU3V,EAAK,IAETc,EAAO,IAAI3F,KAAK6E,EAAK,GAAG2N,aACxB5M,EAAS,CAAC,KAAD,wDAcfnC,EAAO,GAAD,OAAIkC,EAAKE,eACflC,EAAS,GAAD,OAAIiC,EAAOD,EAAKG,cACxBjC,EAAQ,GAAD,OAAI8B,EAAKI,mBAChBjC,EAAW,GAAD,OAAI6B,EAAKK,eA3BrB,6CADc,uBAAC,WAAD,wBA8Bd2U,KACC,IAEHjW,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,WADjC,gBACUC,EADV,EACUA,KAERxB,EAAUwB,GAHZ,4CADc,uBAAC,WAAD,wBAMdqB,KACC,IAEHxB,qBAAU,YACR,WACE,IAAMyB,EAASiU,EAAahU,KAAI,SAACwU,GAC/B,IAAItU,EA0BJ,OAxB4B,IAAxBvD,EAAaR,OACf+D,EAAW,CACTC,OAAQ,OACRC,OAAQoU,EAAapU,OACrBqO,gBAAiB+F,EAAa/F,gBAC9BzB,aAGFrQ,EAAaqD,KAAI,SAACM,GAEdA,EAAiBmO,kBAAoB+F,EAAa/F,kBAElDvO,EAAQ,eAAQI,YAILC,IAAbL,IACFA,EAAW,CACTC,OAAQ,OACRC,OAAQoU,EAAapU,OACrBqO,gBAAiB+F,EAAa/F,gBAC9BzB,cAGG9M,KAGTiU,EAAsBpU,GAExBS,KACC,CAACwT,EAAcrX,IArKmB,8CAqLrC,4BAAA4B,EAAA,sDACMV,GAAe1B,OAAS,IACpBsE,EAAgB1H,eAAeC,QAAQ,QAE7C6E,GAAemC,IAAf,uCAAmB,WAAOU,GAAP,qBAAAnC,EAAA,6DACXoC,EAAU,CACdC,cAAeC,KAAKC,MAAML,GAAUM,QACpC0T,8BAA+BnV,SAAS,GAAD,iBAEnC0U,EAAa/S,MAAK,SAACC,GAAD,OAAWA,EAAMd,SAAWM,YAFX,aAEnC,EACI+N,kBAGRiG,kBAAmB1H,GATJ,SAYM/T,EAAImI,KAAK,sBAAuBT,GAZtC,gBAYTlC,EAZS,EAYTA,KACRQ,QAAQC,IAAIT,GAbK,2CAAnB,wDAJJ,4CArLqC,sBA0OrC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,YAAQ0N,QAAR,IAAQA,OAAR,EAAQA,EAAQ9K,OAChB,kBAAC,GAAD,YAAW8K,QAAX,IAAWA,OAAX,EAAWA,EAAQ7K,WAErB,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEG,IAAG,OAAE0K,QAAF,IAAEA,OAAF,EAAEA,EAAQ5K,SAGjB,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,cACA,uBAAGI,MAAO,CAAEC,OAAQ,IAApB,aAA6BuK,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQtK,QAEvC,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,uBAAGF,MAAO,CAAEC,OAAQ,IACjBxE,EADH,IACSE,EADT,IACiBE,KAIrB,kBAAC,GAAD,KACG,IACD,kBAAC,IAAD,CAAesE,OAAM,OAAEqK,QAAF,IAAEA,OAAF,EAAEA,EAAQpK,YAAaC,YAAY,KAE1D,kBAAC,GAAD,KACE,2BAAIrE,MAIV,kBAAC,GAAD,CAAkBgE,MAAO,CAAEM,eAAgB,WACzC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAASR,IAAG,UzDlTH,GyDkTG,kBACZ,kBAAC,GAAD,yBACA,uBAAGE,MAAO,CAAEO,MAAO,QAAnB,iEAIF,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAST,IAAG,UzDzTH,GyDyTG,kBACZ,kBAAC,GAAD,gCACA,uBAAGE,MAAO,CAAEO,MAAO,QAAnB,iEAIF,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAST,IAAG,UzDhUH,GyDgUG,kBACZ,kBAAC,GAAD,4BACA,uBAAGE,MAAO,CAAEO,MAAO,QAAnB,wDAIF,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAST,IAAG,UzDvUH,GyDuUG,kBACZ,kBAAC,GAAD,0BACA,uBAAGE,MAAO,CAAEO,MAAO,QAAnB,qEAKJ,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,qCACA,kBAAC,GAAD,0DAEF,kBAAC,GAAD,KACE,6BACE,kBAAC,GAAD,CAAenG,MAAO,OAAQoG,QAtGV,WAC5B,IAAMC,GAAmB,IAATpE,GAAgB,QAAU,OACKqE,SAASC,iBACtD,SAEMC,SAAQ,SAACC,GACfA,EAAQb,MAAMS,QAAUA,KAE1BnE,IAASD,MA8FD,SAGA,kBAAC,GAAD,CAAejC,MAAO,OAAQoG,QA9FJ,WAClC,IAAMC,GAAyB,IAAflE,GAAsB,QAAU,OACDmE,SAASC,iBACtD,SAEMC,SAAQ,SAACC,GACfA,EAAQb,MAAMS,QAAUA,KAE1BjE,IAAeD,MAsFP,cAGA,kBAAC,GAAD,CAAenC,MAAO,QAASoG,QAvFV,WAC7B,IAAMC,GAAmB,IAAThE,GAAgB,QAAU,OACKiE,SAASC,iBACtD,UAEMC,SAAQ,SAACC,GACfA,EAAQb,MAAMS,QAAUA,KAE1B/D,IAASD,MA+ED,WAKJ,kBAAC,GAAD,KACG8V,EAAmBlU,KAAI,SAACkB,GACvB,IAAIuB,EAAa,QAQjB,MAPsB,gBAAb,OAALvB,QAAK,IAALA,OAAA,EAAAA,EAAOf,QACTsC,EAAa,OACc,UAAb,OAALvB,QAAK,IAALA,OAAA,EAAAA,EAAOf,QAChBsC,EAAa,QACc,UAAb,OAALvB,QAAK,IAALA,OAAA,EAAAA,EAAOf,UAChBsC,EAAa,QAGb,kBAAC,GAAD,CACEC,UAAWD,EACXN,QAAS,kBAnKU/B,EAoKM,OAACc,QAAD,IAACA,OAAD,EAACA,EAAOd,YAnK9B,UAmKsB,OAAgBc,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOf,SAhKpC,IAFPtC,GAAe8E,QAAO,SAACzB,GAAD,OAAWA,IAAUd,KAE/CjE,QACT2B,GAAkB,GAAD,mBAAKD,IAAL,CAAqBuC,MALZ,IAACA,GAsKnBrE,MAAO0G,GALT,OAOGvB,QAPH,IAOGA,OAPH,EAOGA,EAAOd,aAMlB,kBAAC,GAAD,CAAuBjE,OAAQ0B,GAAe1B,QAC5C,yBAAKwF,MAAO,CAAEO,MAAO,UAClBrE,GAAemC,KAAI,SAACkB,GAAD,OAClB,kBAAC,GAAD,CACEnF,MAAO,OACPoG,QAAS,kBAzKkB,SAAC/B,GACtC,IAAMwC,EAAS/E,GAAe8E,QAAO,SAACzB,GAAD,OAAWA,GAASd,KACzDtC,GAAkB8E,GAuKOC,CAA+B3B,KAE7CA,OAIP,6BACE,2BACGrD,GAAe1B,OADlB,YAC4BgQ,QAD5B,IAC4BA,OAD5B,EAC4BA,EAAQtK,MADpC,QACgD,IAC7ChE,GAAe1B,OAASmD,SAAS,GAAD,cAAI6M,QAAJ,IAAIA,OAAJ,EAAIA,EAAQtK,QAAU,KAEzD,kBAAC,GAAD,CAAoBM,QApWS,6CAoW7B,gBCxXV,IAAMW,GAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVrB,OAAQ,KAKG,SAASsB,KACtB,IAAMC,EAAUL,KACVM,EAAWC,cAFc,EAGD/G,mBAAqB,IAHpB,mBAGxB0P,EAHwB,KAGfC,EAHe,KAkB/B,OAbA3N,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,YADjC,gBACUC,EADV,EACUA,KAERwN,EAAWxN,GAHb,4CADc,uBAAC,WAAD,wBAMd8V,KACC,IAOD,kBAAC,GAAD,KACGvI,EAAQ7P,OAAS,EACd6P,EAAQhM,KAAI,SAACmM,GAAD,OACV,kBAAC3I,EAAA,EAAD,CACEd,UAAWS,EAAQH,KACnBrB,MAAO,CAAEO,MAAO,MAAOuB,SAAU,QAAQ7B,OAAQ,wBAEjD,kBAAC8B,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,kBAAmB,IACnBC,mBAAoB,GACpBC,YAAa,GAEb,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOrC,MAAO,EAAGG,MAAO,CAAEoC,OAAQ,UAChC,kBAAC2I,GAAA,EAAD,CACEnI,UAAU,MACV5C,MAAO,CAACqC,UAAW,cACnBC,IAAKkI,EAAO9K,MACZ0C,OAAO,QACP7B,MAAM,QACNX,MAAO4K,EAAO5K,MACdF,MAAO8K,EAAO9K,WAMxB,kBAAC8C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7C4H,EAAO9K,OAEV,kBAAC+C,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7C4H,EAAO7K,UAEV,kBAAC8C,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,KAEV,kBAAC,IAAD,CACEzC,OAAQqK,EAAOpK,YACfC,YAAY,KAGhB,kBAACoC,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,KAHZ,MAKM4H,EAAOtK,OAEb,kBAACuC,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,IACV5C,MAAO,CACLO,MAAO,OACP6B,OAAQ,OACRS,aAAc,QACdC,gBAAgB,GAAD,OACK,WAAlB0H,EAAOhM,OAAsB,QAAU,YAMjD,kBAACuE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,SACL7I,MAAM,UACN4F,MAAO,CACLS,QAAQ,GAAD,OAAuB,WAAlB+J,EAAOhM,OAAsB,QAAU,SAErDgC,QAAS,kBAjFE9C,EAiFsB8M,EAAOa,UAhFtDjU,eAAe8L,QAAQ,YAAvB,UAAuCxF,SACvC+D,EAAiB,CAAE0B,KAAM,MAAOC,MAAO4P,KAFzC,IAA2BtV,IA2Eb,mBAaN,IClHV,IAAMyD,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS4H,KACtB,IAAMzK,EAAUL,KADe,EAGG/F,IAAMT,SAA6B,GAHtC,mBAGxB0Q,EAHwB,KAGbC,EAHa,OAIFlQ,IAAMT,SAAqB,IAJzB,mBAIxB0P,EAJwB,KAIfoI,EAJe,OAKS9X,mBAAiC,IAL1C,mBAKxBK,EALwB,KAKVC,EALU,OAMYN,qBANZ,mBAMxBwV,EANwB,KAMRC,EANQ,OAO0CzV,qBAP1C,mBAOxBmY,EAPwB,KAOMG,EAPN,OAQWtY,qBARX,mBAQxBsE,EARwB,KAQTqR,EARS,OASWlV,IAAMT,UAAS,GAT1B,mBASxB4Q,EATwB,KASTC,EATS,OAUqB7Q,oBAAS,GAV9B,mBAUxB4V,EAVwB,KAUJC,EAVI,OAWK7V,oBAAS,GAXd,mBAWxB0N,EAXwB,KAWZC,EAXY,OAYH3N,qBAZG,mBAYxB6D,EAZwB,KAYhBwJ,EAZgB,OAaC5M,IAAMT,WAbP,mBAaxB4D,EAbwB,KAadgK,EAbc,KAyB/B5L,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,YADjC,gBACUC,EADV,EACUA,KAER2V,EAAU3V,GAHZ,4CADc,uBAAC,WAAD,wBAMd8V,KACC,IACHjW,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACyBtF,EAAIuF,IAA4B,yBADzD,gBACUC,EADV,EACUA,KACRwT,EAAgB,UACdxT,EAAKwC,MAAK,SAACmR,GAAD,OAAiBA,EAAYN,iBAAmBA,YAD5C,aACd,EAA2ElR,eAH/E,4CADc,uBAAC,WAAD,wBAOdyR,KACC,CAACP,IAEJxT,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,sDAAuDwO,IADhF,gBACUvO,EADV,EACUA,KACRQ,QAAQC,IAAIT,EAAK,IACjB7B,EAAgB6B,EAAK,IAHvB,4CADc,uBAAC,WAAD,wBAMdE,KACC,CAACqO,IAlD2B,4CA4E/B,gCAAAzO,EAAA,6DACQoC,EAAU,CACdmR,iBACA2C,gCACA7T,gBACA8T,kBAAmB1H,EACnB7M,UANJ,SASyBlH,EAAIsS,IAAI,sBAAuB5K,GATxD,gBASUlC,EATV,EASUA,KACRQ,QAAQC,IAAIT,GACC,wCAATA,EACFyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IACrB,uCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAdzC,4CA5E+B,sBA6F/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,QACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkC,EACNjC,QAvDqB,WAC3BkC,GAAiB,IAuDXjC,OApDoB,WAC1BiC,GAAiB,IAoDXtL,MAAOmL,EACPnF,UAAU,GAETmE,EAAQhM,KAAI,SAACmM,EAAQ3K,GAAT,OACX,kBAAC2J,GAAA,EAAD,CACEK,IAAKW,EAAOa,UACZnL,MAAOsK,EAAOa,UACd7K,QAAS,kBArGK9C,EAqGkB8M,EAAOa,eApGjDC,EAAa5N,GADU,IAACA,IAuGb8M,EAAO9K,YAKhB,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,iBAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkH,EACNjH,QAxE0B,WAChCkH,GAAsB,IAwEhBjH,OArEyB,WAC/BiH,GAAsB,IAqEhBtQ,MAAOiQ,EACPjK,UAAU,GAETlL,EAAaqD,KAAI,SAACoS,EAAa5Q,GAAd,aAAwB4Q,EAAYpF,YAAcA,EAChE,kBAAC7B,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOuQ,EAAYN,eACnB3P,QAAS,kBA3HS,SAAC9C,EAAwBmC,GACvDuQ,EAAiB1S,GACjB4S,EAAiBtV,EAAa6E,GAAOZ,eAErCgU,EAAiCjY,EAAa6E,GAAOiN,iBAwHvC8D,CAAwBH,EAAYN,eAAgBtQ,KAJxD,UAQK4Q,EAAYhS,OARjB,YAQkD,SAAvBgS,EAAYjS,OAAoB,OAAS,GARpE,6BAS2B,eAAvBiS,EAAYjS,OAA0B,YAAc,IATxD,OASoF,SAAvBiS,EAAYjS,OAAoB,QAAU,GATvG,sCAUarG,KAAK0Y,IAAL,UAASlX,EAAM,IAAI1B,KAAJ,UAAYwY,EAAYK,qBAAvC,aAAS,EAA8CzY,OAVpE,uBAcA,yBAAKwR,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAM1D,kBAACgI,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,UACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMhB,EACNiB,QAjGkB,WACxBhB,GAAc,IAiGRiB,OA9FiB,WACvBjB,GAAc,IA8FRpI,MAAO1B,EACP0H,UAAU,GAEV,kBAACsD,GAAA,EAAD,CAAUK,IAAK,EAAG3J,MAAM,OAAOM,QAAS,kBAAMwH,EAAU,UAAxD,QAGA,kBAACwB,GAAA,EAAD,CACEK,IAAK,EACL3J,MAAM,aACNM,QAAS,kBAAMwH,EAAU,gBAH3B,eASJ,kBAACS,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QA3LuB,2CA4LvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,cAWDqE,GCvNP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS4H,KACtB,IAAMzK,EAAUL,KADe,EAGG/F,IAAMT,SAA6B,GAHtC,mBAGxB0Q,EAHwB,KAGbC,EAHa,OAIDlQ,IAAMT,SAAqB,IAJ1B,mBAIxB0P,EAJwB,KAIfC,EAJe,OAKS3P,mBAAiC,IAL1C,mBAKxBK,EALwB,KAKVC,EALU,OAMYN,qBANZ,mBAMxBwV,EANwB,KAMRC,EANQ,OAU3BzV,qBAV2B,mBAQ7BmY,EAR6B,KAS7BG,EAT6B,OAWWtY,qBAXX,mBAWxBsE,EAXwB,KAWTqR,EAXS,OAYWlV,IAAMT,UAAS,GAZ1B,mBAYxB4Q,EAZwB,KAYTC,EAZS,OAaqB7Q,oBAAS,GAb9B,mBAaxB4V,EAbwB,KAaJC,EAbI,OAcCpV,IAAMT,WAdP,mBAcxB4D,EAdwB,KAcdgK,EAdc,KAyB/B5L,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,YADjC,gBACUC,EADV,EACUA,KAERwN,EAAWxN,GAHb,4CADc,uBAAC,WAAD,wBAMd8V,KACC,IACHjW,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACyBtF,EAAIuF,IACzB,yBAFJ,gBACUC,EADV,EACUA,KAIRwT,EAAgB,UACdxT,EAAKwC,MACH,SAACmR,GAAD,OAAiBA,EAAYN,iBAAmBA,YAFpC,aACd,EAEGlR,eARP,4CADc,uBAAC,WAAD,wBAYdyR,KACC,CAACP,IAEJxT,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,sDAC0BwO,IAFnD,gBACUvO,EADV,EACUA,KAIR7B,EAAgB6B,EAAK,IALvB,4CADc,uBAAC,WAAD,wBAQdE,KACC,CAACqO,IAzD2B,4CA2E/B,8BAAAzO,EAAA,sEACyBmN,MAAY,sBAAuB,CACxDC,KAAM9K,KAAKmG,UAAU,CACnB8K,iBACA2C,gCACA7T,gBACA8T,kBAAmB1H,IAErB3T,QAAS,CACP,eAAgB,mBAChBuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WAZZ,cACQ3L,EADR,gBAcqBA,EAAS4L,OAd9B,OAgBe,sCAFPrN,EAdR,QAiBIyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,sCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAnB3C,4CA3E+B,sBAkG/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,QACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkC,EACNjC,QArDqB,WAC3BkC,GAAiB,IAqDXjC,OAlDoB,WAC1BiC,GAAiB,IAkDXtL,MAAOmL,EACPnF,UAAU,GAETmE,EAAQhM,KAAI,SAACmM,EAAQ3K,GAAT,OACX,kBAAC2J,GAAA,EAAD,CACEK,IAAKW,EAAOa,UACZnL,MAAOsK,EAAOa,UACd7K,QAAS,kBAzGO9C,EAyGkB8M,EAAOa,eAxGnDC,EAAa5N,GADY,IAACA,IA2Gf8M,EAAO9K,YAKhB,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,iBAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkH,EACNjH,QAtE0B,WAChCkH,GAAsB,IAsEhBjH,OAnEyB,WAC/BiH,GAAsB,IAmEhBtQ,MAAOiQ,EACPjK,UAAU,GAETlL,EAAaqD,KAAI,SAACoS,EAAa5Q,GAAd,aAChB4Q,EAAYpF,YAAcA,EACxB,kBAAC7B,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOuQ,EAAYN,eACnB3P,QAAS,kBAhIS,SAAC9C,EAAwBmC,GACvDuQ,EAAiB1S,GACjB4S,EAAiBtV,EAAa6E,GAAOZ,eACrCgU,EAAiCjY,EAAa6E,GAAOiN,iBA8HvC8D,CAAwBH,EAAYN,eAAgBtQ,KAJxD,UAQK4Q,EAAYhS,OARjB,YAQkD,SAAvBgS,EAAYjS,OAAoB,OAAS,IARpE,OAQgG,eAAvBiS,EAAYjS,OAA0B,YAAc,IAR7H,OAQyJ,SAAvBiS,EAAYjS,OAAoB,QAAU,GAR5K,oBAQ0LrG,KAAK0Y,IAAL,UAASlX,EAAM,IAAI1B,KAAJ,UAAYwY,EAAYK,qBAAvC,aAAS,EAA8CzY,SAGjP,yBAAKwR,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAM1D,kBAACgI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAtKuB,2CAuKvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,YAWDqE,G,uJC7MA,IAAM5G,GAAYC,IAAOC,IAAV,MCWhBsJ,GAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVyP,UAAW,KAEbC,MAAO,CACL5O,OAAQ,OAIG,SAAS6O,KACtB,IAAMzP,EAAUL,KADkB,EAEQxG,mBAExC,IAJgC,mBAE3BuY,EAF2B,KAEZC,EAFY,KAkBlC,OAZAxW,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IACzB,mDAFJ,gBACUC,EADV,EACUA,KAIRqW,EAAiBrW,EAAK,IALxB,4CADc,uBAAC,WAAD,wBASdsU,KACC,IAGD,kBAAC,GAAD,KACG8B,EAAc1Y,OAAS,EACpB0Y,EAAc7U,KAAI,SAACgT,GAAD,OAChB,kBAACxP,EAAA,EAAD,CAAMd,UAAWS,EAAQH,MACvB,kBAACU,EAAA,EAAD,KACE,kBAACgJ,GAAA,EAAD,CACEnI,UAAU,MACV7B,UAAWS,EAAQwP,MACnBpR,MAAOyR,EAAOzR,MACdF,MAAO2R,EAAO9O,OAEhB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CyO,EAAO9O,MAEV,kBAACE,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CyO,EAAO3R,OAEV,kBAAC+C,EAAA,EAAD,CACEE,QAAQ,QACRvI,MAAM,gBACNwI,UAAU,KAHZ,IAKIyO,EAAOC,OAEX,kBAAC,KAAD,CAAatR,MAAO,CAACuR,OAAO,GAAD,OAAsB,MAAjBF,EAAOG,MAAgB,QAAQ,SAAaC,IAAKJ,EAAOG,MAAOjR,MAAwB,MAAjB8Q,EAAOG,MAAgB,IAAI,EAAGpP,OAAyB,MAAjBiP,EAAOG,MAAgB,IAAI,EAAGE,UAAU,UAK5L,ICzDV,IAAMvQ,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS9C,KACtB,IAAMC,EAAUL,KADe,EAEDxG,mBAAqB,IAFpB,mBAExB0P,EAFwB,KAEfC,EAFe,OAGG3P,mBAA6B,GAHhC,mBAGxB0Q,EAHwB,KAGbqH,EAHa,OAIS/X,mBAAiC,IAJ1C,mBAIxBK,EAJwB,KAIVC,EAJU,OAKcN,qBALd,mBAKxBwV,EALwB,KAKRwB,EALQ,OAMLhX,qBANK,mBAMxBiF,EANwB,KAMjBoL,EANiB,OAOLrQ,mBAAiB,KAPZ,mBAOxB6W,EAPwB,KAOjBI,EAPiB,OAQCxW,IAAMT,WARP,mBAQxB4D,EARwB,KAQdgK,EARc,OASWnN,IAAMT,UAAS,GAT1B,mBASxB4Q,EATwB,KASTC,EATS,OAUqB7Q,oBAAS,GAV9B,mBAUxB4V,EAVwB,KAUJC,EAVI,KAmB/B7T,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,YADjC,gBACUC,EADV,EACUA,KAERwN,EAAWxN,GAHb,4CADc,uBAAC,WAAD,wBAMd8V,KACC,IACHjW,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,sDAC0BwO,IAFnD,gBACUvO,EADV,EACUA,KAGRQ,QAAQC,IAAIT,EAAK,IACjB7B,EAAgB6B,EAAK,IALvB,4CADc,uBAAC,WAAD,wBAQdE,KACC,CAACqO,IApC2B,4CAyD/B,gCAAAzO,EAAA,6DACQoC,EAAU,CACdY,MAAOA,EACP4R,MAAOA,EACP4B,mCAAoCjD,GAJxC,SAMyB7Y,EAAImI,KAAK,iBAAkBT,GANpD,gBAQe,+BAFLlC,EANV,EAMUA,MAGNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IACrB,+BAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAXzC,4CAzD+B,sBAyE/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,QACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkC,EACNjC,QA7CqB,WAC3BkC,GAAiB,IA6CXjC,OA1CoB,WAC1BiC,GAAiB,IA0CXtL,MAAOmL,EACPnF,UAAU,GAETmE,EAAQhM,KAAI,SAACmM,EAAQ3K,GAAT,OACX,kBAAC2J,GAAA,EAAD,CACEK,IAAKW,EAAOa,UACZnL,MAAOsK,EAAOa,UACd7K,QAAS,kBApFO9C,EAoFkB8M,EAAOa,eAnFnDqH,EAAahV,GADY,IAACA,IAsFf8M,EAAO9K,YAKhB,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,iBAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkH,EACNjH,QA9D0B,WAChCkH,GAAsB,IA8DhBjH,OA3DyB,WAC/BiH,GAAsB,IA2DhBtQ,MAAOiQ,EACPjK,UAAU,GAETlL,EAAaqD,KAAI,SAACoS,EAAa5Q,GAAd,OAEhB4Q,EAAYpF,YAAcA,EAExB,kBAAC7B,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOuQ,EAAYN,eACnB3P,QAAS,kBA5GU9C,EA6GO+S,EAAYN,oBA5GlDwB,EAAmBjU,GADW,IAACA,IAyGrB,UAOM+S,EAAYhS,OAPlB,YAQ2B,SAAvBgS,EAAYjS,OAAoB,OAAS,IAR7C,OAS4B,eAAvBiS,EAAYjS,OAA0B,YAAc,IATzD,OAU2B,SAAvBiS,EAAYjS,OAAoB,QAAU,KAI9C,yBAAKqL,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAK1D,kBAACgI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC,KAAD,CAAYgL,UAAU,EAAOC,OAvGN,SAACC,GAC5BH,EAASG,EAAKC,YAwGZ,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACD,UAAU,EAAQnF,UAAWS,EAAQvB,QAC1D,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVG,SAAU,SAACxF,GAAD,OAAa+Q,EAAS/Q,EAAQyF,OAAOpG,QAC/CA,MAAOsR,EACP9T,GAAG,iBACH0I,MAAM,kBAGV,kBAACqC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QA7JuB,2CA8JvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,aAWDqE,GCxLP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS4H,KACtB,IAAMzK,EAAUL,KADe,EAEDxG,mBAAqB,IAFpB,mBAExB0P,EAFwB,KAEfC,EAFe,OAGG3P,mBAA6B,GAHhC,mBAGxB0Q,EAHwB,KAGbqH,EAHa,OAIS/X,mBAAiC,IAJ1C,mBAIxBK,EAJwB,KAIVC,EAJU,OAKcN,qBALd,mBAKxBwV,EALwB,KAKRwB,EALQ,OAMehX,mBAA6B,GAN5C,mBAMxB0Y,EANwB,KAMPC,EANO,OAOS3Y,mBAA2B,IAPpC,mBAOxB4Y,EAPwB,KAOVC,EAPU,OAQL7Y,qBARK,mBAQxBiF,EARwB,KAQjBoL,EARiB,OASLrQ,mBAAiB,KATZ,mBASxB6W,EATwB,KASjBI,EATiB,OAUCxW,IAAMT,WAVP,mBAUxB4D,EAVwB,KAUdgK,EAVc,OAWWnN,IAAMT,UAAS,GAX1B,mBAWxB4Q,EAXwB,KAWTC,EAXS,OAYqB7Q,oBAAS,GAZ9B,mBAYxB4V,EAZwB,KAYJC,EAZI,OAauB7V,oBAAS,GAbhC,mBAaxB8Y,GAbwB,KAaHC,GAbG,KA2B/B/W,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,YADjC,gBACUC,EADV,EACUA,KAERwN,EAAWxN,GAHb,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IACHvB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,oBADjC,gBACUC,EADV,EACUA,KAER0W,EAAgB1W,GAHlB,4CADc,uBAAC,WAAD,wBAMd6W,KACC,IAEHhX,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,sDAC0BwO,IAFnD,gBACUvO,EADV,EACUA,KAIR7B,EAAgB6B,EAAK,IALvB,4CADc,uBAAC,WAAD,wBAQdE,KACC,CAACqO,IArD2B,8CAmF/B,gCAAAzO,EAAA,6DACQoC,EAAU,CACdY,MAAOA,EACP4R,MAAOA,EACPW,UAAWkB,EACXD,mCAAoCjD,GALxC,SAOyB7Y,EAAIsS,IAAI,iBAAkB5K,GAPnD,gBASe,mCAFLlC,EAPV,EAOUA,MAGNyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IACrB,mCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IAZzC,4CAnF+B,sBAkG/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,SACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkC,EACNjC,QArDqB,WAC3BkC,GAAiB,IAqDXjC,OAlDoB,WAC1BiC,GAAiB,IAkDXtL,MAAOmL,EACPnF,UAAU,GAETmE,EAAQhM,KAAI,SAACmM,EAAQ3K,GAAT,OACX,kBAAC2J,GAAA,EAAD,CACEK,IAAKW,EAAOa,UACZnL,MAAOsK,EAAOa,UACd7K,QAAS,kBA1GO9C,EA0GkB8M,EAAOa,eAzGnDqH,EAAahV,GADY,IAACA,IA4Gf8M,EAAO9K,YAKhB,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,iBAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkH,EACNjH,QAtE0B,WAChCkH,GAAsB,IAsEhBjH,OAnEyB,WAC/BiH,GAAsB,IAmEhBtQ,MAAOiQ,EACPjK,UAAU,GAETlL,EAAaqD,KAAI,SAACoS,EAAa5Q,GAAd,OAChB4Q,EAAYpF,YAAcA,EACxB,kBAAC7B,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOuQ,EAAYN,eACnB3P,QAAS,kBAhIU9C,EAiIO+S,EAAYN,oBAhIlDwB,EAAmBjU,GADW,IAACA,IA6HrB,UAOM+S,EAAYhS,OAPlB,YAQ2B,SAAvBgS,EAAYjS,OAAoB,OAAS,IAR7C,OAS4B,eAAvBiS,EAAYjS,OAA0B,YAAc,IATzD,OAU2B,SAAvBiS,EAAYjS,OAAoB,QAAU,KAI9C,yBAAKqL,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAK1D,kBAACgI,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,cAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMoK,GACNnK,QAjG2B,WACjCoK,IAAuB,IAiGjBnK,OA9F0B,WAChCmK,IAAuB,IA8FjBxT,MAAOmT,EACPnN,UAAU,GAETqN,EAAalV,KAAI,SAACgT,EAAQxR,GAAT,OAChBwR,EAAO+B,qCAAuCjD,EAC5C,kBAAC3G,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOmT,EACP7S,QAAS,kBA/JS9C,EA+JoB2T,EAAOc,eA9JzDmB,EAAmB5V,GADU,IAACA,IA4JpB,uBAKmB2T,EAAOc,UAL1B,6BAKwDd,EAAO+B,qCAG/D,yBAAKvJ,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAK1D,kBAACgI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC,KAAD,CAAYgL,UAAU,EAAOC,OA1IN,SAACC,GAC5BH,EAASG,EAAKC,YA2IZ,kBAAC3C,GAAA,EAAD,CAAatC,WAAS,EAACD,UAAU,EAAOnF,UAAWS,EAAQvB,QACzD,kBAACgG,GAAA,EAAD,CACEC,UAAU,EACVG,SAAU,SAACxF,GAAD,OAAa+Q,EAAS/Q,EAAQyF,OAAOpG,QAC/CA,MAAOsR,EACP9T,GAAG,iBACH0I,MAAM,kBAGV,kBAACqC,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAjNuB,4CAkNvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,cAWDqE,GC7OP,IAAM4C,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXtG,KAAM,CACJZ,QAAS,OACTmH,SAAU,QAEZ3H,OAAQ,CACNA,OAAQiE,EAAMG,QAAQ,IAExBwD,aAAc,CACZzD,UAAWF,EAAMG,QAAQ,IAE3ByD,UAAW,CACTvH,MAAO,QAETrG,OAAQ,CACN+F,OAAQiE,EAAMG,QAAQ,SAIb,SAAS8I,KACtB,IAAM3L,EAAUL,KADe,EAEDxG,mBAAqB,IAFpB,mBAExB0P,EAFwB,KAEfC,EAFe,OAGG3P,mBAA6B,GAHhC,mBAGxB0Q,EAHwB,KAGbqH,EAHa,OAIS/X,mBAAiC,IAJ1C,mBAIxBK,EAJwB,KAIVC,EAJU,OAKcN,qBALd,mBAKxBwV,EALwB,KAKRwB,EALQ,OAMShX,qBANT,mBAMxB0Y,EANwB,KAMPtB,EANO,OAOSpX,mBAA2B,IAPpC,mBAOxB4Y,EAPwB,KAOVC,EAPU,OAQCpY,IAAMT,WARP,mBAQxB4D,EARwB,KAQdgK,EARc,OASWnN,IAAMT,UAAS,GAT1B,mBASxB4Q,EATwB,KASTC,EATS,OAUqB7Q,oBAAS,GAV9B,mBAUxB4V,EAVwB,KAUJC,EAVI,OAWuB7V,oBAAS,GAXhC,mBAWxB8Y,EAXwB,KAWHC,EAXG,KAyB/B/W,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,YADjC,gBACUC,EADV,EACUA,KAERwN,EAAWxN,GAHb,4CADc,uBAAC,WAAD,wBAMd8V,KACC,IACHjW,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,oBADjC,gBACUC,EADV,EACUA,KAER0W,EAAgB1W,GAHlB,4CADc,uBAAC,WAAD,wBAMd6W,KACC,IAEHhX,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,sDAC0BwO,IAFnD,gBACUvO,EADV,EACUA,KAIR7B,EAAgB6B,EAAK,IALvB,4CADc,uBAAC,WAAD,wBAQdE,KACC,CAACqO,IAnD2B,4CA6E/B,8BAAAzO,EAAA,sEACyBmN,MAAY,iBAAkB,CACnDC,KAAM9K,KAAKmG,UAAU,CACnB8M,UAAWkB,EACXD,mCAAoCjD,IAEtCzY,QAAS,CACP,eAAgB,mBAChBuS,cAAc,UAAD,OAAY7S,eAAeC,QAAQ,WAElD6S,OAAQ,WAVZ,cACQ3L,EADR,gBAYqBA,EAAS4L,OAZ9B,OAce,kCAFPrN,EAZR,QAeIyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,SAAS1I,IACnB,gCAATA,GACTyL,EAAY,kBAAChD,GAAA,EAAD,CAAOC,SAAS,WAAW1I,IAjB3C,4CA7E+B,sBAkG/B,OACE,0BACEiE,UAAWS,EAAQH,KACnB2E,YAAY,EACZH,SAAU,SAAC2C,GAAD,OAAWA,EAAMzC,kBAC3BQ,aAAa,OAEb,kBAACkC,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,QACA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkC,EACNjC,QA3DqB,WAC3BkC,GAAiB,IA2DXjC,OAxDkB,WACxBiC,GAAiB,IAwDXtL,MAAOmL,EACPnF,UAAU,GAETmE,EAAQhM,KAAI,SAACmM,EAAQ3K,GAAT,OACX,kBAAC2J,GAAA,EAAD,CACEK,IAAKW,EAAOa,UACZnL,MAAOsK,EAAOa,UACd7K,QAAS,kBA5GO9C,EA4GkB8M,EAAOa,eA3GnDqH,EAAahV,GADY,IAACA,IA8Gf8M,EAAO9K,YAKhB,kBAAC+I,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,iBAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMkH,EACNjH,QA5E0B,WAChCkH,GAAsB,IA4EhBjH,OAzEyB,WAC/BiH,GAAsB,IAyEhBtQ,MAAOiQ,EACPjK,UAAU,GAETlL,EAAaqD,KAAI,SAACoS,EAAa5Q,GAAd,OAChB4Q,EAAYpF,YAAcA,EACxB,kBAAC7B,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOuQ,EAAYN,eACnB3P,QAAS,kBAlIU9C,EAmIO+S,EAAYN,oBAlIlDwB,EAAmBjU,GADW,IAACA,IA+HrB,UAOM+S,EAAYhS,OAPlB,YAQ2B,SAAvBgS,EAAYjS,OAAoB,OAAS,IAR7C,OAS4B,eAAvBiS,EAAYjS,OAA0B,YAAc,IATzD,OAU2B,SAAvBiS,EAAYjS,OAAoB,QAAU,KAI9C,yBAAKqL,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAK1D,kBAACgI,GAAA,EAAD,CAAa1H,UAAWS,EAAQvB,QAC9B,kBAAC4I,GAAA,EAAD,CAAYnL,GAAG,qCAAf,cAGA,kBAACyL,GAAA,EAAD,CACEnJ,MAAO,CAAEO,MAAO,SAChB6I,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMoK,EACNnK,QAvG2B,WACjCoK,GAAuB,IAuGjBnK,OApGwB,WAC9BmK,GAAuB,IAoGjBxT,MAAOmT,EACPnN,UAAU,GAETqN,EAAalV,KAAI,SAACgT,EAAQxR,GAAT,OAChBwR,EAAO+B,qCAAuCjD,EAC5C,kBAAC3G,GAAA,EAAD,CACEK,IAAqB,KAAhB1R,KAAKwY,SACVzQ,MAAOmT,EACP7S,QAAS,kBAjKW9C,EAkKO2T,EAAOc,eAjK9CJ,EAAarU,GADkB,IAACA,IA8JtB,uBAOmB2T,EAAOc,UAP1B,6BAOwDd,EAAO+B,qCAG/D,yBAAKvJ,IAAqB,KAAhB1R,KAAKwY,SAAiB3Q,MAAO,CAAES,QAAS,eAM1D,kBAACgI,GAAA,EAAD,CAAatC,WAAS,EAACpF,UAAWS,EAAQvB,QACxC,kBAAC+C,EAAA,EAAD,CACEL,QAAQ,YACRvI,MAAM,UACN+I,KAAK,SACL3C,QAxMuB,2CAyMvBR,MAAO,CAAEO,MAAO,SAChBQ,UAAWS,EAAQtH,QANrB,YAWDqE,G,+1CC/OA,IAAM5G,GAAYC,IAAOC,IAAV,MAyCT+b,GAAUhc,IAAOic,QAAV,MAMPC,GAAiBlc,IAAOC,IAAV,MAOdkc,GAAiBC,YAAH,M,oBCxCrB7S,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXzN,OAAQ,CACNuG,QAAS,QACT2D,UAAWF,EAAMG,QAAQ,IAE3B4P,YAAa,CACXhU,OAAQiE,EAAMG,QAAQ,GACtBvC,SAAU,UAOD,SAASoS,KACtB,IAAM1S,EAAUL,KADc,EAEN/F,IAAMT,UAAS,GAFT,mBAEvB0O,EAFuB,KAEjB8K,EAFiB,OAGJxZ,mBAAkB,IAHd,mBAGvBgH,EAHuB,KAGhBC,EAHgB,OAIkBjH,mBAE9C,IAN4B,mBAIvByZ,EAJuB,KAILC,EAJK,OAOA1Z,mBAAiB,GAPjB,mBAOvBY,EAPuB,KAOdkO,EAPc,KAS9B9M,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,UADzB,gBACUC,EADV,EACUA,KACR8E,EAAS9E,GAFX,4CADc,uBAAC,WAAD,wBAKdoB,KACC,CAAC3C,IAEJoB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,kDACsBtB,IAF/C,gBACUuB,EADV,EACUA,KAGRuX,EAAoBvX,EAAK,IAJ3B,4CADc,uBAAC,WAAD,wBAOdE,KACC,CAACzB,IAcJ,OACE,oCACE,kBAACwY,GAAD,MACA,kBAAC,GAAD,KACE,kBAACtL,GAAA,EAAD,CAAa/K,GAAG,cAAcqD,UAAWS,EAAQyS,aAC/C,kBAACpL,GAAA,EAAD,CAAYnL,GAAG,qCAAf,WAGA,kBAACyL,GAAA,EAAD,CACEC,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMA,EACNC,QApBU,WAClB6K,GAAQ,IAoBA5K,OAjBS,WACjB4K,GAAQ,IAiBAjU,MAAO3E,EACP8K,SA3BW,SAACmC,GACpBiB,EAAWjB,EAAMlC,OAAOpG,SA4BfyB,EAAMtD,KAAI,SAACnD,GAAD,OACT,kBAACsO,GAAA,EAAD,CAAUK,IAAK3O,EAAKK,QAAS2E,MAAOhF,EAAKK,SACtCL,EAAKwE,YAMd,kBAACoU,GAAD,KACE,kBAAC,KAAD,CAASpW,GAAG,SACV,yBAAKA,GAAG,OAAOsC,MAAO,CAAEO,MAAO,SAC7B,2BAAO7C,GAAI,KACT,kBAACkW,GAAD,yDACA,4BACE,oCACA,qCAEDQ,EAAiB/V,KAAI,SAACoS,GAAD,OACpB,4BACE,4BAAKA,EAAYlO,MACjB,4BAAKkO,EAAYhS,gBAO7B,kBAACuE,EAAA,EAAD,CACCtF,GAAG,eACFyI,WAAW,EACXxD,QAAQ,YACRvI,MAAM,YACNoG,QAAS,kBAAMiF,OAAO6O,SACtBpU,MAAM,UANR,e,k5CChHD,IAAMvI,GAAYC,IAAOC,IAAV,MA6CT+b,GAAUhc,IAAOic,QAAV,MAMPC,GAAiBlc,IAAOC,IAAV,MAObkc,GAAiBC,YAAH,MC5CtB7S,GAAYC,aAAW,SAAC8C,GAAD,OAC3ByD,aAAa,CACXzN,OAAQ,CACNuG,QAAS,QACT2D,UAAWF,EAAMG,QAAQ,IAE3B4P,YAAa,CACXhU,OAAQiE,EAAMG,QAAQ,GACtBvC,SAAU,UAKVyS,GAAM,CAAC,KAEE,SAASC,KACtB,IAAMhT,EAAUL,KADgB,EAER/F,IAAMT,UAAS,GAFP,mBAEzB0O,EAFyB,KAEnB8K,EAFmB,OAGFxZ,mBAAqB,IAHnB,mBAGzB0P,EAHyB,KAGhBC,EAHgB,OAIgB3P,mBAE9C,IAN8B,mBAIzByZ,EAJyB,KAIPC,EAJO,OAOE1Z,mBAAiB,GAPnB,mBAOzB0Q,EAPyB,KAOdC,EAPc,KAShC3O,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,YADzB,gBACUC,EADV,EACUA,KACRwN,EAAWxN,GAFb,4CADc,uBAAC,WAAD,wBAKd8V,KACC,CAACvH,IAEJ1O,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,sDAC0BwO,IAFnD,gBACUvO,EADV,EACUA,KAGRuX,EAAoBvX,EAAK,IAJ3B,4CADc,uBAAC,WAAD,wBAOdE,KACC,CAACqO,IAcJ,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC5C,GAAA,EAAD,CAAa/K,GAAG,gBAAgBqD,UAAWS,EAAQyS,aACjD,kBAACpL,GAAA,EAAD,CAAYnL,GAAG,qCAAf,SACA,kBAACyL,GAAA,EAAD,CACEC,QAAQ,oCACR1L,GAAG,8BACH2L,KAAMA,EACNC,QAlBU,WAClB6K,GAAQ,IAkBA5K,OAfS,WACjB4K,GAAQ,IAeAjU,MAAOmL,EACPhF,SAzBW,SAACmC,GACpB8C,EAAa9C,EAAMlC,OAAOpG,SA0BjBmK,EAAQhM,KAAI,SAACmM,GAAD,OACX,kBAAChB,GAAA,EAAD,CAAUK,IAAKW,EAAOa,UAAWnL,MAAOsK,EAAOa,WAC5Cb,EAAO9K,YAMhB,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAShC,GAAG,SACV,yBAAKA,GAAG,OAAOsC,MAAO,CAAEO,MAAO,SAC7B,2BAAO7C,GAAI6W,GAAI,IACb,kBAAC,GAAD,sDACA,4BACE,oCACA,qCAEDH,EAAiB/V,KAAI,SAACoS,GAAD,OACpB,4BACE,4BAAKA,EAAYlO,MACjB,4BAAKkO,EAAYhS,gBAO7B,kBAACuE,EAAA,EAAD,CACEtF,GAAG,eACHyI,WAAW,EACXxD,QAAQ,YACRvI,MAAM,YACNoG,QAAS,kBAAMiF,OAAO6O,SACtBpU,MAAM,UANR,eC/BR,IAAMiB,GAAYC,aAAW,SAAC8C,GAAD,MAAY,CACvC7C,KAAM,CACJd,MAAO,OACPe,SAAU,IACVwB,gBAAiBoB,EAAMO,QAAQgQ,WAAWtQ,OAE5CuQ,OAAQ,CACNC,YAAazQ,EAAMG,QAAQ,QAGhB,SAASuQ,KAAa,IAAD,EAC5BpT,EAAUL,KADkB,EAEA/F,IAAMT,UAAS,GAFf,mBAE3Bka,EAF2B,KAEhBC,EAFgB,OAGI1Z,IAAMT,UAAS,GAHnB,mBAG3Boa,EAH2B,KAGdC,EAHc,OAII5Z,IAAMT,UAAS,GAJnB,mBAI3Bsa,EAJ2B,KAIdC,EAJc,OAKQ9Z,IAAMT,UAAS,GALvB,mBAK3Bwa,EAL2B,KAKZC,EALY,OAMcha,IAAMT,UAAS,GAN7B,mBAM3ByZ,EAN2B,KAMTC,EANS,OAOkBjZ,IAAMT,UAAS,GAPjC,mBAO3B0a,EAP2B,KAOPC,EAPO,OAQJla,IAAMT,UAAS,GARX,mBAQ3B4a,EAR2B,KAQlBC,EARkB,OASIpa,IAAMT,UAAS,GATnB,mBAS3B8a,EAT2B,KASdC,EATc,OAUQta,IAAMT,UAAS,GAVvB,mBAU3Bgb,EAV2B,KAUZC,EAVY,OAWFxa,IAAMT,UAAS,GAXb,mBAW3ByS,EAX2B,KAWjBC,EAXiB,OAYNjS,IAAMT,UAAS,GAZT,mBAY3BU,EAZ2B,KAYnBC,EAZmB,OAaRF,IAAMT,UAAS,GAbP,mBAa3Bkb,EAb2B,KAapBC,EAboB,OAcR1a,IAAMT,UAAS,GAdP,oBAc3BoU,GAd2B,MAcpBC,GAdoB,MAe5B+G,GAAY,UAAG7W,KAAKC,MAAL,UAAc/H,eAAeC,QAAQ,iBAAxC,aAAG,EAAiD8L,KAEhE1B,GAAWC,cA0IjB,SAASsU,KACPvU,GAAiB,CAAE0B,KAAM,MAAOC,MAAO6S,KA2EzC,OACE,kBAAC7L,GAAA,EAAD,CACExH,UAAU,MACVsT,kBAAgB,wBAChBnV,UAAWS,EAAQH,KACnBrB,MAAO,CAACS,QAAQ,GAAD,OAAkB,UAAbsV,GAAsB,QAAQ,UAElD,kBAACI,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QAnNI,WACvBsU,GAAcD,KAmNV,kBAACuB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,aAAc,IACnCzB,EAAY,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAEhC,kBAAC0B,GAAA,EAAD,CAAUC,GAAI3B,EAAW4B,QAAQ,OAAOC,eAAa,GACnD,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA3KR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOuT,OA4KjC,kBAACP,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,qBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA5LR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOwT,OA6LjC,kBAACR,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,uBAExB,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAAC6G,UAAWS,EAAQkT,QAClC,kBAAC0B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CACEC,QAAQ,oBACR9V,QAlMV,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOyT,SAqMnC,kBAACV,GAAA,EAAD,CAAUjc,QAAM,EAAC6G,UAAWS,EAAQkT,QAClC,kBAAC0B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CACEC,QAAQ,kBACR9V,QAvMV,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO0T,UA2MrC,kBAACX,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QAzPM,WACzBwU,GAAgBD,KAyPZ,kBAACqB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,UAAW,IAChCvB,EAAc,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAElC,kBAACwB,GAAA,EAAD,CAAUC,GAAIzB,EAAa0B,QAAQ,OAAOC,eAAa,GACrD,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAvMR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO2T,OAwMjC,kBAACX,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAxNR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO4T,OAyNjC,kBAACZ,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA7NR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO6T,OA8NjC,kBAACb,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAlOR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO8T,OAmOjC,kBAACd,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAI1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QA9Se,WAClC6T,GAAqBD,KA8SjB,kBAACgC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAAmB,IACxClC,EAAmB,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAEvC,kBAACmC,GAAA,EAAD,CAAUC,GAAIpC,EAAkBqC,QAAQ,OAAOC,eAAa,GAC1D,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA/JR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO+T,OAgKjC,kBAACf,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,6BAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAnKR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOgU,OAoKjC,kBAAChB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,6BAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAvKR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOiU,OAwKjC,kBAACjB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,4BAI1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QAjUiB,WACpC0U,GAAgBD,KAiUZ,kBAACmB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAAmB,IACxCrB,EAAc,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAElC,kBAACsB,GAAA,EAAD,CAAUC,GAAIvB,EAAawB,QAAQ,OAAOC,eAAa,GACrD,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA1KR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOkU,OA2KjC,kBAAClB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,uBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA9LR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOmU,OA+LjC,kBAACnB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,wBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAlMR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOoU,OAmMjC,kBAACpB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,wBAExB,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAAC6G,UAAWS,EAAQkT,QAClC,kBAAC0B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CACEC,QAAQ,mBACR9V,QAvMV,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOqU,UA2MrC,kBAACtB,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QA9VS,WAC5BkV,GAAgBD,KA8VZ,kBAACW,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,sBAAuB,IAC5Cb,EAAc,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAElC,kBAACc,GAAA,EAAD,CAAUC,GAAIf,EAAagB,QAAQ,OAAOC,eAAa,GACrD,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAnSR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOsU,OAoSjC,kBAACtB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QArTR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOuU,OAsTjC,kBAACvB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA1TR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOwU,OA2TjC,kBAACxB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA9TR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOyU,OA+TjC,kBAACzB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAI1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QA7XK,WACxBlF,GAAWD,KA6XP,kBAAC+a,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,YAAa,IAClCjb,EAAS,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAE7B,kBAACkb,GAAA,EAAD,CAAUC,GAAInb,EAAQob,QAAQ,OAAOC,eAAa,GAChD,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA1VR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO0U,OA2VjC,kBAAC1B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA3WR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO2U,OA4WjC,kBAAC3B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,sBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAhXR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO4U,OAiXjC,kBAAC5B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,sBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QArXR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO6U,OAsXjC,kBAAC7B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,qBAI1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QA9aY,WAC/BoV,GAAkBD,KA8ad,kBAACS,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAAoB,IACzCX,EAAgB,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAEpC,kBAACY,GAAA,EAAD,CAAUC,GAAIb,EAAec,QAAQ,OAAOC,eAAa,GACvD,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAzWR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO8U,OA0WjC,kBAAC9B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA5XR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO+U,OA6XjC,kBAAC/B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAjYR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOgV,OAkYjC,kBAAChC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QArYR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOiV,OAsYjC,kBAACjC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAI1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QAnfiB,WACpC8U,GAAuBD,KAmfnB,kBAACe,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAAgB,IACrCjB,EAAqB,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAEzC,kBAACkB,GAAA,EAAD,CAAUC,GAAInB,EAAoBoB,QAAQ,OAAOC,eAAa,GAC5D,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA7UR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOkV,OA8UjC,kBAAClC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,6BAExB,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAAC6G,UAAWS,EAAQkT,QAClC,kBAAC0B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CACEC,QAAQ,0BACR9V,QAlVV,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOmV,SAoVnC,kBAACpC,GAAA,EAAD,CAAUjc,QAAM,EAAC6G,UAAWS,EAAQkT,QAClC,kBAAC0B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CACEC,QAAQ,wBACR9V,QArVV,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOoV,UAyVrC,kBAACrC,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QApgBa,WAChC4U,GAAkBD,KAogBd,kBAACiB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAAgB,IACrCnB,EAAgB,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAEpC,kBAACoB,GAAA,EAAD,CAAUC,GAAIrB,EAAesB,QAAQ,OAAOC,eAAa,GACvD,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAjWR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOqV,OAkWjC,kBAACrC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,uBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAtWR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOsV,OAuWjC,kBAACtC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,wBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA3WR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOuV,OA4WjC,kBAACvC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,wBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAhXR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOwV,OAiXjC,kBAACxC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,uBAI1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QAvhBI,WACvBsV,GAAUD,KAuhBN,kBAACO,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,aAAc,IACnCT,EAAQ,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAE5B,kBAACU,GAAA,EAAD,CAAUC,GAAIX,EAAOY,QAAQ,OAAOC,eAAa,GAC/C,kBAACP,GAAA,EAAD,CAAUjc,QAAM,EAAC6G,UAAWS,EAAQkT,OAAQlU,QA1blD,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOyV,OA0bjC,kBAACzC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,uBAExB,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAAC6G,UAAWS,EAAQkT,QAClC,kBAAC0B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CACEC,QAAQ,oBACR9V,QA9bV,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO0V,SAgcnC,kBAAC3C,GAAA,EAAD,CAAUjc,QAAM,EAAC6G,UAAWS,EAAQkT,QAClC,kBAAC0B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAAkB9V,QAhchD,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO2V,UAmcrC,kBAAC5C,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QAvjBO,WAC1B6M,GAAaD,KAujBT,kBAACgJ,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAAa,IAClClJ,EAAW,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAE/B,kBAACmJ,GAAA,EAAD,CAAUC,GAAIpJ,EAAUqJ,QAAQ,OAAOC,eAAa,GAClD,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAveR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO4V,OAwejC,kBAAC5C,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,8BAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA1fR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO6V,OA2fjC,kBAAC7C,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,iCAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA9fR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO8V,OA+fjC,kBAAC9C,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,iCAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAngBR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAO+V,OAogBjC,kBAAC/C,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,gCAI1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QAtlBI,WACvBwO,IAAUD,MAslBN,kBAACqH,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,wBAAsB,IAC3CvH,GAAQ,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAE5B,kBAACwH,GAAA,EAAD,CAAUC,GAAIzH,GAAO0H,QAAQ,OAAOC,eAAa,GAC/C,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QApgBR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOgW,OAqgBjC,kBAAChD,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAthBR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOiW,OAuhBjC,kBAACjD,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,qBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA3hBR,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOkW,OA4hBjC,kBAAClD,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,qBAExB,kBAACH,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAASwV,IAET,kBAACI,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAG1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QAtpBM,WACzBgV,GAAYD,KAspBR,kBAACa,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAAgB,IACrCf,EAAU,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAE9B,kBAACgB,GAAA,EAAD,CAAUC,GAAIjB,EAASkB,QAAQ,OAAOC,eAAa,GACjD,kBAACP,GAAA,EAAD,CAAUjc,QAAM,EAAC6G,UAAWS,EAAQkT,OAAQlU,QAxelD,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOmW,OAwejC,kBAACnD,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAAC6G,UAAWS,EAAQkT,OAAQlU,QAzelD,WACEiB,GAAiB,CAAE0B,KAAM,MAAOC,MAAOoW,OAyejC,kBAACpD,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,YAG1B,kBAACH,GAAA,EAAD,CACIjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAASwV,IAET,kBAACI,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,uBAAGpS,KAAK,IAAIhE,MAAO,CAACyZ,eAAgB,OAAOrf,MAAM,UAAW,kBAACic,GAAA,EAAD,CAAcC,QAAQ,Y,w1BChzBrF,IAAM3e,GAAYC,IAAOC,IAAV,MAKT6hB,GAAW9hB,IAAOC,IAAV,MAWRW,GAAQZ,IAAOe,GAAV,MAGLghB,GAAW/hB,IAAOgiB,GAAV,MAIRC,GAAUjiB,IAAOkiB,EAAV,M,oBCfL,SAASC,KAAc,IAAD,EACmBpf,mBAEpD,IAHiC,mBAC5Bqf,EAD4B,KACPC,EADO,OAIetf,mBAEhD,IANiC,mBAI5Buf,EAJ4B,KAITC,EAJS,KAO7Btc,EAAS,CACb,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAnBiC,EAsBHlD,qBAtBG,mBAsB5ByS,EAtB4B,KAsBlBC,EAtBkB,KAsDnC,OA9BA1Q,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,aADjC,gBACUC,EADV,EACUA,KACRuQ,EAAYvQ,EAAK,IAFnB,4CADc,uBAAC,WAAD,wBAKd4Q,KACC,IACH/Q,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,sDAEnBqC,KAAKC,MAAL,UAAc/H,eAAeC,QAAQ,iBAFlB,aAEnB,EAAiD+H,UAHvD,gBACUtC,EADV,EACUA,KAKRmd,EAAuBnd,EAAK,IAN9B,4CADc,uBAAC,WAAD,wBASdsd,KACC,IACHzd,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACyBtF,EAAIuF,IAAJ,oDAEnBqC,KAAKC,MAAL,UAAc/H,eAAeC,QAAQ,iBAFlB,aAEnB,EAAiD+H,UAHvD,gBACUtC,EADV,EACUA,KAKRqd,EAAqBrd,EAAK,IAN5B,4CADc,uBAAC,WAAD,wBASdud,KACC,IACH/c,QAAQC,IAAI6P,GAEV,kBAAC,GAAD,KACG8M,EAAkB7b,KAAI,SAACoS,GAAD,OACrB,kBAACiJ,GAAD,KACE,kBAAC,GAAD,KAAQjJ,EAAY/Q,OACpB,kBAACia,GAAD,KAAWlJ,EAAY9Q,UACvB,kBAACka,GAAD,gBACW,IADX,UAEM,IAAI5hB,KAAJ,UAAYwY,EAAYK,aAAchT,aAF5C,YAGID,EAAO,IAAI5F,KAAJ,UAAYwY,EAAYK,aAAcpG,eAHjD,YAIM,IAAIzS,KAAJ,UAAYwY,EAAYK,aAAc9S,mBAE5C,kBAAC6b,GAAD,wBACoC,eAAvBpJ,EAAYjS,OAA0B,YAAc,GACvC,SAAvBiS,EAAYjS,OAAoB,uBAAyB,IAE5D,kBAACqb,GAAD,aAAepJ,EAAYhS,QAC3B,kBAACob,GAAD,6BACA,kBAACA,GAAD,KACE,uBACE7V,KAAI,qDAAyCoJ,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAU7F,MAAnD,2DAAqGkJ,EAAYhS,OAAjH,wBAAuIgS,EAAY/Q,MAAnJ,MAEJ,kBAAC,KAAD,CAAcM,MAAO,CAAE5F,MAAO,iBAKrC4f,EAAoB3b,KAAI,SAACoS,GAAD,OACvB,kBAACiJ,GAAD,KACE,kBAAC,GAAD,KAAQjJ,EAAY/Q,OACpB,kBAACia,GAAD,KAAWlJ,EAAY9Q,UACvB,kBAACka,GAAD,gBACW,IADX,UAEM,IAAI5hB,KAAJ,UAAYwY,EAAYK,aAAchT,aAF5C,YAGID,EAAO,IAAI5F,KAAJ,UAAYwY,EAAYK,aAAcpG,eAHjD,YAIM,IAAIzS,KAAJ,UAAYwY,EAAYK,aAAc9S,mBAE5C,kBAAC6b,GAAD,wBACoC,eAAvBpJ,EAAYjS,OAA0B,YAAc,GACvC,SAAvBiS,EAAYjS,OAAoB,uBAAyB,IAE5D,kBAACqb,GAAD,aAAepJ,EAAYhS,QAC3B,kBAACob,GAAD,0BACA,kBAACA,GAAD,KACE,uBACE7V,KAAI,qDAAyCoJ,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAU7F,MAAnD,2DAAqGkJ,EAAYhS,OAAjH,qBAAoIgS,EAAY/Q,MAAhJ,MAEJ,kBAAC,KAAD,CAAcM,MAAO,CAAE5F,MAAO,iBAKtC,kBAAC,GAAD,OClCN,IAAM+G,GAAYC,aAAW,SAAC8C,GAAD,MAAY,CACvC7C,KAAM,CACJd,MAAO,OACPe,SAAU,IACVwB,gBAAiBoB,EAAMO,QAAQgQ,WAAWtQ,OAE5CuQ,OAAQ,CACNC,YAAazQ,EAAMG,QAAQ,QAGhB,SAASiW,KAAa,IAAD,EAC5B9Y,EAAUL,KADkB,EAEA/F,IAAMT,UAAS,GAFf,gCAGIS,IAAMT,UAAS,IAHnB,gCAIIS,IAAMT,UAAS,IAJnB,mBAI3Bsa,EAJ2B,KAIdC,EAJc,OAKQ9Z,IAAMT,UAAS,GALvB,mBAK3Bwa,EAL2B,KAKZC,EALY,OAMcha,IAAMT,UAAS,GAN7B,mBAM3ByZ,EAN2B,KAMTC,EANS,OAOkBjZ,IAAMT,UAAS,GAPjC,mBAO3B0a,EAP2B,KAOPC,EAPO,OAQJla,IAAMT,UAAS,GARX,gCASIS,IAAMT,UAAS,IATnB,gCAUQS,IAAMT,UAAS,IAVvB,gCAWFS,IAAMT,UAAS,IAXb,gCAYNS,IAAMT,UAAS,IAZT,gCAaRS,IAAMT,UAAS,IAbP,gCAcRS,IAAMT,UAAS,IAdP,mBAc3BoU,EAd2B,KAcpBC,EAdoB,KAe5B+G,EAAa,UAAG7W,KAAKC,MAAL,UAAc/H,eAAeC,QAAQ,iBAAxC,aAAG,EAAiD8L,KAEjE1B,EAAWC,cA0NjB,OACE,kBAAC0I,GAAA,EAAD,CACExH,UAAU,MACVsT,kBAAgB,wBAChBnV,UAAWS,EAAQH,KACnBrB,MAAO,CAAES,QAAQ,GAAD,OAAkB,UAAbsV,EAAuB,QAAU,UAEtD,kBAACI,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QA/Ne,WAClC6T,GAAqBD,KA+NjB,kBAACgC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,aAAc,IACnClC,EAAmB,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAEvC,kBAACmC,GAAA,EAAD,CAAUC,GAAIpC,EAAkBqC,QAAQ,OAAOC,eAAa,GAC1D,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAhFR,WACEiB,EAAiB,CAAE0B,KAAM,MAAOC,MAAO+T,OAiFjC,kBAACf,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,iBAI1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QAlOiB,WACpC0U,GAAgBD,KAkOZ,kBAACmB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAAmB,IACxCrB,EAAc,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAElC,kBAACsB,GAAA,EAAD,CAAUC,GAAIvB,EAAawB,QAAQ,OAAOC,eAAa,GACrD,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA3ER,WACEiB,EAAiB,CAAE0B,KAAM,MAAOC,MAAOkU,OA4EjC,kBAAClB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,iBAI1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QA/PiB,WACpC8U,GAAuBD,KA+PnB,kBAACe,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,UAAW,IAChCjB,EAAqB,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAEzC,kBAACkB,GAAA,EAAD,CAAUC,GAAInB,EAAoBoB,QAAQ,OAAOC,eAAa,GAC5D,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QAzFR,WACEiB,EAAiB,CAAE0B,KAAM,MAAOC,MAAOkV,OA0FjC,kBAAClC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,iBAI1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QAlQa,WAChC4U,GAAkBD,KAkQd,kBAACiB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAAgB,IACrCnB,EAAgB,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAEpC,kBAACoB,GAAA,EAAD,CAAUC,GAAIrB,EAAesB,QAAQ,OAAOC,eAAa,GACvD,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA/FR,WACEiB,EAAiB,CAAE0B,KAAM,MAAOC,MAAOqV,OAgGjC,kBAACrC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,iBAI1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QAnFrB,WACEiB,EAAiB,CAAE0B,KAAM,MAAOC,MAAO2W,OAmFnC,kBAAC3D,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAExB,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAACsG,QA/PI,WACvBwO,GAAUD,KA+PN,kBAACqH,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAAe,IACpCvH,EAAQ,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAE5B,kBAACwH,GAAA,EAAD,CAAUC,GAAIzH,EAAO0H,QAAQ,OAAOC,eAAa,GAC/C,kBAACP,GAAA,EAAD,CACEjc,QAAM,EACN6G,UAAWS,EAAQkT,OACnBlU,QA7KR,WACEiB,EAAiB,CAAE0B,KAAM,MAAOC,MAAOgW,OA8KjC,kBAAChD,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,aAG1B,kBAACH,GAAA,EAAD,CAAUjc,QAAM,EAAC6G,UAAWS,EAAQkT,QAClC,kBAAC0B,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,uBAAGpS,KAAK,IAAIhE,MAAO,CAAEyZ,eAAgB,OAAQrf,MAAO,UAClD,kBAACic,GAAA,EAAD,CAAcC,QAAQ,YC9ajB,SAASiE,KAAW,IAAD,EAC1BxE,EAAa,UAAG7W,KAAKC,MAAL,UAAc/H,eAAeC,QAAQ,iBAAxC,aAAG,EAAiD8L,KAEvE,OAAO,oCAAgB,UAAb4S,EAAuB,kBAACnB,GAAD,MAAgB,kBAAC0F,GAAD,OC8BnD,IAEMnZ,GAAYC,aAAW,SAAC8C,GAAD,MAAY,CACvC7C,KAAM,CACJZ,QAAS,QAEX+Z,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACVja,QAAS,OACT8D,WAAY,SACZjE,eAAgB,WAChBqa,QAAS,SACNzW,EAAM0W,OAAOJ,SAElBK,OAAQ,CACNC,OAAQ5W,EAAM4W,OAAOC,OAAS,EAC9BC,WAAY9W,EAAM+W,YAAYzjB,OAAO,CAAC,QAAS,UAAW,CACxD0jB,OAAQhX,EAAM+W,YAAYC,OAAOC,MACjCC,SAAUlX,EAAM+W,YAAYG,SAASC,iBAGzCC,YAAa,CACXC,WAxBgB,IAyBhBhb,MAAM,eAAD,OAzBW,IAyBX,OACLya,WAAY9W,EAAM+W,YAAYzjB,OAAO,CAAC,QAAS,UAAW,CACxD0jB,OAAQhX,EAAM+W,YAAYC,OAAOC,MACjCC,SAAUlX,EAAM+W,YAAYG,SAASI,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBlb,QAAS,QAEXf,MAAO,CACLkc,SAAU,GAEZC,YAAa,CACX3S,SAAU,WACV4S,WAAY,SACZvb,MA3CgB,IA4ChBya,WAAY9W,EAAM+W,YAAYzjB,OAAO,QAAS,CAC5C0jB,OAAQhX,EAAM+W,YAAYC,OAAOC,MACjCC,SAAUlX,EAAM+W,YAAYG,SAASI,kBAGzCO,iBAAiB,cACfC,UAAW,SACXhB,WAAY9W,EAAM+W,YAAYzjB,OAAO,QAAS,CAC5C0jB,OAAQhX,EAAM+W,YAAYC,OAAOC,MACjCC,SAAUlX,EAAM+W,YAAYG,SAASC,gBAEvC9a,MAAO2D,EAAMG,QAAQ,IACpBH,EAAM+X,YAAYC,GAAG,MAAQ,CAC5B3b,MAAO2D,EAAMG,QAAQ,KAGzB8X,aAAcjY,EAAM0W,OAAOJ,QAC3B4B,QAAS,CACPR,SAAU,EACVxZ,OAAQ,QAEVyE,UAAW,CACTwV,WAAYnY,EAAMG,QAAQ,GAC1BiY,cAAepY,EAAMG,QAAQ,IAE/BF,MAAO,CACLwW,QAASzW,EAAMG,QAAQ,GACvB5D,QAAS,OACT8b,SAAU,OACVjY,cAAe,UAEjBkY,YAAa,CACXpa,OAAQ,SAIG,SAASqa,KACtB,IAAMjb,EAAUL,KADkB,EAEV/F,IAAMT,UAAS,GAFL,mBAE3B0O,EAF2B,KAErB8K,EAFqB,KAG5BuI,EAAiBC,aAAiD,SAACvZ,GAAD,OAAUA,EAAMI,UASxF,OACE,yBAAKzC,UAAWS,EAAQH,MACtB,kBAACsE,GAAA,EAAD,MACA,kBAACiX,GAAA,EAAD,CACE5c,MAAO,CAAC8C,gBAAiB,QAEzBoG,SAAS,WACTnI,UAAW8b,aAAKrb,EAAQqZ,OAAQxR,GAAQ7H,EAAQ8Z,cAEhD,kBAACwB,GAAA,EAAD,CAAS/b,UAAWS,EAAQgZ,SAC1B,kBAACuC,GAAA,EAAD,CACEC,KAAK,QACL5iB,MAAM,UACN6iB,aAAW,cACXzc,QArBe,WACvB2T,GAAQ,IAqBApT,UAAW8b,aACTrb,EAAQia,WACRpS,GAAQ7H,EAAQma,mBAGlB,kBAAC,KAAD,OAEF,kBAAClZ,EAAA,EAAD,CACEG,UAAU,KACVD,QAAQ,KACRvI,MAAM,UACN8iB,QAAM,EACNnc,UAAWS,EAAQ9B,OALrB,aASA,kBAACqd,GAAA,EAAD,CAAY3iB,MAAM,cAGtB,kBAAC+iB,GAAA,EAAD,CACExa,QAAQ,YACRnB,QAAS,CACP2C,MAAO0Y,aAAKrb,EAAQqa,aAAcxS,GAAQ7H,EAAQua,mBAEpD1S,KAAMA,GAEN,yBAAKtI,UAAWS,EAAQkZ,aACtB,kBAACqC,GAAA,EAAD,CAAYvc,QA9CM,WACxB2T,GAAQ,KA8CA,kBAAC,KAAD,QAGJ,kBAACiJ,GAAA,EAAD,MACA,kBAAChT,GAAA,EAAD,KACE,kBAACmQ,GAAD,OAEF,kBAAC6C,GAAA,EAAD,MACA,kBAAChT,GAAA,EAAD,OAGF,0BAAMrJ,UAAWS,EAAQ4a,SACvB,yBAAKrb,UAAWS,EAAQ2a,eACxB,kBAACO,EAAD,Q,sqKCvLD,IAAM/kB,GAAYC,IAAOC,IAAV,MAUTe,GAAShB,IAAOC,IAAV,MAUNwlB,GAAOzlB,IAAOsB,IAAV,MAKJokB,GAAa1lB,IAAOC,IAAV,MAWV0lB,GAAW3lB,IAAOkiB,EAAV,MAKR0D,GAAO5lB,IAAOC,IAAV,MAYJ4lB,GAAW7lB,IAAO8lB,GAAV,MAURC,GAAS/lB,IAAOC,IAAV,MAIO,SAACsC,GAAD,OAAWA,EAAM2F,OAY9B8d,IANchmB,IAAOsB,IAAV,MAMQtB,IAAOC,IAAV,OAShB+B,GAAchC,IAAOimB,QAAV,MAOXC,GAAelmB,IAAOsB,IAAV,MAIZ6kB,GAAenmB,IAAO0B,GAAV,MAIZ0kB,GAAqBpmB,IAAOkiB,EAAV,MAKlBmE,GAAiBrmB,IAAOC,IAAV,MAUdqmB,GAAYtmB,IAAOa,GAAV,MAITK,GAAelB,IAAOC,IAAV,MAKZsmB,GAAWvmB,IAAOC,IAAV,MAYRumB,GAAaxmB,IAAOC,IAAV,MAUVwmB,GAAYzmB,IAAOsB,IAAV,MAITolB,GAAa1mB,IAAOC,IAAV,MAUD,SAACsC,GAAD,MAA6B,WAAjBA,EAAMqE,OAAsB,QAAU,SAG3D+f,GAAsB3mB,IAAOC,IAAV,MAOnB2mB,GAAS5mB,IAAO6mB,OAAV,MASNC,GAAY9mB,IAAOC,IAAV,MAOT8mB,GAAa/mB,IAAOgnB,KAAV,MAcVC,GAAejnB,IAAOC,IAAV,MAGZinB,GAAKlnB,IAAOmnB,GAAV,MCzJTC,IAPY5d,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVrB,OAAQ,KAIO7E,IAAM6jB,YAAW,SAClC9kB,EACA+kB,GAEA,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAAS/kB,QAG9B,SAASklB,KAAQ,IAAD,QACLjkB,IAAMT,UAAS,GADV,mBACtB0O,EADsB,KAChB8K,EADgB,OAUHxZ,mBAAkB,IAVf,mBAUtBgH,EAVsB,KAUfC,EAVe,OAWDjH,mBAAmB,IAXlB,mBAWtBU,EAXsB,KAWdC,EAXc,OAYGX,qBAZH,mBAYtB2kB,EAZsB,KAYZC,EAZY,OAac5kB,mBAAiB,GAb/B,mBAatB6kB,EAbsB,KAaRC,EAbQ,KAoD7B,OArCA9iB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,WADjC,gBACUC,EADV,EACUA,KAERxB,EAAUwB,GAHZ,4CADc,uBAAC,WAAD,wBAMdqB,KACC,IAEHxB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,UADjC,gBACUC,EADV,EACUA,KAER8E,EAAS9E,GAHX,4CADc,uBAAC,WAAD,wBAMdoB,KACC,IAEHvB,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACyBtF,EAAIuF,IACzB,gDAFJ,gBACUC,EADV,EACUA,KAIR2iB,EAAkB,UAAC3iB,EAAK,UAAN,aAAC,EAAStC,QAL9B,4CADc,uBAAC,WAAD,wBAQdklB,KACC,IAEH/iB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBtF,EAAIuF,IAAI,aADjC,gBACUC,EADV,EACUA,KAERyiB,EAAYziB,EAAK,IAHnB,4CADc,uBAAC,WAAD,wBAMd6iB,KACC,IAED,kBAAC,GAAD,KACE,kBAACrC,GAAD,KACE,kBAACC,GAAD,qBAAiB+B,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAUzR,MAC3B,kBAAC0P,GAAD,YAAW+B,QAAX,IAAWA,OAAX,EAAWA,EAAU1R,eAEvB,kBAAC,GAAD,KACE,kBAACyP,GAAD,CAAMvd,IAAG,OAAEwf,QAAF,IAAEA,OAAF,EAAEA,EAAUtR,KAAM1L,IAAI,SAC/B,kBAAC,GAAD,KACE,kBAACmb,GAAD,KACE,uBAAGzZ,KAAK,WAAR,YAIN,kBAAC2Z,GAAD,CAAQ7d,IAAG,OAAEwf,QAAF,IAAEA,OAAF,EAAEA,EAAUpR,SACvB,kBAAC0P,GAAD,KACE,kBAAC,GAAD,KACE,kBAACE,GAAD,CAAche,IAAG,U7E/HR,G6E+HQ,kBACjB,kBAACie,GAAD,yBACA,kBAACC,GAAD,sEAIF,kBAAC,GAAD,KACE,kBAACF,GAAD,CAAche,IAAG,U7EtIR,G6EsIQ,kBACjB,kBAACie,GAAD,gCACA,kBAACC,GAAD,sEAIF,kBAAC,GAAD,KACE,kBAACF,GAAD,CAAche,IAAG,U7E7IR,G6E6IQ,kBACjB,kBAACie,GAAD,4BACA,kBAACC,GAAD,6DAIF,kBAAC,GAAD,KACE,kBAACF,GAAD,CAAche,IAAG,U7EpJR,G6EoJQ,kBACjB,kBAACie,GAAD,0BACA,kBAACC,GAAD,0EAKJ,kBAACC,GAAD,KACE,kBAACC,GAAD,CAAWxgB,GAAG,YAAd,aAEA,6EACA,kBAAC,GAAD,KACGiE,EAAMtD,KAAI,SAACnD,GAAD,OACT,kBAACijB,GAAD,KACE,kBAACC,GAAD,KACG/iB,EAAOgD,KAAI,SAACuB,GAAD,OACVA,EAAMJ,gBAAkBtE,EAAKK,QAC3B,kBAAC8iB,GAAD,CAAWve,IAAKF,EAAMG,aAEtB,yCAIN,kBAACme,GAAD,KAAYhjB,EAAKwE,OACjB,wBAAIM,MAAO,CAAE5F,MAAO,UAAUwlB,UAAW,WAAa1kB,EAAKyE,UAC3D,kBAAC2e,GAAD,CAAY9f,OAAQtD,EAAKsD,QACvB,2BAAoB,WAAhBtD,EAAKsD,OAAsB,QAAU,oBAMnD,kBAACyf,GAAD,CACEje,MAAO,CAAES,QAAQ,GAAD,OAAK+e,EAAe,EAAI,OAAS,UAEjD,kBAACtB,GAAD,oBACA,qDACA,kBAACK,GAAD,CAAqBve,MAAO,CAAEoE,UAAW,SACvC,kBAAC,GAAD,QAGJ,kBAACoa,GAAD,KACE,kBAACE,GAAD,KACE,kBAACC,GAAD,CAAYne,QAlII,WACtB2T,GAAQ,IAiIoCnU,MAAO,CAAE5F,MAAO,SAAtD,mBAGA,kBAACykB,GAAD,KACE,uBACE7a,KAAI,OAAEsb,QAAF,IAAEA,GAAF,UAAEA,EAAU1Q,cAAZ,aAAE,EACFiR,MAAM,KAAK,GACZzY,QAFG,IAEU,IACbA,QAHG,IAGU,IAChBpH,MAAO,CAAE5F,MAAO,YAEhB,kBAAC,KAAD,CAAU0lB,SAAU,WAEtB,uBACE9b,KAAI,OAAEsb,QAAF,IAAEA,GAAF,UAAEA,EAAU1Q,cAAZ,aAAE,EACFiR,MAAM,KAAK,GACZzY,QAFG,IAEU,IACbA,QAHG,IAGU,IAChBpH,MAAO,CAAE5F,MAAO,YAEhB,kBAAC,KAAD,CAAW0lB,SAAU,WAEvB,uBACE9b,KAAI,OAAEsb,QAAF,IAAEA,GAAF,UAAEA,EAAU1Q,cAAZ,aAAE,EACFiR,MAAM,KAAK,GACZzY,QAFG,IAEU,IACbA,QAHG,IAGU,IAChBpH,MAAO,CAAE5F,MAAO,UAEhB,kBAAC,KAAD,CAAU0lB,SAAU,aAI1B,kBAAChB,GAAD,MACA,kBAACJ,GAAD,KACE,uBAAG1e,MAAO,CAAE+f,WAAY,oBAAqB3lB,MAAO,YAApD,QACI,IAAInC,MAAOgM,cADf,mCAKJ,kBAAC+b,GAAA,EAAD,CACE3W,KAAMA,EACN4W,oBAAqBjB,GACrBkB,aAAW,EACX5W,QA1Kc,WAClB6K,GAAQ,IA0KJ+B,kBAAgB,2BAChBiK,mBAAiB,kCAEjB,kBAACC,GAAA,EAAD,CAAa1iB,GAAG,4BAA4B,mBAC5C,kBAAC2iB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmB5iB,GAAG,kCACpB,kBAAC,IAAD,CAAeyC,OAAM,OAAEmf,QAAF,IAAEA,OAAF,EAAEA,EAAUlR,WAAY/N,YAAY,QCjPtDkgB,OALf,WAEI,OADcnpB,eAAeC,QAAQ,U,UCG1BmpB,GAFCC,eCYVC,GAAgB,SAAC,GAAD,IAAcC,EAAd,EAAG/d,UAAyBge,EAA5B,qCACpB,kBAAC,KAAD,iBACMA,EADN,CAEExiB,OAAQ,SAACjE,GAAD,OACNomB,KACE,kBAACI,EAAcxmB,GAEf,kBAAC,KAAD,CAAU0mB,GAAI,CAAEC,SAAU,UAAW1d,MAAO,CAAE2d,KAAM5mB,EAAMuL,kBAkBnDsb,GAZA,kBACb,kBAAC,KAAD,CAAQR,QAASS,IACf,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,IAAIve,UAAWyc,KACjC,kBAAC,KAAD,CAAO6B,OAAK,EAACC,KAAK,UAAUve,UAAWkC,KACvC,kBAAC,KAAD,CAAOoc,OAAK,EAACC,KAAK,mBAAmBve,UAAWqE,KAChD,kBAAC,KAAD,CAAOia,OAAK,EAACC,KAAK,oBAAoBve,UAAWyE,KACjD,kBAAC,GAAD,CAAc6Z,OAAK,EAACC,KAAK,aAAave,UAAW6Z,QCrBxC2E,GARH,WACR,OACA,kBAAC,IAAD,CAAUzd,MAAOA,IACb,kBAAC,GAAD,QCJR0d,IAASjjB,OACP,kBAAC,IAAMkjB,WAAP,KACE,kBAAC,GAAD,OAEF5gB,SAAS6gB,eAAe,W","file":"static/js/main.be23c5ce.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst token:any = `Bearer ${sessionStorage.getItem(\"token\")}`\n\nexport const URL = \"\"\n\nconst api = axios.create({\n    baseURL: URL,\n    headers: {\n       \"Authorization\": token\n   }\n})\n\nexport default api","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display:flex;\n    flex-direction: row;\n    flex-wrap:wrap;\n`","/**\n *\n * @param dateInit Date\n * @param dateEnd Date\n * @returns true\n * @example updateAllResevations(new Date(), new Date(\"2020-09-20 09:00:00\")\n *\n */\nexport default function updateAllResevations(dateEnd: Date) {\n\n  let date1:any = new Date()\n  let date2:any = dateEnd\n\n\n  let difference =  date2 - date1  ; \n\n  let timeLeft = {\n    days: Math.round(difference / (1000 * 60 * 60 * 24)),\n    hours: Math.round((difference / (1000 * 60 * 60)) % 24),\n    minutes: Math.round((difference / 1000 / 60) % 60),\n    seconds: Math.round((difference / 1000) % 60),\n  };\n  return timeLeft;\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  \n`;\nexport const Title = styled.h1`\n  font-weight: 700;\n`;\nexport const Subtitle = styled.h2`\n  color: #6a6a6a;\n`;\nexport const Header = styled.header`\n  display: flex;\n  flex-direction: column;\n  padding-left: 20px;\n  width: 100%;\n  height: 60px;\n`;\nexport const ContainerRow = styled.div`\n  display: flex;\n  margin-top: 90px;\n  height: 100%;\n  align-items: center;\n  \n\n`;\n\nexport const ContainerRowInfo = styled.div`\n  display: flex;\n  margin-top: 90px;\n  height: 700px;\n  align-items: center;\n  @media only screen and (min-width: 500px) {\n    flex-wrap: wrap;\n  }\n`;\nexport const ContainerSlider = styled.div`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n\n  overflow-x: scroll;\n  display: flex;\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n`;\nexport const ImageSlider = styled.img`\n  object-fit: scale-down;\n  width: 100%;\n  height: 100%;\n  display: block;\n`;\nexport const ContainerColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 500px;\n  width: 100%;\n  align-items: center;\n`;\n\nexport const ContainerInfoRow = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  height: 41%;\n\n  @media only screen and (min-width: 500px) {\n    justify-content: space-evenly;\n    width: 80%;\n  }\n`;\n\nexport const ValorTitle = styled.h3`\n  color: \"#fff\";\n  font-weight: \"bold\";\n  text-align: center;\n  line-height: 25px;\n  margin: 0;\n`;\nexport const Valor = styled.div`\n  background-color: #28a745;\n  color: #fff;\n  margin: 0;\n  width: 240px;\n  height: 70px;\n  border-radius: 13px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DateTitle = styled.h3`\n  color: \"#fff\";\n  font-weight: \"bold\";\n  text-align: center;\n  line-height: 25px;\n  margin: 0;\n`;\nexport const DateDraw = styled.div`\n  background-color: #343a40;\n  color: #fff;\n  margin: 0;\n  width: 240px;\n  height: 70px;\n  border-radius: 13px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Description = styled.div`\n  font-family: Roboto, sans-serif;\n  font-size: 15px;\n  height: 100%;\n  max-height: 450px;\n  width: 50%;\n`;\n\nexport const Timer = styled.div`\n  display: flex;\n  width: 50%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  border-radius: 20px;\n  height: 120px;\n  font-size: 16px;\n  font-weight: bold;\n  color: #fff;\n  background-color: #343a40;\n`;\nexport const CardProcess = styled.div`\n  width: 300px;\n  height: 296px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media only screen and (min-width: 500px) {\n    height: 310px;\n    width: 260px;\n  }\n`;\nexport const CardImg = styled.img`\n  width: 240px;\n  height: 197px;\n`;\n\nexport const ContainerQuotas = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 80px;\n  @media only screen and (min-width: 500px) {\n    margin-top: 250px;\n  }\n`;\nexport const QuotasHeader = styled.div`\n  width: 100%;\n  font-family: Roboto, sans-serif;\n  padding-left: 10%;\n`;\nexport const ContainerButtonsFilter = styled.div`\n  width: 100%;\n  height: 90px;\n  display: flex;\n  font-family: Roboto, sans-serif;\n  padding-left: 160px;\n  margin-top: 40px;\n`;\n\nexport const ButtonsFilter = styled.button`\n  background-color: ${(props) => props.color};\n  height: 50px;\n  width: 150px;\n  cursor: pointer;\n  color: #fff;\n  border: 1px solid;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const ContinerQuotasShow = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 40px;\n  justify-content: center;\n  min-height: 200px;\n`;\nexport const ButtonQuota = styled.button`\n  background-color: ${(props) => props.color};\n  height: 38px;\n  width: 53px;\n  cursor: pointer;\n  color: #fff;\n  border: 1px solid;\n  font-size: 16px;\n  line-height: 1.5;\n`;\nexport const ContainerConfirmation = styled.div`\n  bottom: 0px;\n  display: ${(props) => (props.length > 0 ? \"flex\" : \"none\")};\n  position: fixed;\n  background-color: #fff;\n  height: 120px;\n  width: 100%;\n  align-items: center;\n  justify-content: space-around;\n`;\nexport const ButtonConfirmation = styled.button`\n  background-color: yellow;\n  height: 50px;\n  width: 150px;\n  cursor: pointer;\n  color: #000;\n  border: 0px solid;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport api, { URL } from \"../../../services/api\";\nimport {\n  IDraw_QuotasVO,\n  IDraw,\n  IImage,\n  IParticipants_Draw,\n} from \"../../../types\";\nimport TimerCounter from \"../../../global/Timer\";\nimport ReactMarkdown from \"react-markdown\";\nimport {\n  Container,\n  Header,\n  Title,\n  Subtitle,\n  ContainerRow,\n  ContainerSlider,\n  ContainerColumn,\n  ContainerInfoRow,\n  Valor,\n  ValorTitle,\n  DateTitle,\n  DateDraw,\n  Description,\n  Timer,\n  CardProcess,\n  CardImg,\n  ContainerQuotas,\n  QuotasHeader,\n  ContainerButtonsFilter,\n  ButtonsFilter,\n  ContinerQuotasShow,\n  ButtonQuota,\n  ContainerConfirmation,\n  ButtonConfirmation,\n  ContainerRowInfo,\n  ImageSlider\n} from \"./styles\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\n\nexport default function MoadalDraw() {\n  const [quotasDraw, setQuotasDraw] = useState<IDraw_QuotasVO[]>([]);\n  const [quotasVerifyDraw, setQuotasVerifyDraw] = useState<any>([]);\n  const [participants, setParticipants] = useState<IParticipants_Draw[]>([]);\n  const [draw, setDraw] = useState<IDraw>();\n  const [images, setImages] = React.useState<IImage[]>([]);\n  const [draw_id, setDraw_Id] = useState<number>();\n  const [day, setDay] = useState<string>();\n  const [month, setMonth] = useState<string>();\n  const [year, setYear] = useState<string>();\n  const [minutes, setMinutes] = useState<string>();\n  const [showTime, setShowTime] = useState<string>();\n  const [quotasSelected, setQuotasSelected] = useState<string[]>([]);\n  const [seconds, setSeconds] = useState(0);\n  const [free, setFree] = useState(true);\n  const [resevation, setResevation] = useState(true);\n  const [sold, setSold] = useState(true);\n\n  useEffect(() => {\n    async function getDraw_Quotas() {\n      const { data } = await api.get(\"/draw_quotas\");\n      setQuotasDraw(data);\n    }\n    getDraw_Quotas();\n  }, []);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_draws_quotas?draw_id=${sessionStorage.getItem(\n          \"draw_id\"\n        )}`\n      );\n\n      setParticipants(data[0]);\n    }\n    getParticipants();\n  }, []);\n  useEffect(() => {\n    const dateNew: any = new Date(`${draw?.date_draw}`);\n    const dateResult = TimerCounter(dateNew);\n    const interval = setInterval(() => {\n      setSeconds((seconds) => seconds + 1);\n      console.log(dateResult)\n      if (\n        Math.sign(dateResult.days) === -1 &&\n        Math.sign(dateResult.hours) === -1 &&\n        Math.sign(dateResult.minutes) === -1\n      ) {\n        setShowTime(`Encerrado`);\n      } else if (\n        Math.sign(dateResult.days) === -1 &&\n        Math.sign(dateResult.hours) === 0 &&\n        Math.sign(dateResult.minutes) === -1\n      ) {\n        setShowTime(`Encerrado`);\n      } else if (\n        Math.sign(dateResult.days) === -1 &&\n        Math.sign(dateResult.hours) === -1 &&\n        Math.sign(dateResult.minutes) === 0\n      ) {\n        setShowTime(`Encerrado`);\n      } else if (\n        Math.sign(dateResult.days) === 0 &&\n        Math.sign(dateResult.hours) === -1 &&\n        Math.sign(dateResult.minutes) === -1\n      ) {\n        setShowTime(`Encerrado`);\n      }else if (\n        Math.sign(dateResult.days) === 0 &&\n        Math.sign(dateResult.hours) === 0 &&\n        Math.sign(dateResult.minutes) === -1\n      ) {\n        setShowTime(`Encerrado`);\n      } else {\n        setShowTime(\n          `Dias: ${dateResult.days} Horas: ${dateResult.hours} Minutos: ${dateResult.minutes}`\n        );\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  });\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\n        `/draw/${sessionStorage.getItem(\"draw_id\")}`\n      );\n\n      const id: any = sessionStorage.getItem(\"draw_id\");\n      setDraw_Id(parseInt(id));\n      setDraw(data[0]);\n\n      const date = new Date(data[0].date_draw);\n      const months = [\n        `01`,\n        `02`,\n        `03`,\n        `04`,\n        `05`,\n        `06`,\n        `07`,\n        `08`,\n        `09`,\n        `10`,\n        `11`,\n        `12`,\n      ];\n      setDay(`${date.getUTCDate()}`);\n      setMonth(`${months[date.getMonth()]}`);\n      setYear(`${date.getUTCFullYear()}`);\n      setMinutes(`${date.getMinutes()}`);\n    }\n    getDraws();\n  }, []);\n\n  useEffect(() => {\n    async function getImages() {\n      const { data } = await api.get(\"/images\");\n\n      setImages(data);\n    }\n    getImages();\n  }, []);\n\n  useEffect(() => {\n    function renderQuotas() {\n      const render = quotasDraw.map((quota_draw) => {\n        let response;\n\n        if (participants.length === 0) {\n          response = {\n            status: \"free\",\n            number: quota_draw.number,\n            draw_quota_id: quota_draw.draw_quota_id,\n            draw_id,\n          };\n        } else {\n          participants.map((participant_item) => {\n            if (participant_item.draw_quota_id === quota_draw.draw_quota_id) {\n              response = { ...participant_item };\n            }\n          });\n        }\n        if (response === undefined) {\n          response = {\n            status: \"free\",\n            number: quota_draw.number,\n            draw_quota_id: quota_draw.draw_quota_id,\n            draw_id,\n          };\n        }\n        return response;\n      });\n\n      setQuotasVerifyDraw(render);\n    }\n    renderQuotas();\n  }, [quotasDraw, participants]);\n  const handleSetQuotasSelected = (number: string, status: string) => {\n    if (status === \"free\") {\n      const verify = quotasSelected.filter((quota) => quota === number);\n\n      if (verify.length === 0) {\n        setQuotasSelected([...quotasSelected, number]);\n      }\n      console.log(quotasSelected);\n    }\n  };\n\n  const handleSetQuotasExcludeSelected = (number: string) => {\n    const verify = quotasSelected.filter((quota) => quota != number);\n    setQuotasSelected(verify);\n  };\n\n  async function sendApi() {\n    if (quotasSelected.length > 0) {\n      const dataUser: any = sessionStorage.getItem(\"data\");\n\n      quotasSelected.map(async (item) => {\n        const payload = {\n          users_user_id: JSON.parse(dataUser).user_id,\n          draw_quotas_draw_quota_id: parseInt(\n            `${\n              quotasDraw.find((quota) => quota.number === item)?.draw_quota_id\n            }`\n          ),\n          draws_draw_id: draw_id,\n        };\n\n        const { data } = await api.post(\"/participant_draw\", payload);\n        console.log(data);\n      });\n    }\n  }\n\n  const handeHandleQuotasFree = () => {\n    const display = free === true ? \"block\" : \"none\";\n    const buttons: NodeListOf<HTMLButtonElement> = document.querySelectorAll(\n      \".gray\"\n    );\n    buttons.forEach((element) => {\n      element.style.display = display;\n    });\n    setFree(!free);\n  };\n\n  const handeHandleQuotasResevation = () => {\n    const display = resevation === true ? \"block\" : \"none\";\n    const buttons: NodeListOf<HTMLButtonElement> = document.querySelectorAll(\n      \".blue\"\n    );\n    buttons.forEach((element) => {\n      element.style.display = display;\n    });\n    setResevation(!resevation);\n  };\n  const handeHandleQuotasGreen = () => {\n    const display = sold === true ? \"block\" : \"none\";\n    const buttons: NodeListOf<HTMLButtonElement> = document.querySelectorAll(\n      \".green\"\n    );\n    buttons.forEach((element) => {\n      element.style.display = display;\n    });\n    setSold(!sold);\n  };\n  return (\n    <Container>\n      <Header>\n        <Title>{draw?.title}</Title>\n        <Subtitle>{draw?.subtitle}</Subtitle>\n      </Header>\n      <ContainerRow>\n        <ContainerSlider>\n          {images.map((image, index) =>\n            image.draws_draw_id == draw_id ? (\n              <ImageSlider\n                src={image.data_image}\n              />\n            ) : (\n              <></>\n            )\n          )}\n        </ContainerSlider>\n        <ContainerColumn>\n          <ContainerInfoRow>\n            <Valor>\n              <ValorTitle>Valor</ValorTitle>\n              <p style={{ margin: 0 }}>R$ {draw?.value}</p>\n            </Valor>\n            <DateDraw>\n              <DateTitle>Sorteio</DateTitle>\n              <p style={{ margin: 0 }}>\n                {day}/{month}/{year}\n              </p>\n            </DateDraw>\n          </ContainerInfoRow>\n          <Description>\n            {\" \"}\n            <ReactMarkdown source={draw?.description} escapeHtml={true} />\n          </Description>\n          <Timer>\n            <p>{showTime}</p>\n          </Timer>\n        </ContainerColumn>\n      </ContainerRow>\n      <ContainerRowInfo style={{ justifyContent: \"center\" }}>\n        <CardProcess>\n          <CardImg src={`${URL}/passo-1.png`} />\n          <Subtitle>Escolha uma Rifa</Subtitle>\n          <p style={{ width: \"60%\" }}>\n            Muito fácil participar. Comece escolhendo uma Rifa ativa.\n          </p>\n        </CardProcess>\n        <CardProcess>\n          <CardImg src={`${URL}/passo-2.png`} />\n          <Subtitle>Selecione os números</Subtitle>\n          <p style={{ width: \"60%\" }}>\n            Escolha quantos quiser! Quanto mais, mais chances de ganhar.\n          </p>\n        </CardProcess>\n        <CardProcess>\n          <CardImg src={`${URL}/passo-3.png`} />\n          <Subtitle>Faça o pagamento</Subtitle>\n          <p style={{ width: \"60%\" }}>\n            Escolha uma das formas de pagamento disponíveis.\n          </p>\n        </CardProcess>\n        <CardProcess>\n          <CardImg src={`${URL}/passo-4.png`} />\n          <Subtitle>Aguarde o sorteio</Subtitle>\n          <p style={{ width: \"60%\" }}>\n            Agora é aguardar o sorteio pela Loteria Federal e boa sorte!\n          </p>\n        </CardProcess>\n      </ContainerRowInfo>\n      <ContainerQuotas>\n        <QuotasHeader>\n          <h1>Cotas</h1>\n          <Subtitle>Clique e selecione quantas cotas você quiser!</Subtitle>\n        </QuotasHeader>\n        <ContainerButtonsFilter>\n          <div>\n            <ButtonsFilter color={\"gray\"} onClick={handeHandleQuotasFree}>\n              Livre\n            </ButtonsFilter>\n            <ButtonsFilter color={\"blue\"} onClick={handeHandleQuotasResevation}>\n              Reservados\n            </ButtonsFilter>\n            <ButtonsFilter color={\"green\"} onClick={handeHandleQuotasGreen}>\n              Pagos\n            </ButtonsFilter>\n          </div>\n        </ContainerButtonsFilter>\n        <ContinerQuotasShow>\n          {quotasVerifyDraw.map((quota) => {\n            let colorValue = \"green\";\n            if (quota?.status === \"resevation\") {\n              colorValue = \"blue\";\n            } else if (quota?.status === \"sold\") {\n              colorValue = \"green\";\n            } else if (quota?.status === \"free\") {\n              colorValue = \"gray\";\n            }\n            return (\n              <ButtonQuota\n                className={colorValue}\n                onClick={() =>\n                  handleSetQuotasSelected(quota?.number, quota?.status)\n                }\n                color={colorValue}\n              >\n                {quota?.number}\n              </ButtonQuota>\n            );\n          })}\n        </ContinerQuotasShow>\n      </ContainerQuotas>\n      <ContainerConfirmation length={quotasSelected.length}>\n        <div style={{ width: \"400px\" }}>\n          {quotasSelected.map((quota) => (\n            <ButtonQuota\n              color={\"blue\"}\n              onClick={() => handleSetQuotasExcludeSelected(quota)}\n            >\n              {quota}\n            </ButtonQuota>\n          ))}\n        </div>\n        <div>\n          <p>\n            {quotasSelected.length}x {draw?.value} = R${\" \"}\n            {quotasSelected.length * parseInt(`${draw?.value}`)}{\" \"}\n          </p>\n          <ButtonConfirmation onClick={sendApi}>Finalizar</ButtonConfirmation>\n        </div>\n      </ContainerConfirmation>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport api from \"../../../services/api\";\nimport { Container } from \"./styles\";\nimport { IDraw, IImage } from \"../../../types\";\nimport { useDispatch } from \"react-redux\";\nimport { Action } from \"../../../store/screen\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  CarouselProvider,\n  Slider,\n  Slide,\n} from \"pure-react-carousel\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\nimport ReactMarkdown from \"react-markdown\";\nimport ModalDraw from '../ModalDraw'\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: 0,\n  },\n});\n\nexport default function Create() {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const [draws, setDraws] = useState<IDraw[]>([]);\n  const [images, setImages] = useState<IImage[]>([]);\n\n  useEffect(() => {\n    async function getImages() {\n      const { data } = await api.get(\"/images\");\n\n      setImages(data);\n    }\n    getImages();\n  }, []);\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n  function handleModalDraw(id:number|undefined) {\n    sessionStorage.setItem(\"draw_id\",`${id}`)\n\n    dispatch<Action>({ type: \"set\", state: ModalDraw});\n  }\n\n  return (\n    <Container>\n      {draws.length > 0\n        ? draws.map((draw) => (\n            <Card\n              className={classes.root}\n              style={{ width: \"30%\", minWidth: \"350px\",margin: \"10px 10px 10px 10px\" }}\n            >\n              <CardActionArea>\n                <CarouselProvider\n                  naturalSlideWidth={130}\n                  naturalSlideHeight={60}\n                  totalSlides={8}\n                  dragEnabled={true}\n                  \n                >\n                  <Slider>\n                    {images.map((image, index) =>\n                      image.draws_draw_id === draw.draw_id ? (\n                        <Slide index={index} style={{ height: \"400px\" }}>\n                          <img\n                            style={{objectFit:\"scale-down\"}}\n                            alt={image.name}\n                            height=\"100%\"\n                            width=\"100%\"\n                            src={image.data_image}\n                            title={image.name}\n                          />\n                        </Slide>\n                      ) : (\n                        <></>\n                      )\n                    )}\n                  </Slider>\n                </CarouselProvider>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h6\">\n                    {draw.title}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {draw.subtitle}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <ReactMarkdown\n                      source={draw.description}\n                      escapeHtml={true}\n                    />\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    R$ {draw.value}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                    style={{\n                      width: \"20px\",\n                      height: \"20px\",\n                      borderRadius: \"5.1em\",\n                      backgroundColor: `${\n                        draw.status === \"active\" ? \"green\" : \"red\"\n                      }`,\n                    }}\n                  />\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button size=\"medium\" color=\"primary\" style={{display:`${draw.status === \"active\"?\"block\":\"none\" }`}} onClick={()=> handleModalDraw(draw.draw_id)}>\n                  Participar\n                </Button>\n              </CardActions>\n            </Card>\n          ))\n        : \"\"}\n    </Container>\n  );\n}\n","import { combineReducers, createStore } from 'redux'\n\n\nimport screenReducer from './screen/index'\n\nconst rootReducer = combineReducers({\n    screen: screenReducer\n})\n\nconst store = createStore(rootReducer)\n\nexport default store","\nimport ParticipantsDrawsCreate from '../../components/ParticipantsDraws/Create'\n\n\nexport type Action = {\n  type: \"set\";\n  state: React.FC;\n};\n\nexport default function reducerScreen(state: React.FC = ParticipantsDrawsCreate , action: Action) {\n  switch (action.type) {\n    case \"set\":\n      state = action.state;\n      break;\n    default:\n      return state;\n  }\n\n  return state;\n}\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport api from \"../../services/api\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://pilotandopremios.com.br\">\n        https://pilotandopremios.com.br\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [responseLogin, setResponseLogin] = useState<JSX.Element>();\n\n  async function handleLogin() {\n    const payload = JSON.stringify({\n      username: email,\n      password,\n    });\n\n    if (email.length > 1 && password.length > 1) {\n      const { data } = await api.post(\"/login\", payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (typeof data == \"string\") {\n        setResponseLogin(<Alert severity=\"error\">{data}</Alert>);\n      } else if (typeof data == \"object\") {\n        sessionStorage.setItem(\"token\", data.token);\n        sessionStorage.setItem(\"data\", JSON.stringify(data[\"data\"][0]));\n        setResponseLogin(<Alert severity=\"success\">Acessando portal...</Alert>);\n        window.location.href =`/Dashboard`\n      }\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={(e) => e.preventDefault()}\n          noValidate={false}\n        >\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            onChange={(element) => setEmail(element.target.value)}\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            onChange={(element) => setPassword(element.target.value)}\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          {responseLogin}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"inherit\"\n            onClick={handleLogin}\n            className={classes.submit}\n          >\n            Acessar\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"/ForgoutPassword\" variant=\"body2\">\n                Esqueci minha senha\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/UserRegistration\" variant=\"body2\">\n                Não possuo uma conta\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Email from \"@material-ui/icons/Email\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport api from \"../../services/api\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://pilotandopremios.com.br\">\n        https://pilotandopremios.com.br\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function ForgoutPassword() {\n  const classes = useStyles();\n  const [cpf, setCpf] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [responseLogin, setResponseLogin] = useState<JSX.Element>();\n\n  // const [responseLogin, setResponseLogin] = useState<JSX.Element>();\n\n  async function handleLogin() {\n    const payload = JSON.stringify({\n      cpf,\n      email,\n    });\n\n    if (cpf.length === 11) {\n      const { data } = await api.post(\"/forgout_password\", payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (data === \"Email enviado com sucesso, verifique seu email\") {\n        setResponseLogin(<Alert severity=\"success\">{data}</Alert>);\n      } else if (data === \"O cpf informado é inválido\") {\n        setResponseLogin(<Alert severity=\"error\">{data}</Alert>);\n      } else if (data === \"O cpf ou email informado, não pertence a nenhum usuário\") {\n        setResponseLogin(<Alert severity=\"info\">{data}</Alert>);\n      }\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <Email />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Recuperação de senha\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={(e) => e.preventDefault()}\n          noValidate={false}\n        >\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"cpf\"\n            label=\"cpf\"\n            onChange={(element) =>\n              setCpf(element.target.value.replace(/[^\\d]+/g, \"\"))\n            }\n            name=\"cpf\"\n            autoComplete=\"cpf\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"email\"\n            onChange={(element) => setEmail(element.target.value)}\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          {responseLogin}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"inherit\"\n            onClick={handleLogin}\n            className={classes.submit}\n          >\n            Enviar\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport AccountBox from \"@material-ui/icons/AccountBox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport api from \"../../services/api\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://pilotandopremios.com.br\">\n        https://pilotandopremios.com.br\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function UserRegistration() {\n  const classes = useStyles();\n  const [cpf, setCpf] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [responseLogin, setResponseLogin] = useState<JSX.Element>();\n\n  async function handleLogin() {\n    const payload = {\n      cpf,\n      name,\n      email,\n      phone,\n      password,\n      address,\n    };\n    if (\n      cpf.length === 11 &&\n      name.length > 1 &&\n      email.length > 5 &&\n      phone.length >= 9 &&\n      password.length >= 5 &&\n      address.length > 10\n    ) {\n      const { data } = await api.post(\"/user\", payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (data === \"Usuario criado com sucesso\") {\n        setResponseLogin(<Alert severity=\"success\">{data}</Alert>);\n      } else if (data === \"cpf é inválido\") {\n        setResponseLogin(<Alert severity=\"error\">{data}</Alert>);\n      } else if (data === \"Já existe um usuário com este cpf ou email\") {\n        setResponseLogin(<Alert severity=\"info\">{data}</Alert>);\n      }\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <AccountBox />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Cadastro de Usuario\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={(e) => e.preventDefault()}\n          noValidate={false}\n        >\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            onChange={(element) =>\n              setCpf(element.target.value.replace(/[^\\d]+/g, \"\"))\n            }\n            required\n            fullWidth\n            id=\"cpf\"\n            label=\"Cpf\"\n            name=\"cpf\"\n            autoComplete=\"cpf\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            onChange={(element) => setName(element.target.value)}\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Nome\"\n            name=\"nome\"\n            autoComplete=\"name\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            onChange={(element) => setEmail(element.target.value)}\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            onChange={(element) =>\n              setPhone(element.target.value.replace(/[^\\d]+/g, \"\"))\n            }\n            required\n            fullWidth\n            id=\"phone\"\n            label=\"Telefone\"\n            name=\"phone\"\n            autoComplete=\"phone\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            onChange={(element) => setPassword(element.target.value)}\n            required\n            fullWidth\n            id=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            autoComplete=\"password\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            onChange={(element) => setAddress(element.target.value)}\n            required\n            fullWidth\n            id=\"address\"\n            label=\"endereço\"\n            name=\"address\"\n            autoComplete=\"address\"\n            autoFocus\n          />\n          {responseLogin}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"inherit\"\n            onClick={handleLogin}\n            className={classes.submit}\n          >\n            Cadastrar\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display:flex;\n    flex-direction: row;\n    flex-wrap:wrap;\n`","import React, { useEffect, useState } from \"react\";\nimport api from \"../../../services/api\";\nimport { Container } from \"./styles\";\nimport { IDraw, IImage } from \"../../../types\";\nimport { useDispatch } from \"react-redux\";\nimport { Action } from \"../../../store/screen\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  Typography,\n} from \"@material-ui/core\";\nimport { CarouselProvider, Slider, Slide } from \"pure-react-carousel\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: 0,\n  },\n});\n\nexport default function Create() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [draws, setDraws] = useState<IDraw[]>([]);\n  const [images, setImages] = useState<IImage[]>([]);\n\n  useEffect(() => {\n    async function getImages() {\n      const { data } = await api.get(\"/images\");\n\n      setImages(data);\n    }\n    getImages();\n  }, []);\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n\n  return (\n    <Container>\n      {draws.length > 0\n        ? draws.map((draw) => (\n            <Card\n              className={classes.root}\n              style={{ width: \"30%\", minWidth: \"350px\", margin: \"0px 10px 0px 0px\" }}\n            >\n              <CardActionArea>\n                <CarouselProvider\n                  naturalSlideWidth={130}\n                  naturalSlideHeight={60}\n                  totalSlides={8}\n                  dragEnabled={true}\n                >\n                  <Slider>\n                    {images.map((image, index) =>\n                      image.draws_draw_id === draw.draw_id ? (\n                        <Slide index={index} style={{ height: \"400px\" }}>\n                          <img\n                            style={{ objectFit: \"scale-down\" }}\n                            alt={image.name}\n                            height=\"100%\"\n                            width=\"100%\"\n                            src={image.data_image}\n                            title={image.name}\n                          />\n                        </Slide>\n                      ) : (\n                        <></>\n                      )\n                    )}\n                  </Slider>\n                </CarouselProvider>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h6\">\n                    {draw.title}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {draw.subtitle}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <ReactMarkdown\n                      source={draw.description}\n                      escapeHtml={true}\n                    />\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    R$ {draw.value}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                    style={{\n                      width: \"20px\",\n                      height: \"20px\",\n                      borderRadius: \"5.1em\",\n                      backgroundColor: `${\n                        draw.status === \"active\" ? \"green\" : \"red\"\n                      }`,\n                    }}\n                  />\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          ))\n        : \"\"}\n    </Container>\n  );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from '../../../services/api'\nimport { Button, FormControl, Input, InputAdornment, InputLabel, MenuItem, Select } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '25ch',\n    },\n    button: {\n        margin: theme.spacing(1),\n      },\n  }),\n)\nexport default function Create() {\n  const classes = useStyles();\n\n  const [title,setTitle] = React.useState(\"\")\n  const [status, setStatus] = React.useState<string>('');\n  const [description, setDescription] = React.useState<string>('');\n  const [subtitle, setSubtitle] = React.useState<string>('');\n\n  const [value,setValue] = React.useState<number>(0.0)\n  const [date,setDate] = React.useState<string>(\"2017-05-24T10:30\")\n  const [statusOpen, setStatusOpen] = React.useState(false);\n  const [response,setResponse] = React.useState<JSX.Element>()\n\n  const handleChangeStatus = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setStatus(event.target.value as string);\n  };\n  const handleChangeSubtitle = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSubtitle(event.target.value as string);\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setTitle(event.target.value as string);\n  };\n\n  const handleChangeDate = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDate(event.target.value as string);\n  };\n\n  const handleChangeValue = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setValue(event.target.value as number);\n  };\n\n  const handleChangeDescription = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDescription(event.target.value as string);\n  };\n\n  async function sendApi() {\n    const payload = {\n        title,\n        subtitle,\n        status,\n        value,\n        description,\n        date_draw: date\n    }\n\n    const {data } = await api.post(\"/draw\",payload)\n    if (data === \"Falhou em crair o sorteio\"){\n        setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }else if (data === \"Sucesso em criar o sorteio\") {\n        setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n}\n  \n  const handleCloseStatus = () => {\n    setStatusOpen(false);\n  };\n\n  const handleOpenStatus = () => {\n    setStatusOpen(true);\n  };\n\n  return (\n    <form className={classes.root} noValidate={false} onSubmit={event => event.preventDefault()} autoComplete=\"off\">\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true}  id=\"outlined-basic\" label=\"Titulo\" value={title} onChange={handleChangeTitle} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true} onChange={handleChangeSubtitle}  value={subtitle} id=\"outlined-basic\" label=\"Subtitulo\" />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n       <TextField id=\"datetime-local\" required={true} label=\"Data do Sorteio\" type=\"datetime-local\" value={date} onChange={handleChangeDate}  className={classes.textField} InputLabelProps={{ shrink: true}} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField id=\"standard-multiline-static\" required={true} onChange={handleChangeDescription} label=\"Descrição\" multiline  value={description} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n      <InputLabel htmlFor=\"standard-adornment-amount\">Valor</InputLabel>\n        <Input id=\"standard-adornment-amount\" value={value} required={true} onChange={handleChangeValue} startAdornment={<InputAdornment position=\"start\">$</InputAdornment>} />\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Status</InputLabel>\n        <Select\n          style={{width: \"200px\"}}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={statusOpen}\n          onClose={handleCloseStatus}\n          onOpen={handleOpenStatus}\n          value={status}\n          onChange={handleChangeStatus}\n          required={true}\n        >\n          <MenuItem value=\"active\">Ativo</MenuItem>\n          <MenuItem value=\"closed\">Fechado</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={sendApi} style={{width:\"200px\"}}  className={classes.button} >\n            Cadastar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React,{useEffect} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from '../../../services/api'\nimport {IDraw } from '../../../types'\nimport { Button, FormControl, Input, InputAdornment, InputLabel, MenuItem, Select } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '25ch',\n    },\n    button: {\n        margin: theme.spacing(1),\n      },\n  }),\n)\nexport default function Create() {\n  const classes = useStyles();\n\n  const [draw_id,setDraw_id] = React.useState<number>()\n  const [draws,setDraws] = React.useState<IDraw[]>([])\n  const [title,setTitle] = React.useState<string|undefined>(\"\")\n  const [status, setStatus] = React.useState<string|undefined>('');\n  const [description, setDescription] = React.useState<string|undefined>('');\n  const [subtitle, setSubtitle] = React.useState<string|undefined>('');\n  const [value,setValue] = React.useState<number|undefined>(0.0)\n  const [date,setDate] = React.useState<string|undefined>(\"\")\n  const [statusOpen, setStatusOpen] = React.useState(false);\n  const [draw_idOpen, setDraw_idOpen] = React.useState(false);\n\n  const [response,setResponse] = React.useState<JSX.Element>()\n\n  const handleChangeStatus = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setStatus(event.target.value as string);\n  };\n\n  const handleChangeDraw = (id:number|undefined,index:number) => {\n    setDraw_id(id);\n    setTitle(draws[index].title)\n    setDescription(draws[index].description)\n    setSubtitle(draws[index].subtitle)\n    setValue(draws[index].value)\n    setDate(draws[index].date_draw)\n    setStatus(draws[index].status)\n  };\n\n  const handleChangeSubtitle = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSubtitle(event.target.value as string);\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setTitle(event.target.value as string);\n  };\n\n  const handleChangeDate = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDate(event.target.value as string);\n  };\n\n  const handleChangeValue = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setValue(event.target.value as number);\n  };\n\n  const handleChangeDescription = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDescription(event.target.value as string);\n  };\n\n  useEffect(()=>{\n    async function getDraws() {\n        const {data} = await api.get(\"/draws\")\n\n        setDraws(data)\n    }\n    getDraws()\n  },[])\n\n  async function sendApi() {\n    const payload = {\n        draw_id,\n        title,\n        subtitle,\n        status,\n        value,\n        description,\n        date_draw: date\n    }\n\n    const {data } = await api.put(\"/draw\",payload)\n    if (data === \"Falhou em atualizar o sorteio\"){\n        setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }else if (data === \"Sucesso em atualizar o sorteio\") {\n        setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n}\n  \n  const handleCloseStatus = () => {\n    setStatusOpen(false);\n  };\n\n  const handleOpenStatus = () => {\n    setStatusOpen(true);\n  };\n\n  const handleCloseDraw_id = () => {\n    setDraw_idOpen(false);\n  };\n\n  const handleOpenDraw_id= () => {\n    setDraw_idOpen(true);\n  };\n\n  return (\n    <form className={classes.root} noValidate={false} onSubmit={event => event.preventDefault()} autoComplete=\"off\">\n        <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Sorteio</InputLabel>\n        <Select\n          style={{width: \"200px\"}}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={draw_idOpen}\n          onClose={handleCloseDraw_id}\n          onOpen={handleOpenDraw_id}\n          value={draw_id}\n          required={true}\n        >\n        {\n            draws.map((draw,index) => (\n                <MenuItem key={draw.draw_id} value={draw.draw_id} onClick={()=> handleChangeDraw(draw.draw_id,index) } >{draw.title}</MenuItem>\n\n            ))\n        }\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true}  id=\"outlined-basic\" label=\"Titulo\" value={title} onChange={handleChangeTitle} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true} onChange={handleChangeSubtitle}  value={subtitle} id=\"outlined-basic\" label=\"Subtitulo\" />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n       <TextField id=\"datetime-local\" required={true} label=\"Data do Sorteio\" type=\"datetime-local\" value={date} onChange={handleChangeDate}  className={classes.textField} InputLabelProps={{ shrink: true}} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField id=\"standard-multiline-static\" required={true} onChange={handleChangeDescription} label=\"Descrição\" multiline  value={description} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n      <InputLabel htmlFor=\"standard-adornment-amount\">Valor</InputLabel>\n        <Input id=\"standard-adornment-amount\" value={value} required={true} onChange={handleChangeValue} startAdornment={<InputAdornment position=\"start\">$</InputAdornment>} />\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Status</InputLabel>\n        <Select\n          style={{width: \"200px\"}}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={statusOpen}\n          onClose={handleCloseStatus}\n          onOpen={handleOpenStatus}\n          value={status}\n          onChange={handleChangeStatus}\n          required={true}\n        >\n          <MenuItem value=\"active\">Ativo</MenuItem>\n          <MenuItem value=\"closed\">Fechado</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={sendApi} style={{width:\"200px\"}}  className={classes.button} >\n            Atualizar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api, { URL } from \"../../../services/api\";\nimport { IDraw } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n\n  const [draw_id, setDraw_id] = React.useState<number>();\n  const [draws, setDraws] = React.useState<IDraw[]>([]);\n  const [draw_idOpen, setDraw_idOpen] = React.useState(false);\n\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handleChangeDraw = (id: number | undefined, index: number) => {\n    setDraw_id(id);\n  };\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n\n  async function sendApi() {\n\n    const response = await fetch(URL + \"/draw\", {\n      body: JSON.stringify({\n        draw_id:draw_id\n      }),\n      headers: {\n       \"content-type\": \"application/json\",\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n      },\n      method: \"DELETE\",\n    });\n    const data = await response.json();\n\n     if (data === \"Falhou em deletar o sorteio\"){\n         setResponse(<Alert severity=\"error\">{data}</Alert>);\n     }else if (data === \"Sucesso em deletar o sorteio\") {\n         setResponse(<Alert severity=\"success\">{data}</Alert>);\n     }\n  }\n\n  const handleCloseDraw_id = () => {\n    setDraw_idOpen(false);\n  };\n\n  const handleOpenDraw_id = () => {\n    setDraw_idOpen(true);\n  };\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Sorteio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={draw_idOpen}\n          onClose={handleCloseDraw_id}\n          onOpen={handleOpenDraw_id}\n          value={draw_id}\n          required={true}\n        >\n          {draws.map((draw, index) => (\n            <MenuItem\n              key={draw.draw_id}\n              value={draw.draw_id}\n              onClick={() => handleChangeDraw(draw.draw_id, index)}\n            >\n              {draw.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Deletar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display:flex;\n    flex-direction: row;\n    flex-wrap:wrap;\n`","import React, { useEffect } from \"react\";\nimport api from \"../../../services/api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactMarkdown from \"react-markdown\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { IRaffles } from \"../../../types\";\nimport { Container } from \"./styles\";\nimport Timer from \"../../../global/Timer\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: 0,\n  },\n});\n\nexport default function List() {\n  const classes = useStyles();\n\n  const [raffles, setRaffles] = React.useState<IRaffles[]>([]);\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/raffles\");\n\n      setRaffles(data);\n    }\n    getDraws();\n  }, []);\n\n  function handleTimerDate(raffle: IRaffles) {\n    const date = new Date(`${raffle.date_raffle}`);\n    return Timer(\n      new Date(\n        date.getUTCFullYear(),\n        date.getUTCMonth(),\n        date.getDate(),\n        date.getUTCHours(),\n        date.getUTCMinutes(),\n        date.getUTCSeconds()\n      )\n    );\n  }\n\n  return (\n    <Container>\n      {raffles.length > 0\n        ? raffles.map((raffle) => (\n            <Card\n              className={classes.root}\n              style={{\n                width: \"30%\",\n                minWidth: \"350px\",\n                margin: \"0px 10px 0px 0px\",\n              }}\n            >\n              <CardActionArea>\n                <CardMedia\n                  component=\"img\"\n                  alt={raffle.title}\n                  height=\"180\"\n                  image={raffle.image}\n                  title={raffle.title}\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h6\">\n                    {raffle.title}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {raffle.subtitle}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <ReactMarkdown\n                      source={raffle.description}\n                      escapeHtml={true}\n                    />\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    R$ {raffle.value}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    Data da rifa: dias: {handleTimerDate(raffle).days} horas:{\" \"}\n                    {handleTimerDate(raffle).hours} minutos:{\" \"}\n                    {handleTimerDate(raffle).minutes}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                    style={{\n                      width: \"20px\",\n                      height: \"20px\",\n                      borderRadius: \"5.1em\",\n                      backgroundColor: `${\n                        raffle.status == \"active\" ? \"green\" : \"red\"\n                      }`,\n                    }}\n                  />\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          ))\n        : \"\"}\n    </Container>\n  );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport FileBase64 from 'react-file-base64';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from '../../../services/api'\nimport { Button, FormControl, Input, InputAdornment, InputLabel, MenuItem, Select } from '@material-ui/core';\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '25ch',\n    },\n    button: {\n        margin: theme.spacing(1),\n      },\n  }),\n)\nexport default function Create() {\n  const classes = useStyles();\n\n  const [title,setTitle] = React.useState(\"\")\n  const [status, setStatus] = React.useState<string>('');\n  const [description, setDescription] = React.useState<string>('');\n  const [subtitle, setSubtitle] = React.useState<string>('');\n  const [image,setImage] = React.useState<string>(\"\")\n  const [value,setValue] = React.useState<number>(0.0)\n  const [date,setDate] = React.useState<string>(\"2017-05-24T10:30\")\n  const [statusOpen, setStatusOpen] = React.useState(false);\n  const [response,setResponse] = React.useState<JSX.Element>()\n\n  const handleChangeStatus = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setStatus(event.target.value as string);\n  };\n  const handleChangeSubtitle = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSubtitle(event.target.value as string);\n  };\n\n  const handlChangeImage = (file:any ) => {\n    setImage(file.base64)\n    console.log(file)\n  }\n\n  const handleChangeTitle = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setTitle(event.target.value as string);\n  };\n\n  const handleChangeDate = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDate(event.target.value as string);\n  };\n\n  const handleChangeValue = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setValue(event.target.value as number);\n  };\n\n  const handleChangeDescription = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDescription(event.target.value as string);\n  };\n\n  async function sendApi() {\n    const payload = {\n        title,\n        subtitle,\n        status,\n        image,\n        value,\n        description,\n        date_raffle: date\n    }\n\n    const {data } = await api.post(\"/raffle\",payload)\n    if (data === \"Falhou em criar a rifa\"){\n        setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }else if (data === \"Sucesso em criar rifa\") {\n        setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n}\n  \n  const handleCloseStatus = () => {\n    setStatusOpen(false);\n  };\n\n  const handleOpenStatus = () => {\n    setStatusOpen(true);\n  };\n\n  return (\n    <form className={classes.root} noValidate={false} onSubmit={event => event.preventDefault()} autoComplete=\"off\">\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true}  id=\"outlined-basic\" label=\"Titulo\" value={title} onChange={handleChangeTitle} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true} onChange={handleChangeSubtitle}  value={subtitle} id=\"outlined-basic\" label=\"Subtitulo\" />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n       <TextField id=\"datetime-local\" required={true} label=\"Data do Sorteio\" type=\"datetime-local\" value={date} onChange={handleChangeDate}  className={classes.textField} InputLabelProps={{ shrink: true}} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField id=\"standard-multiline-static\" required={true} onChange={handleChangeDescription} label=\"Descrição\" multiline  value={description} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n      <InputLabel htmlFor=\"standard-adornment-amount\">Valor</InputLabel>\n        <Input id=\"standard-adornment-amount\" value={value} required={true} onChange={handleChangeValue} startAdornment={<InputAdornment position=\"start\">$</InputAdornment>} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin} >\n      <FileBase64\n        multiple={ false }\n        onDone={handlChangeImage} />\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Status</InputLabel>\n        <Select\n          style={{width: \"200px\"}}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={statusOpen}\n          onClose={handleCloseStatus}\n          onOpen={handleOpenStatus}\n          value={status}\n          onChange={handleChangeStatus}\n          required={true}\n        >\n          <MenuItem value=\"active\">Ativo</MenuItem>\n          <MenuItem value=\"closed\">Fechado</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={sendApi} style={{width:\"200px\"}}  className={classes.button} >\n            Cadastar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React,{useEffect} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport FileBase64 from 'react-file-base64';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from '../../../services/api'\nimport { Button, FormControl, Input, InputAdornment, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport {IRaffles} from '../../../types'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '25ch',\n    },\n    button: {\n        margin: theme.spacing(1),\n      },\n  }),\n)\nexport default function Create() {\n  const classes = useStyles();\n\n  const [raffle_id,setRaffle_id] = React.useState<number>()\n  const [raffles,setRaffles] = React.useState<IRaffles[]>([])\n  const [title,setTitle] = React.useState<string|undefined>(\"\")\n  const [status, setStatus] = React.useState<string|undefined>('');\n  const [description, setDescription] = React.useState<string|undefined>('');\n  const [subtitle, setSubtitle] = React.useState<string|undefined>('');\n  const [image,setImage] = React.useState<string|undefined>(\"\")\n  const [value,setValue] = React.useState<number|undefined>(0.0)\n  const [date,setDate] = React.useState<string|undefined>(\"2017-05-24T10:30\")\n  const [statusOpen, setStatusOpen] = React.useState(false);\n  const [response,setResponse] = React.useState<JSX.Element>()\n  const [raffle_idOpen, setRaffle_idOpen] = React.useState(false);\n\n\n  const handleChangeDraw = (id:number|undefined,index:number) => {\n    setRaffle_id(id);\n    setTitle(raffles[index].title)\n    setDescription(raffles[index].description)\n    setSubtitle(raffles[index].subtitle)\n    setImage(raffles[index].image)\n    setValue(raffles[index].value)\n    setDate(raffles[index].date_raffle)\n    setStatus(raffles[index].status)\n  };\n\n\n  const handleChangeStatus = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setStatus(event.target.value as string);\n  };\n  const handleChangeSubtitle = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSubtitle(event.target.value as string);\n  };\n\n\n\n  const handlChangeImage = (file:any ) => {\n    setImage(file.base64)\n    console.log(file)\n  }\n\n  const handleChangeTitle = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setTitle(event.target.value as string);\n  };\n\n  const handleChangeDate = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDate(event.target.value as string);\n  };\n\n  const handleChangeValue = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setValue(event.target.value as number);\n  };\n\n  const handleChangeDescription = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDescription(event.target.value as string);\n  };\n\n  async function sendApi() {\n    const payload = {\n        title,\n        subtitle,\n        status,\n        image,\n        value,\n        description,\n        date_raffle: date,\n        raffle_id\n    }\n\n    const {data } = await api.put(\"/raffle\",payload)\n    if (data === \"Falhou em atualizar a rifa\"){\n        setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }else if (data === \"Sucesso em atualizar a rifa\") {\n        setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n}\n  \n  const handleCloseStatus = () => {\n    setStatusOpen(false);\n  };\n\n  const handleOpenStatus = () => {\n    setStatusOpen(true);\n  };\n\n  const handleCloseRaffle_id = () => {\n    setRaffle_idOpen(false);\n  };\n\n  const handleOpenRaffle_id = () => {\n    setRaffle_idOpen(true);\n  };\n\n  useEffect(()=>{\n    async function getDraws() {\n        const {data} = await api.get(\"/raffles\")\n\n        setRaffles(data)\n    }\n    getDraws()\n  },[])\n\n  return (\n    <form className={classes.root} noValidate={false} onSubmit={event => event.preventDefault()} autoComplete=\"off\">\n        <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Rifas</InputLabel>\n        <Select\n          style={{width: \"200px\"}}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={raffle_idOpen}\n          onClose={handleCloseRaffle_id}\n          onOpen={handleOpenRaffle_id}\n          value={raffle_id}\n          required={true}\n        >\n        {\n            raffles.map((raffle,index) => (\n                <MenuItem key={raffle.raffle_id} value={raffle.raffle_id} onClick={()=> handleChangeDraw(raffle.raffle_id,index) } >{raffle.title}</MenuItem>\n\n            ))\n        }\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true}  id=\"outlined-basic\" label=\"Titulo\" value={title} onChange={handleChangeTitle} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true} onChange={handleChangeSubtitle}  value={subtitle} id=\"outlined-basic\" label=\"Subtitulo\" />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n       <TextField id=\"datetime-local\" required={true} label=\"Data do Sorteio\" type=\"datetime-local\" value={date} onChange={handleChangeDate}  className={classes.textField} InputLabelProps={{ shrink: true}} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField id=\"standard-multiline-static\" required={true} onChange={handleChangeDescription} label=\"Descrição\" multiline  value={description} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n      <InputLabel htmlFor=\"standard-adornment-amount\">Valor</InputLabel>\n        <Input id=\"standard-adornment-amount\" value={value} required={true} onChange={handleChangeValue} startAdornment={<InputAdornment position=\"start\">$</InputAdornment>} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin} >\n      <FileBase64\n        multiple={ false }\n        onDone={handlChangeImage} />\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Status</InputLabel>\n        <Select\n          style={{width: \"200px\"}}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={statusOpen}\n          onClose={handleCloseStatus}\n          onOpen={handleOpenStatus}\n          value={status}\n          onChange={handleChangeStatus}\n          required={true}\n        >\n          <MenuItem value=\"active\">Ativo</MenuItem>\n          <MenuItem value=\"closed\">Fechado</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={sendApi} style={{width:\"200px\"}}  className={classes.button} >\n            Atualizar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api,{URL} from \"../../../services/api\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { IRaffles } from \"../../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n\n  const [raffle_id, setRaffle_id] = React.useState<number>();\n  const [raffles, setRaffles] = React.useState<IRaffles[]>([]);\n\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [raffle_idOpen, setRaffle_idOpen] = React.useState(false);\n\n  const handleChangeDraw = (id: number | undefined, index: number) => {\n    setRaffle_id(id);\n  };\n\n  async function sendApi() {\n    const response = await fetch(URL + \"/raffle\", {\n      body: JSON.stringify({\n        raffle_id: raffle_id,\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n      },\n      method: \"DELETE\",\n    });\n    const data = await response.json();\n\n    if (data === \"Falhou em deletar a rifa\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em deletar a rifa\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  const handleCloseRaffle_id = () => {\n    setRaffle_idOpen(false);\n  };\n\n  const handleOpenRaffle_id = () => {\n    setRaffle_idOpen(true);\n  };\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/raffles\");\n\n      setRaffles(data);\n    }\n    getDraws();\n  }, []);\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Rifas</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={raffle_idOpen}\n          onClose={handleCloseRaffle_id}\n          onOpen={handleOpenRaffle_id}\n          value={raffle_id}\n          required={true}\n        >\n          {raffles.map((raffle, index) => (\n            <MenuItem\n              key={raffle.raffle_id}\n              value={raffle.raffle_id}\n              onClick={() => handleChangeDraw(raffle.raffle_id, index)}\n            >\n              {raffle.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Deletar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display:flex;\n    flex-direction: row;\n    flex-wrap:wrap;\n`","import React, { useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport api from \"../../../services/api\";\nimport { Container } from \"./styles\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@material-ui/core\";\nimport {IImage } from \"../../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n  const [images, setImages] = React.useState<IImage[]>([]);\n\n  useEffect(() => {\n    async function getImages() {\n      const { data } = await api.get(\"/images\");\n\n      setImages(data);\n    }\n    getImages();\n  }, []);\n\n  return (\n    <Container>\n      {images.length > 0\n        ? images.map((images) => (\n            <Card className={classes.root} style={{margin: \"0px 10px  0px 0px\"}}> \n              <CardActionArea>\n                <img\n                  style={{objectFit: \"scale-down\"}}\n                  alt={images.name}\n                  height=\"400\"\n                  src={images.data_image}\n                  title={images.name}\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h6\">\n                    {images.name}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h5\" component=\"h6\">\n                    {images.name}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          ))\n        : \"\"}\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport FileBase64 from \"react-file-base64\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { IDraw } from \"../../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(\"\");\n  const [draws, setDraws] = React.useState<IDraw[]>([]);\n  const [draws_draw_id, setDraws_Draw_Id] = React.useState<number>();\n  const [data_image, setData_Image] = React.useState<string>(\"\");\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [draw_idOpen, setDraw_idOpen] = React.useState(false);\n\n  const handleChangeDraw = (id: number | undefined, index: number) => {\n    setDraws_Draw_Id(id);\n\n  };\n\n  const handlChangeDataImage = (file: any) => {\n    setData_Image(file.base64);\n  };\n\n  const handleChangeName = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setName(event.target.value as string);\n  };\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n  async function sendApi() {\n    const payload = {\n      name,\n      draws_draw_id,\n      data_image,\n    };\n\n    const { data } = await api.post(\"/image\", payload);\n    if (data === \"Falhou em criar imagem para o sorteio\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em criar a imagem do sorteio\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  const handleCloseDraw_id = () => {\n    setDraw_idOpen(false);\n  };\n\n  const handleOpenDraw_id = () => {\n    setDraw_idOpen(true);\n  };\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Sorteio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={draw_idOpen}\n          onClose={handleCloseDraw_id}\n          onOpen={handleOpenDraw_id}\n          value={draws_draw_id}\n          required={true}\n        >\n          {draws.map((draw, index) => (\n            <MenuItem\n              key={draw.draw_id}\n              value={draw.draw_id}\n              onClick={() => handleChangeDraw(draw.draw_id, index)}\n            >\n              {draw.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          onChange={handleChangeName}\n          value={name}\n          id=\"outlined-basic\"\n          label=\"Nome\"\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <FileBase64 multiple={false} onDone={handlChangeDataImage} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Cadastar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport FileBase64 from \"react-file-base64\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { IDraw, IImage } from \"../../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState<string | undefined>(\"\");\n  const [draws, setDraws] = React.useState<IDraw[]>([]);\n  const [images, setImages] = React.useState<IImage[]>([]);\n\n  const [draws_draw_id, setDraws_Draw_Id] = React.useState<\n    number | undefined\n  >();\n  const [image_id, setImage_Id] = React.useState<number>();\n\n  const [data_image, setData_Image] = React.useState<string | undefined>(\"\");\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [draw_idOpen, setDraw_idOpen] = React.useState(false);\n  const [image_idOpen, setImage_idOpen] = React.useState(false);\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n\n  useEffect(() => {\n    async function getImages() {\n      const { data } = await api.get(\"/images\");\n\n      setImages(data);\n    }\n    getImages();\n  }, []);\n\n  const handleChangeDraw = (id: number | undefined, index: number) => {\n    setDraws_Draw_Id(id);\n  };\n  const handleChangeImage = (id: number | undefined, index: number) => {\n    setImage_Id(id);\n    setName(images[index].name);\n    setData_Image(images[index].data_image);\n  };\n\n  const handlChangeDataImage = (file: any) => {\n    setData_Image(file.base64);\n  };\n\n  const handleChangeName = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setName(event.target.value as string);\n  };\n\n  async function sendApi() {\n    const payload = {\n      name,\n      draws_draw_id,\n      data_image,\n      image_id,\n    };\n\n    const { data } = await api.put(\"/image\", payload);\n    if (data === \"Falhou em atualizar imagem para o sorteio\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em atualizar a imagem\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  const handleCloseDraw_id = () => {\n    setDraw_idOpen(false);\n  };\n\n  const handleOpenDraw_id = () => {\n    setDraw_idOpen(true);\n  };\n  const handleCloseImage_id = () => {\n    setImage_idOpen(false);\n  };\n\n  const handleOpenImage_id = () => {\n    setImage_idOpen(true);\n  };\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Sorteio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={image_idOpen}\n          onClose={handleCloseImage_id}\n          onOpen={handleOpenImage_id}\n          value={image_id}\n          required={true}\n        >\n          {draws.map((draw, index) => (\n            <MenuItem\n              key={draw.draw_id}\n              value={draw.draw_id}\n              onClick={() => handleChangeDraw(draw.draw_id, index)}\n            >\n              {draw.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Images</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={draw_idOpen}\n          onClose={handleCloseDraw_id}\n          onOpen={handleOpenDraw_id}\n          value={draws_draw_id}\n          required={true}\n        >\n          {images.map((image, index) =>\n            image.draws_draw_id === draws_draw_id ? (\n              <MenuItem\n                key={image.image_id}\n                value={image.image_id}\n                onClick={() => handleChangeImage(image.image_id, index)}\n              >\n                {image.name}\n              </MenuItem>\n            ) : (\n              <div key={image.image_id} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          onChange={handleChangeName}\n          value={name}\n          id=\"outlined-basic\"\n          label=\"Nome\"\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <FileBase64 multiple={false} onDone={handlChangeDataImage} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Atualizar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api,{URL} from \"../../../services/api\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { IDraw, IImage } from \"../../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n  const [draws, setDraws] = React.useState<IDraw[]>([]);\n  const [images, setImages] = React.useState<IImage[]>([]);\n  const [draws_draw_id, setDraws_Draw_Id] = React.useState<number | undefined>();\n  const [image_id, setImage_Id] = React.useState<number>();\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [draw_idOpen, setDraw_idOpen] = React.useState(false);\n  const [image_idOpen, setImage_idOpen] = React.useState(false);\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n\n  useEffect(() => {\n    async function getImages() {\n      const { data } = await api.get(\"/images\");\n\n      setImages(data);\n    }\n    getImages();\n  }, []);\n\n  const handleChangeDraw = (id: number | undefined, index: number) => {\n    setDraws_Draw_Id(id);\n  };\n  const handleChangeImage = (id: number | undefined, index: number) => {\n    setImage_Id(id);\n  };\n\n\n\n  async function sendApi() {\n\n    const response = await fetch(URL + \"/image\", {\n      body: JSON.stringify({\n        image_id\n      }),\n      headers: {\n       \"content-type\": \"application/json\",\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n      },\n      method: \"DELETE\",\n    });\n    const data = await response.json();\n\n     if (data === \"Falhou em deletar a imagem\"){\n         setResponse(<Alert severity=\"error\">{data}</Alert>);\n     }else if (data === \"Sucesso em deletar a imagem\") {\n         setResponse(<Alert severity=\"success\">{data}</Alert>);\n     }\n\n  }\n\n  const handleCloseDraw_id = () => {\n    setDraw_idOpen(false);\n  };\n\n  const handleOpenDraw_id = () => {\n    setDraw_idOpen(true);\n  };\n  const handleCloseImage_id = () => {\n    setImage_idOpen(false);\n  };\n\n  const handleOpenImage_id = () => {\n    setImage_idOpen(true);\n  };\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Sorteio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={image_idOpen}\n          onClose={handleCloseImage_id}\n          onOpen={handleOpenImage_id}\n          value={image_id}\n          required={true}\n        >\n          {draws.map((draw, index) => (\n            <MenuItem\n              key={draw.draw_id}\n              value={draw.draw_id}\n              onClick={() => handleChangeDraw(draw.draw_id, index)}\n            >\n              {draw.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Images</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={draw_idOpen}\n          onClose={handleCloseDraw_id}\n          onOpen={handleOpenDraw_id}\n          value={draws_draw_id}\n          required={true}\n        >\n          {images.map((image, index) =>\n            image.draws_draw_id === draws_draw_id ? (\n              <MenuItem\n                key={image.image_id}\n                value={image.image_id}\n                onClick={() => handleChangeImage(image.image_id, index)}\n              >\n                {image.name}\n              </MenuItem>\n            ) : (\n              <div key={image.image_id} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Deletar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nexport const Quota = styled.div`\n    width: 100px;\n    height: 100px;\n    border-radius: 5em;\n    background-color: #031a6b;\n    text-align: center;\n    line-height: 100px;\n    font-weight: bold;\n    color: #fff;\n`","import React, { useEffect } from \"react\";\nimport api from \"../../../services/api\";\nimport { IDraw_QuotasVO } from \"../../../types\";\nimport { Container, Quota } from \"./styles\";\n\nexport default function Update() {\n  const [draw_quotas, setDraw_Quotas] = React.useState<IDraw_QuotasVO[]>([]);\n\n  useEffect(() => {\n    async function getDraw_Quotas() {\n      const { data } = await api.get(\"/draw_quotas\");\n      setDraw_Quotas(data);\n    }\n    getDraw_Quotas();\n  }, []);\n\n  return (\n    <Container>\n      {draw_quotas.map((quota) => (\n        <Quota>{quota.number}</Quota>\n      ))}\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport { Button, FormControl } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n\n  const [number, setNumber] = React.useState(\"\");\n\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handleChangeNumber = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setNumber(event.target.value as string);\n  };\n\n  async function sendApi() {\n    const payload = {\n      number,\n    };\n\n    const { data } = await api.post(\"/draw_quota\", payload);\n    if (data === \"Falhou em criar a cota\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em criar a cota\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Número da Cota\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Cadastar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport { IDraw_QuotasVO } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n\n  const [number, setNumber] = React.useState(\"\");\n  const [draw_quotas, setDraw_Quotas] = React.useState<IDraw_QuotasVO[]>([]);\n  const [draw_quota_id, setDraw_Quota_Id] = React.useState<\n    number | undefined\n  >();\n  const [drawQuotas_idOpen, setDrawQuotas_idOpen] = React.useState(false);\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handleChangeNumber = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setNumber(event.target.value as string);\n  };\n\n  const handleChangeDraw_Quotas = (id: number | undefined, index: number) => {\n    setDraw_Quota_Id(id);\n  };\n\n  const handleCloseDraw_Quotas = () => {\n    setDrawQuotas_idOpen(false);\n  };\n\n  const handleOpenDraw_Quotas = () => {\n    setDrawQuotas_idOpen(true);\n  };\n\n  useEffect(() => {\n    async function getDraw_Quotas() {\n      const { data } = await api.get(\"/draw_quotas\");\n      setDraw_Quotas(data);\n    }\n    getDraw_Quotas();\n  }, []);\n\n  async function sendApi() {\n    const payload = {\n      number,\n      draw_quota_id,\n    };\n\n    const { data } = await api.put(\"/draw_quota\", payload);\n    if (data === \"Falhou em atualizar a cota\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em atualizar a cota\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Cotas</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={drawQuotas_idOpen}\n          onClose={handleCloseDraw_Quotas}\n          onOpen={handleOpenDraw_Quotas}\n          value={draw_quota_id}\n          required={true}\n        >\n          {draw_quotas.map((draw_quota, index) => (\n            <MenuItem\n              key={draw_quota.draw_quota_id}\n              value={draw_quota.draw_quota_id}\n              onClick={() =>\n                handleChangeDraw_Quotas(draw_quota.draw_quota_id, index)\n              }\n            >\n              {draw_quota.number}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Número da Cota\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Atualizar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api, { URL } from \"../../../services/api\";\nimport { IDraw_QuotasVO } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n\n  const [draw_quotas, setDraw_Quotas] = React.useState<IDraw_QuotasVO[]>([]);\n  const [draw_quota_id, setDraw_Quota_Id] = React.useState<\n    number | undefined\n  >();\n  const [drawQuotas_idOpen, setDrawQuotas_idOpen] = React.useState(false);\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handleChangeDraw_Quotas = (id: number | undefined, index: number) => {\n    setDraw_Quota_Id(id);\n  };\n\n  const handleCloseDraw_Quotas = () => {\n    setDrawQuotas_idOpen(false);\n  };\n\n  const handleOpenDraw_Quotas = () => {\n    setDrawQuotas_idOpen(true);\n  };\n\n  useEffect(() => {\n    async function getDraw_Quotas() {\n      const { data } = await api.get(\"/draw_quotas\");\n      setDraw_Quotas(data);\n    }\n    getDraw_Quotas();\n  }, []);\n\n  async function sendApi() {\n    const response = await fetch(URL + \"/draw_quota\", {\n      body: JSON.stringify({\n        draw_quota_id,\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n      },\n      method: \"DELETE\",\n    });\n    const data = await response.json();\n\n    if (data === \"Falhou em deletar a cota\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em deletar a cota\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Cotas</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={drawQuotas_idOpen}\n          onClose={handleCloseDraw_Quotas}\n          onOpen={handleOpenDraw_Quotas}\n          value={draw_quota_id}\n          required={true}\n        >\n          {draw_quotas.map((draw_quota, index) => (\n            <MenuItem\n              key={draw_quota.draw_quota_id}\n              value={draw_quota.draw_quota_id}\n              onClick={() =>\n                handleChangeDraw_Quotas(draw_quota.draw_quota_id, index)\n              }\n            >\n              {draw_quota.number}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Deleta\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nexport const Quota = styled.div`\n    width: 100px;\n    height: 100px;\n    border-radius: 5em;\n    background-color: #031a6b;\n    text-align: center;\n    line-height: 100px;\n    font-weight: bold;\n    color: #fff;\n`","import React, { useEffect } from \"react\";\nimport api from \"../../../services/api\";\nimport { IQuotas_Raffle } from \"../../../types\";\nimport { Container, Quota } from \"./styles\";\n\nexport default function List() {\n  const [raffles_quotas, setRaffles_Quotas] = React.useState<IQuotas_Raffle[]>([]);\n\n  useEffect(() => {\n    async function getRaffle_Quotas() {\n      const { data } = await api.get(\"/quotas_rafles\");\n      setRaffles_Quotas(data);\n    }\n    getRaffle_Quotas();\n  }, []);\n\n  return (\n    <Container>\n      {raffles_quotas.map((quota) => (\n        <Quota>{quota.number}</Quota>\n      ))}\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport { Button, FormControl } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n\n  const [number, setNumber] = React.useState(\"\");\n\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handleChangeNumber = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setNumber(event.target.value as string);\n  };\n\n  async function sendApi() {\n    const payload = {\n      number,\n    };\n\n    const { data } = await api.post(\"/quota_raffle\", payload);\n    if (data === \"Falhou em criar a cota\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em criar a cota\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Número da Cota\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Cadastar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport { IQuotas_Raffle } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Update() {\n  const classes = useStyles();\n\n  const [number, setNumber] = React.useState(\"\");\n  const [raffle_quotas, setRaffle_Quotas] = React.useState<IQuotas_Raffle[]>(\n    []\n  );\n  const [quota_raffle_id, setQuota_Raffle_Id] = React.useState<\n    number | undefined\n  >();\n  const [raffleQuotas_idOpen, setRaffleQuotas_idOpen] = React.useState(false);\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handleChangeNumber = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setNumber(event.target.value as string);\n  };\n\n  const handleChangeRaffle_Quotas = (id: number | undefined, index: number) => {\n    setQuota_Raffle_Id(id);\n  };\n\n  const handleCloseRaffle_Quotas = () => {\n    setRaffleQuotas_idOpen(false);\n  };\n\n  const handleOpenDraw_Quotas = () => {\n    setRaffleQuotas_idOpen(true);\n  };\n\n  useEffect(() => {\n    async function getDraw_Quotas() {\n      const { data } = await api.get(\"/quotas_rafles\");\n      setRaffle_Quotas(data);\n    }\n    getDraw_Quotas();\n  }, []);\n\n  async function sendApi() {\n    const payload = {\n      number,\n      quota_raffle_id,\n    };\n\n    const { data } = await api.put(\"/quota_raffle\", payload);\n    if (data === \"Falhou em atualizar a cota\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em atualizar a cota\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Cotas</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={raffleQuotas_idOpen}\n          onClose={handleCloseRaffle_Quotas}\n          onOpen={handleOpenDraw_Quotas}\n          value={quota_raffle_id}\n          required={true}\n        >\n          {raffle_quotas.map((raffle_quota, index) => (\n            <MenuItem\n              key={raffle_quota.quota_raffle_id}\n              value={raffle_quota.quota_raffle_id}\n              onClick={() =>\n                handleChangeRaffle_Quotas(raffle_quota.quota_raffle_id, index)\n              }\n            >\n              {raffle_quota.number}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Número da Cota\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Update\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api, { URL } from \"../../../services/api\";\nimport { IQuotas_Raffle } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Delete() {\n  const classes = useStyles();\n\n  const [raffle_quotas, setRaffle_Quotas] = React.useState<IQuotas_Raffle[]>(\n    []\n  );\n  const [quota_raffle_id, setQuota_Raffle_Id] = React.useState<\n    number | undefined\n  >();\n  const [raffleQuotas_idOpen, setRaffleQuotas_idOpen] = React.useState(false);\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handleChangeRaffle_Quotas = (id: number | undefined, index: number) => {\n    setQuota_Raffle_Id(id);\n  };\n\n  const handleCloseRaffle_Quotas = () => {\n    setRaffleQuotas_idOpen(false);\n  };\n\n  const handleOpenDraw_Quotas = () => {\n    setRaffleQuotas_idOpen(true);\n  };\n\n  useEffect(() => {\n    async function getDraw_Quotas() {\n      const { data } = await api.get(\"/quotas_rafles\");\n      setRaffle_Quotas(data);\n    }\n    getDraw_Quotas();\n  }, []);\n\n  async function sendApi() {\n    const response = await fetch(URL + \"/quota_raffle\", {\n      body: JSON.stringify({\n        quota_raffle_id,\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n      },\n      method: \"DELETE\",\n    });\n    const data = await response.json();\n\n    if (data === \"Falhou em deletar a cota\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em deletar a cota\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Cotas</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={raffleQuotas_idOpen}\n          onClose={handleCloseRaffle_Quotas}\n          onOpen={handleOpenDraw_Quotas}\n          value={quota_raffle_id}\n          required={true}\n        >\n          {raffle_quotas.map((raffle_quota, index) => (\n            <MenuItem\n              key={raffle_quota.quota_raffle_id}\n              value={raffle_quota.quota_raffle_id}\n              onClick={() =>\n                handleChangeRaffle_Quotas(raffle_quota.quota_raffle_id, index)\n              }\n            >\n              {raffle_quota.number}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Deletar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport api from \"../../../services/api\";\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { IBusiness } from \"../../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n  const [business, setBusiness] = useState<IBusiness[]>([]);\n  const [business_id, setBusiness_Id] = useState<number | undefined>();\n  const [business_idOpen, setBusiness_idOpen] = useState<boolean>(false);\n\n  const handleChangeBusiness = (id: number | undefined, index: number) => {\n    setBusiness_Id(id);\n  };\n\n  const handleCloseBusiness_id = () => {\n    setBusiness_idOpen(false);\n  };\n  const handleOpenBusiness_id = () => {\n    setBusiness_idOpen(true);\n  };\n\n  useEffect(() => {\n    async function getBusiness() {\n      const { data } = await api.get(\"/business\");\n      setBusiness(data);\n    }\n    getBusiness();\n  }, []);\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Negocio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={business_idOpen}\n          onClose={handleCloseBusiness_id}\n          onOpen={handleOpenBusiness_id}\n          value={business_id}\n          required={true}\n        >\n          {business.map((busines, index) => (\n            <MenuItem\n              key={busines.business_id}\n              value={busines.business_id}\n              onClick={() => handleChangeBusiness(busines.business_id, index)}\n            >\n              {busines.fantasy_name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FileBase64 from 'react-file-base64';\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from '../../../services/api'\nimport { Button, FormControl, Input, InputAdornment, InputLabel, MenuItem, Select } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '25ch',\n    },\n    button: {\n        margin: theme.spacing(1),\n      },\n  }),\n)\nexport default function Create() {\n  const classes = useStyles();\n  const [cnpj,setCnpj] = useState<string|undefined>()\n  const [fantasy_name,setFantasyName] = useState<string|undefined>()\n  const [logo,setLogo] = useState<string|undefined>()\n  const [banner,setBanner] = useState<string|undefined>()\n  const [phone,setPhone] = useState<string|undefined>()\n  const [regulation,setRegulation] = useState<string|undefined>()\n  const [facebook,setFacebook] = useState<string|undefined>()\n  const [whatsapp,setWhatsapp] = useState<string|undefined>()\n  const [instagram,setInstagram] = useState<string|undefined>()\n  const [response,setResponse] = React.useState<JSX.Element>()\n\n  \n  const handlChangeLogo = (file:any ) => {\n    setLogo(file.base64)\n  }\n  const handlChangeBanner = (file:any ) => {\n    setBanner(file.base64)\n  }\n\n  async function sendApi() {\n\n    const payload = {\n        cnpj,\n        fantasy_name,\n        logo,\n        phone,\n        regulation,\n        banner,\n        social: `${facebook},${whatsapp},${instagram}`\n\n    }\n\n    const { data } = await api.post(\"/business\",payload)\n\n    if (data === \"Falhou em criar Business\"){\n        setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }else if (data === \"Sucesso em criar Business\") {\n        setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form className={classes.root} noValidate={false} onSubmit={event => event.preventDefault()} autoComplete=\"off\">\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true}  id=\"outlined-basic\" label=\"cnpj\" value={cnpj} onChange={element => setCnpj(element.target.value) } />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true}  id=\"outlined-basic\" label=\"Nome fantasia\" value={fantasy_name} onChange={element => setFantasyName(element.target.value)} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin} >\n      <InputLabel id=\"demo-controlled-open-select-label\">Logo</InputLabel>\n      <FileBase64 multiple={ false } onDone={handlChangeLogo} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin} >\n      <InputLabel id=\"demo-controlled-open-select-label\">Banner</InputLabel>\n      <FileBase64 multiple={ false } onDone={handlChangeBanner} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true}  id=\"outlined-basic\" label=\"Telefone\" value={phone} onChange={element => setPhone(element.target.value)} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField required={true}  id=\"outlined-basic\" label=\"Regulação\" value={regulation} onChange={element => setRegulation(element.target.value)} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField   id=\"outlined-basic\" label=\"Facebook\" value={facebook} onChange={element => setFacebook(element.target.value) } />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField   id=\"outlined-basic\" label=\"Instagram\" value={instagram} onChange={element => setInstagram(element.target.value)} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField   id=\"outlined-basic\" label=\"Whatsapp\" value={whatsapp} onChange={element => setWhatsapp(element.target.value)} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={{width:\"200px\"}} onClick={sendApi}  className={classes.button} >\n            Cadastar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FileBase64 from \"react-file-base64\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { IBusiness, ISocial } from \"../../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n  const [business, setBusiness] = useState<IBusiness[]>([]);\n  const [business_id, setBusiness_Id] = useState<number | undefined>(0);\n  const [cnpj, setCnpj] = useState<string | undefined>();\n  const [fantasy_name, setFantasyName] = useState<string | undefined>();\n  const [logo, setLogo] = useState<string | undefined>();\n  const [banner,setBanner] = useState<string|undefined>()\n  const [phone, setPhone] = useState<string | undefined>();\n  const [regulation, setRegulation] = useState<string | undefined>();\n  const [facebook, setFacebook] = useState<string | undefined>();\n  const [whatsapp, setWhatsapp] = useState<string | undefined>();\n  const [instagram, setInstagram] = useState<string | undefined>();\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [business_idOpen, setBusiness_idOpen] = useState<boolean>(false);\n\n  const handlChangeLogo = (file: any) => {\n    setLogo(file.base64);\n  };\n  const handlChangeBanner = (file: any) => {\n    setBanner(file.base64);\n  };\n\n  const handleChangeBusiness = (id: number | undefined, index: number) => {\n    setBusiness_Id(id);\n    setCnpj(business[index].cnpj);\n    setFantasyName(business[index].fantasy_name);\n    setPhone(business[index].phone);\n    setRegulation(business[index].regulation);\n    setLogo(business[index].logo);\n    setBanner(business[index].banner)\n\n    const socials: ISocial = JSON.parse(`${business[index].social}`);\n\n    setFacebook(socials.facebook);\n    setWhatsapp(socials.whatsapp);\n    setInstagram(socials.instagram);\n  };\n\n  const handleCloseBusiness_id = () => {\n    setBusiness_idOpen(false);\n  };\n  const handleOpenBusiness_id = () => {\n    setBusiness_idOpen(true);\n  };\n\n  useEffect(() => {\n    async function getBusiness() {\n      const { data } = await api.get(\"/business\");\n      setBusiness(data);\n    }\n    getBusiness();\n  }, []);\n\n  async function sendApi() {\n    const payload = {\n      business_id,\n      cnpj,\n      fantasy_name,\n      logo,\n      banner,\n      phone,\n      regulation,\n      social:  `${facebook},${whatsapp},${instagram}`\n    };\n\n    const { data } = await api.put(\"/business\", payload);\n\n    if (data === \"Falhou em atualizar Business\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em atualizar Business\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"Cnpj inválido\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Negocio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={business_idOpen}\n          onClose={handleCloseBusiness_id}\n          onOpen={handleOpenBusiness_id}\n          value={business_id}\n          required={true}\n        >\n          {business.map((busines, index) => (\n            <MenuItem\n              key={busines.business_id}\n              value={busines.business_id}\n              onClick={() => handleChangeBusiness(busines.business_id, index)}\n            >\n              {busines.fantasy_name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"cnpj\"\n          value={cnpj}\n          onChange={(element) => setCnpj(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Nome fantasia\"\n          value={fantasy_name}\n          onChange={(element) => setFantasyName(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Logo</InputLabel>\n        <FileBase64 multiple={false} onDone={handlChangeLogo} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Banner</InputLabel>\n        <FileBase64 multiple={false} onDone={handlChangeBanner} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Telefone\"\n          value={phone}\n          onChange={(element) => setPhone(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Regulação\"\n          value={regulation}\n          onChange={(element) => setRegulation(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Facebook\"\n          value={facebook}\n          onChange={(element) => setFacebook(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Instagram\"\n          value={instagram}\n          onChange={(element) => setInstagram(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Whatsapp\"\n          value={whatsapp}\n          onChange={(element) => setWhatsapp(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ width: \"200px\" }}\n          onClick={sendApi}\n          className={classes.button}\n        >\n          Atualizar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api,{URL} from \"../../../services/api\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { IBusiness } from \"../../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n  const [business, setBusiness] = useState<IBusiness[]>([]);\n  const [business_id, setBusiness_Id] = useState<number | undefined>();\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [business_idOpen, setBusiness_idOpen] = useState<boolean>(false);\n\n  const handleChangeBusiness = (id: number | undefined, index: number) => {\n    setBusiness_Id(id);\n  };\n\n  const handleCloseBusiness_id = () => {\n    setBusiness_idOpen(false);\n  };\n  const handleOpenBusiness_id = () => {\n    setBusiness_idOpen(true);\n  };\n\n  useEffect(() => {\n    async function getBusiness() {\n      const { data } = await api.get(\"/business\");\n      setBusiness(data);\n    }\n    getBusiness();\n  }, []);\n\n  async function sendApi() {\n\n    const response = await fetch(URL + \"/business\", {\n        body: JSON.stringify({\n            business_id: business_id\n        }),\n        headers: {\n          \"content-type\": \"application/json\",\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n        },\n        method: \"DELETE\",\n      });\n      const data = await response.json();\n\n    if (data === \"Falhou em deletar Business\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em deletar Business\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } \n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Negocio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={business_idOpen}\n          onClose={handleCloseBusiness_id}\n          onOpen={handleOpenBusiness_id}\n          value={business_id}\n          required={true}\n        >\n          {business.map((busines, index) => (\n            <MenuItem\n              key={busines.business_id}\n              value={busines.business_id}\n              onClick={() => handleChangeBusiness(busines.business_id, index)}\n            >\n              {busines.fantasy_name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ width: \"200px\" }}\n          onClick={sendApi}\n          className={classes.button}\n        >\n          Deletar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display:flex;\n    flex-direction: row;\n    flex-wrap:wrap;\n    justify-content: space-between;\n`","import React, { useEffect, useState } from \"react\";\nimport api from \"../../../services/api\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { Container } from \"./styles\";\n\nimport { IBank_Account } from \"../../../types\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function List() {\n  const classes = useStyles();\n  const [banks, setBanks] = useState<IBank_Account[]>([]);\n\n  useEffect(() => {\n    async function getBanks() {\n      const { data } = await api.get(\"/banks_accounts\");\n      setBanks(data);\n    }\n    getBanks();\n  }, []);\n\n  return (\n    <Container>\n      {banks.length > 0\n        ? banks.map((bank) => (\n            <Card className={classes.root} style={{ width: \"290px\", margin: \"10px 10px 10px 10px\" }}>\n              <CardActionArea>\n                <CardMedia\n                  component=\"img\"\n                  alt={bank.name}\n                  image={bank.image}\n                  title={bank.name}\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h6\">\n                    {bank.name}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h5\" component=\"h6\">\n                    Agencia: {bank.agency}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h5\" component=\"h6\">\n                    Cnpj: {bank.cnpj}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h5\" component=\"h6\">\n                    Cpf: {bank.cpf}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h5\" component=\"h6\">\n                    Conta: {bank.number_account}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          ))\n        : \"\"}\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FileBase64 from \"react-file-base64\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport { Button, FormControl, InputLabel } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n  const [cnpj, setCnpj] = useState<string | undefined>();\n  const [nameBank, setNameBank] = useState<string | undefined>();\n  const [numberAccount, setNumberAccount] = useState<string | undefined>();\n  const [cpf, setCpf] = useState<string | undefined>();\n  const [agency, setAgency] = useState<string | undefined>();\n  const [image, setImage] = useState<string | undefined>();\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handlChangeImagem = (file: any) => {\n    setImage(file.base64);\n  };\n\n  async function sendApi() {\n    const payload = {\n      cnpj,\n      image,\n      cpf,\n      agency,\n      number_account: numberAccount,\n      name: nameBank,\n    };\n\n    const { data } = await api.post(\"/bank_account\", payload);\n\n    if (data === \"Falhou em criar banco\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em criar banco\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"Revise os dados de cpf e cnpj\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Nome\"\n          value={nameBank}\n          onChange={(element) => setNameBank(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Cnpj\"\n          value={cnpj}\n          onChange={(element) => setCnpj(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Cpf\"\n          value={cpf}\n          onChange={(element) => setCpf(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Agência\"\n          value={agency}\n          onChange={(element) => setAgency(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Imagem</InputLabel>\n        <FileBase64 multiple={false} onDone={handlChangeImagem} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Número da Conta\"\n          value={numberAccount}\n          onChange={(element) => setNumberAccount(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ width: \"200px\" }}\n          onClick={sendApi}\n          className={classes.button}\n        >\n          Cadastar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FileBase64 from \"react-file-base64\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { IBank_Account } from \"../../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Update() {\n  const classes = useStyles();\n  const [banks, setBanks] = useState<IBank_Account[]>([]);\n  const [bank_account_id, setBank_Account_Id] = useState<number | undefined>();\n  const [cnpj, setCnpj] = useState<string | undefined>();\n  const [nameBank, setNameBank] = useState<string | undefined>();\n  const [numberAccount, setNumberAccount] = useState<string | undefined>();\n  const [cpf, setCpf] = useState<string | undefined>();\n  const [agency, setAgency] = useState<string | undefined>();\n  const [image, setImage] = useState<string | undefined>();\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [bank_idOpen, setBank_idOpen] = useState<boolean>(false);\n\n  const handlChangeImagem = (file: any) => {\n    setImage(file.base64);\n  };\n\n  const handleClosebBank_id = () => {\n    setBank_idOpen(false);\n  };\n  const handleOpenBank_id = () => {\n    setBank_idOpen(true);\n  };\n  const handleChangeBank = (id: number | undefined, index: number) => {\n    setBank_Account_Id(id);\n    setCnpj(banks[index].cnpj);\n    setNameBank(banks[index].name);\n    setNumberAccount(banks[index].number_account);\n    setCpf(banks[index].cpf);\n    setAgency(banks[index].agency);\n    setImage(banks[index].image);\n  };\n\n  useEffect(() => {\n    async function getBanks() {\n      const { data } = await api.get(\"/banks_accounts\");\n      setBanks(data);\n    }\n    getBanks();\n  }, []);\n  async function sendApi() {\n    const payload = {\n      bank_account_id,\n      cnpj,\n      image,\n      cpf,\n      agency,\n      number_account: numberAccount,\n      name: nameBank,\n    };\n\n    const { data } = await api.put(\"/bank_account\", payload);\n\n    if (data === \"Falhou em atualizar banco\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em atualizar banco\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"Revise os dados de cpf e cnpj\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Bancos</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={bank_idOpen}\n          onClose={handleClosebBank_id}\n          onOpen={handleOpenBank_id}\n          value={bank_account_id}\n          required={true}\n        >\n          {banks.map((bank, index) => (\n            <MenuItem\n              key={bank.bank_account_id}\n              value={bank.bank_account_id}\n              onClick={() => handleChangeBank(bank.bank_account_id, index)}\n            >\n              {bank.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Nome\"\n          value={nameBank}\n          onChange={(element) => setNameBank(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Cnpj\"\n          value={cnpj}\n          onChange={(element) => setCnpj(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Cpf\"\n          value={cpf}\n          onChange={(element) => setCpf(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Agência\"\n          value={agency}\n          onChange={(element) => setAgency(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Imagem</InputLabel>\n        <FileBase64 multiple={false} onDone={handlChangeImagem} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Número da Conta\"\n          value={numberAccount}\n          onChange={(element) => setNumberAccount(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ width: \"200px\" }}\n          onClick={sendApi}\n          className={classes.button}\n        >\n          Atualizar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api, { URL } from \"../../../services/api\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { IBank_Account } from \"../../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Delete() {\n  const classes = useStyles();\n  const [banks, setBanks] = useState<IBank_Account[]>([]);\n  const [bank_account_id, setBank_Account_Id] = useState<number | undefined>();\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [bank_idOpen, setBank_idOpen] = useState<boolean>(false);\n\n  const handleClosebBank_id = () => {\n    setBank_idOpen(false);\n  };\n  const handleOpenBank_id = () => {\n    setBank_idOpen(true);\n  };\n  const handleChangeBank = (id: number | undefined, index: number) => {\n    setBank_Account_Id(id);\n  };\n\n  useEffect(() => {\n    async function getBanks() {\n      const { data } = await api.get(\"/banks_accounts\");\n      setBanks(data);\n    }\n    getBanks();\n  }, []);\n  async function sendApi() {\n    const response = await fetch(URL + \"/bank_account\", {\n      body: JSON.stringify({\n        bank_account_id: bank_account_id,\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n      },\n      method: \"DELETE\",\n    });\n    const data = await response.json();\n\n    if (data === \"Falhou em deletar banco\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em deletar banco\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Bancos</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={bank_idOpen}\n          onClose={handleClosebBank_id}\n          onOpen={handleOpenBank_id}\n          value={bank_account_id}\n          required={true}\n        >\n          {banks.map((bank, index) => (\n            <MenuItem\n              key={bank.bank_account_id}\n              value={bank.bank_account_id}\n              onClick={() => handleChangeBank(bank.bank_account_id, index)}\n            >\n              {bank.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ width: \"200px\" }}\n          onClick={sendApi}\n          className={classes.button}\n        >\n          Deletar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport { Button, FormControl } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n\n  const [nameUser, setNameUser] = useState<string>(\"\");\n  const [cpf, setCpf] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [phone, setPhone] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [address, setAddress] = useState<string>(\"\");\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  async function sendApi() {\n    const payload = {\n      name: nameUser,\n      cpf,\n      email,\n      phone,\n      password,\n      address,\n    };\n\n    const { data } = await api.post(\"/user\", payload);\n\n    if (data === \"Já existe um usuário com este cpf\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Usuario criado com sucesso\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"cpf é inválido\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Nome\"\n          value={nameUser}\n          onChange={(element) => setNameUser(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Cpf\"\n          value={cpf}\n          onChange={(element) => setCpf(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Email\"\n          value={email}\n          onChange={(element) => setEmail(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Telefone\"\n          value={phone}\n          onChange={(element) => setPhone(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Senha\"\n          value={password}\n          onChange={(element) => setPassword(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Endereço\"\n          value={address}\n          onChange={(element) => setAddress(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Cadastar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport { Button, FormControl } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Update() {\n  const classes = useStyles();\n\n  const [user_id, setUser_Id] = useState<number>();\n  const [nameUser, setNameUser] = useState<string>(\"\");\n  const [cpf, setCpf] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [phone, setPhone] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [address, setAddress] = useState<string>(\"\");\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  async function sendApi() {\n    const payload = {\n      user_id,\n      name: nameUser,\n      cpf,\n      email,\n      phone,\n      password,\n      address,\n    };\n\n    const { data } = await api.put(\"/user\", payload);\n\n    if (data === \"Erro em atualizar os dados do usuario\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso na atualização das informações\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"Usuario não existe na base de dados\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"cpf é inválido\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n  }\n\n  useEffect(() => {\n    const sessionData: any = sessionStorage.getItem(\"data\");\n    const data = JSON.parse(sessionData);\n    setUser_Id(data.user_id);\n  }, []);\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Nome\"\n          value={nameUser}\n          onChange={(element) => setNameUser(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Cpf\"\n          value={cpf}\n          onChange={(element) => setCpf(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Email\"\n          value={email}\n          onChange={(element) => setEmail(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Telefone\"\n          value={phone}\n          onChange={(element) => setPhone(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Senha\"\n          value={password}\n          onChange={(element) => setPassword(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Endereço\"\n          value={address}\n          onChange={(element) => setAddress(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Atualizar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { URL } from \"../../../services/api\";\nimport { Button, FormControl } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Delete() {\n  const classes = useStyles();\n\n  const [user_id, setUser_Id] = useState<number>();\n  const [cpf, setCpf] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  async function sendApi() {\n    const response = await fetch(URL + \"/user\", {\n      body: JSON.stringify({\n        user_id,\n        email,\n        cpf,\n        password,\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n      },\n      method: \"DELETE\",\n    });\n    const data = await response.json();\n\n    if (data === \"Falhou em excluir o usuario\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso na exclusão do usuario\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"cpf é inválido\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n  }\n\n  useEffect(() => {\n    const sessionData: any = sessionStorage.getItem(\"data\");\n    const data = JSON.parse(sessionData);\n    setUser_Id(data.user_id);\n  }, []);\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Cpf\"\n          value={cpf}\n          onChange={(element) => setCpf(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Email\"\n          value={email}\n          onChange={(element) => setEmail(element.target.value)}\n        />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <TextField\n          required={true}\n          id=\"outlined-basic\"\n          label=\"Senha\"\n          value={password}\n          onChange={(element) => setPassword(element.target.value)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Deletar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport { IDraw, IParticipants_Draw, IUser } from \"../../../types\";\nimport Timer from \"../../../global/Timer\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Update() {\n  const classes = useStyles();\n\n  const [draw_id, setDraw_id] = React.useState<number | undefined>(1);\n  const [draws, setDraws] = React.useState<IDraw[]>([]);\n  const [participants, setParticipants] = useState<IParticipants_Draw[]>([]);\n  const [participant_id, setParticipan_id] = useState<number | undefined>();\n  const [draw_quotas_draw_quota_id, setDraw_Quotas_Draw_Quota_Id] = useState<\n    number | undefined\n  >();\n  const [users_user_id, setUsers_User_Id] = useState<number | undefined>();\n  const [draw_idOpen, setDraw_idOpen] = React.useState(false);\n  const [participant_idOpen, setParticipant_idOpen] = useState(false);\n  const [statusOpen, setStatusOpen] = useState(false);\n  const [status, setStatus] = useState<string>();\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handleChangeDraw = (id: number | undefined, index: number) => {\n    setDraw_id(id);\n  };\n  const handleChangeParticipant = (id: number | undefined, index: number) => {\n    setParticipan_id(id);\n    setUsers_User_Id(participants[index].users_user_id);\n\n    setDraw_Quotas_Draw_Quota_Id(participants[index].draw_quota_id);\n  };\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n  useEffect(() => {\n    async function getUsers() {\n      const { data } = await api.get<IParticipants_Draw[]>(\n        \"/participants_draws\"\n      );\n\n      setUsers_User_Id(\n        data.find(\n          (participant) => participant.participant_id === participant_id\n        )?.users_user_id\n      );\n    }\n    getUsers();\n  }, [participant_id]);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_draws_quotas?draw_id=${draw_id}`\n      );\n\n      setParticipants(data[0]);\n    }\n    getParticipants();\n  }, [draw_id]);\n\n  const handleCloseDraw_id = () => {\n    setDraw_idOpen(false);\n  };\n\n  const handleOpenDraw_id = () => {\n    setDraw_idOpen(true);\n  };\n\n  const handleCloseParticipant_id = () => {\n    setParticipant_idOpen(false);\n  };\n\n  const handleOpenParticipant_id = () => {\n    setParticipant_idOpen(true);\n  };\n\n  const handleCloseStatus = () => {\n    setStatusOpen(false);\n  };\n\n  const handleOpenStatus = () => {\n    setStatusOpen(true);\n  };\n\n  async function sendApi() {\n    const payload = {\n      participant_id,\n      draw_quotas_draw_quota_id,\n      users_user_id,\n      draws_draw_id: draw_id,\n      status,\n    };\n\n    const { data } = await api.put(\"/participant_draw\", payload);\n\n    if (data === \"Sucesso em atualizar o participante\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"Falhou em atualizar o participante\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n\n    console.log(data);\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Sorteio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={draw_idOpen}\n          onClose={handleCloseDraw_id}\n          onOpen={handleOpenDraw_id}\n          value={draw_id}\n          required={true}\n        >\n          {draws.map((draw, index) => (\n            <MenuItem\n              key={draw.draw_id}\n              value={draw.draw_id}\n              onClick={() => handleChangeDraw(draw.draw_id, index)}\n            >\n              {draw.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Participantes\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={participant_idOpen}\n          onClose={handleCloseParticipant_id}\n          onOpen={handleOpenParticipant_id}\n          value={participant_id}\n          required={true}\n        >\n          {participants.map((participant, index) =>\n            participant.draw_id === draw_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={participant.participant_id}\n                onClick={() =>\n                  handleChangeParticipant(participant.participant_id, index)\n                }\n              >\n                {`${participant.number}-${\n                  participant.status === \"sold\" ? \"Pago\" : \"\"\n                }${participant.status === \"resevation\" ? \"Reservado\" : \"\"}${\n                  participant.status === \"free\" ? \"Livre\" : \"\"\n                }- Horas: ${Math.abs(\n                  Timer(new Date(`${participant.created_at}`))?.hours\n                )}`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Status</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={statusOpen}\n          onClose={handleCloseStatus}\n          onOpen={handleOpenStatus}\n          value={status}\n          required={true}\n        >\n          <MenuItem key={1} value=\"sold\" onClick={() => setStatus(\"sold\")}>\n            Pago\n          </MenuItem>\n          <MenuItem\n            key={2}\n            value=\"resevation\"\n            onClick={() => setStatus(\"resevation\")}\n          >\n            Reservado\n          </MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Atualizar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Timer from '../../../global/Timer'\nimport Alert from \"@material-ui/lab/Alert\";\nimport api, { URL } from \"../../../services/api\";\nimport { IDraw, IParticipants_Draw } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Update() {\n  const classes = useStyles();\n\n  const [draw_id, setDraw_id] = React.useState<number | undefined>(1);\n  const [draws, setDraws] = React.useState<IDraw[]>([]);\n  const [participants, setParticipants] = useState<IParticipants_Draw[]>([]);\n  const [participant_id, setParticipan_id] = useState<number | undefined>();\n  const [draw_quotas_draw_quota_id, setDraw_Quotas_Draw_Quota_Id] = useState<\n    number | undefined\n  >();\n  const [users_user_id, setUsers_User_Id] = useState<number | undefined>();\n  const [draw_idOpen, setDraw_idOpen] = React.useState(false);\n  const [participant_idOpen, setParticipant_idOpen] = useState(false);\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handleChangeDraw = (id: number | undefined, index: number) => {\n    setDraw_id(id);\n  };\n  const handleChangeParticipant = (id: number | undefined, index: number) => {\n    setParticipan_id(id);\n    setUsers_User_Id(participants[index].users_user_id);\n    setDraw_Quotas_Draw_Quota_Id(participants[index].draw_quota_id);\n  };\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n  useEffect(() => {\n    async function getUsers() {\n      const { data } = await api.get<IParticipants_Draw[]>(\n        \"/participants_draws\"\n      );\n\n      setUsers_User_Id(\n        data.find(\n          (participant) => participant.participant_id === participant_id\n        )?.users_user_id\n      );\n    }\n    getUsers();\n  }, [participant_id]);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_draws_quotas?draw_id=${draw_id}`\n      );\n\n      setParticipants(data[0]);\n    }\n    getParticipants();\n  }, [draw_id]);\n\n  const handleCloseDraw_id = () => {\n    setDraw_idOpen(false);\n  };\n\n  const handleOpenDraw_id = () => {\n    setDraw_idOpen(true);\n  };\n\n  const handleCloseParticipant_id = () => {\n    setParticipant_idOpen(false);\n  };\n\n  const handleOpenParticipant_id = () => {\n    setParticipant_idOpen(true);\n  };\n\n  async function sendApi() {\n    const response = await fetch(URL + \"/participant_draw\", {\n      body: JSON.stringify({\n        participant_id,\n        draw_quotas_draw_quota_id,\n        users_user_id,\n        draws_draw_id: draw_id,\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n      },\n      method: \"DELETE\",\n    });\n    const data = await response.json();\n\n    if (data === \"Falhou em deletar o participante\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em deletar o participante\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Sorteio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={draw_idOpen}\n          onClose={handleCloseDraw_id}\n          onOpen={handleOpenDraw_id}\n          value={draw_id}\n          required={true}\n        >\n          {draws.map((draw, index) => (\n            <MenuItem\n              key={draw.draw_id}\n              value={draw.draw_id}\n              onClick={() => handleChangeDraw(draw.draw_id, index)}\n            >\n              {draw.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Participantes\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={participant_idOpen}\n          onClose={handleCloseParticipant_id}\n          onOpen={handleOpenParticipant_id}\n          value={participant_id}\n          required={true}\n        >\n          {participants.map((participant, index) =>\n            participant.draw_id === draw_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={participant.participant_id}\n                onClick={() =>\n                  handleChangeParticipant(participant.participant_id, index)\n                }\n              >\n                {`${participant.number}-${participant.status === \"sold\" ? \"Pago\" : \"\"}${participant.status === \"resevation\" ? \"Reservado\" : \"\"}${participant.status === \"free\" ? \"Livre\" : \"\"}- Horas: ${Math.abs(Timer(new Date(`${participant.created_at}`))?.hours)}`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Deletar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 670px;\n  width: 100%;\n  display: flex;\n  overflow-y: auto;\n  flex-wrap: wrap;\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Ijoin_winners_participants_users_quotas_draw } from \"../../../types\";\nimport ReactPlayer from 'react-player'\n\nimport { Container } from \"./styles\";\nimport api from \"../../../services/api\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400,\n    maxHeight: 670,\n  },\n  media: {\n    height: 300,\n  },\n});\n\nexport default function MediaCard() {\n  const classes = useStyles();\n  const [winnerDraws, setWinnerDraws] = useState<\n    Ijoin_winners_participants_users_quotas_draw[]\n  >([]);\n\n  useEffect(() => {\n    async function getWinnerDraws() {\n      const { data } = await api.get(\n        \"/join_winners_participants_users_quotas_draw\"\n      );\n\n      setWinnerDraws(data[0]);\n    }\n\n    getWinnerDraws();\n  }, []);\n\n  return (\n    <Container>\n      {winnerDraws.length > 0\n        ? winnerDraws.map((winner) => (\n            <Card className={classes.root} style={{margin: \"10px 10px 10px 10px\"}}>\n              <CardActionArea>\n                <CardMedia\n                  component=\"img\"\n                  className={classes.media}\n                  image={winner.image}\n                  title={winner.name}\n                />\n                <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {winner.name}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h5\" component=\"h3\">\n                    {winner.title}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n            \n                    component=\"p\"\n                  >\n                    #{winner.cotas}\n                  </Typography>\n                  <ReactPlayer style={{diplay: `${winner.video !== \" \" ? \"block\":\"none\" }`}}  url={winner.video} width={winner.video !== \" \" ? 360:0} height={winner.video !== \" \" ? 250:0} controls={true} />\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          ))\n        : \"\"}\n    </Container>\n  );\n\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FileBase64 from \"react-file-base64\";\nimport api from \"../../../services/api\";\nimport { IDraw, IParticipants_Draw } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n  const [draws, setDraws] = useState<IDraw[]>([]);\n  const [draw_id, setDraw_Id] = useState<number | undefined>(1);\n  const [participants, setParticipants] = useState<IParticipants_Draw[]>([]);\n  const [participant_id, setParticiapant_id] = useState<number>();\n  const [image, setImage] = useState<string>();\n  const [video, setVideo] = useState<string>(\" \");\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [draw_idOpen, setDraw_idOpen] = React.useState(false);\n  const [participant_idOpen, setParticipant_idOpen] = useState(false);\n\n  const handleChangeDraw = (id: number | undefined, index: number) => {\n    setDraw_Id(id);\n  };\n\n  const handleChangeParticipant = (id: number | undefined, index: number) => {\n    setParticiapant_id(id);\n  };\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_draws_quotas?draw_id=${draw_id}`\n      );\n\n      setParticipants(data[0]);\n    }\n    getParticipants();\n  }, [draw_id]);\n\n  const handlChangeDataImage = (file: any) => {\n    setImage(file.base64);\n  };\n\n  const handleCloseDraw_id = () => {\n    setDraw_idOpen(false);\n  };\n\n  const handleOpenDraw_id = () => {\n    setDraw_idOpen(true);\n  };\n\n  const handleCloseParticipant_id = () => {\n    setParticipant_idOpen(false);\n  };\n\n  const handleOpenParticipant_id = () => {\n    setParticipant_idOpen(true);\n  };\n  async function sendApi() {\n    const payload = {\n      image: image,\n      video: video,\n      participants_draw_participant_id: participant_id,\n    };\n    const { data } = await api.post(\"/winner_draw\", payload);\n\n    if (data === \"Sucesso em criar o ganhador\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"Falhou em criar o ganhador\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n  }\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Sorteio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={draw_idOpen}\n          onClose={handleCloseDraw_id}\n          onOpen={handleOpenDraw_id}\n          value={draw_id}\n          required={true}\n        >\n          {draws.map((draw, index) => (\n            <MenuItem\n              key={draw.draw_id}\n              value={draw.draw_id}\n              onClick={() => handleChangeDraw(draw.draw_id, index)}\n            >\n              {draw.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Participantes\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={participant_idOpen}\n          onClose={handleCloseParticipant_id}\n          onOpen={handleOpenParticipant_id}\n          value={participant_id}\n          required={true}\n        >\n          {participants.map((participant, index) =>\n            participant.draw_id === draw_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={participant.participant_id}\n                onClick={() =>\n                  handleChangeParticipant(participant.participant_id, index)\n                }\n              >\n                {`${participant.number}-${\n                  participant.status === \"sold\" ? \"Pago\" : \"\"\n                }${participant.status === \"resevation\" ? \"Reservado\" : \"\"}${\n                  participant.status === \"free\" ? \"Livre\" : \"\"\n                }`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <FileBase64 multiple={false}  onDone={handlChangeDataImage} />\n      </FormControl>\n      <FormControl fullWidth required={false}  className={classes.margin}>\n        <TextField\n          required={false}\n          onChange={(element) => setVideo(element.target.value)}\n          value={video}\n          id=\"outlined-basic\"\n          label=\"Youtube(URL)\"\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Cadastar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FileBase64 from \"react-file-base64\";\nimport api from \"../../../services/api\";\nimport { IDraw, IParticipants_Draw, IWinner_Draw } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Update() {\n  const classes = useStyles();\n  const [draws, setDraws] = useState<IDraw[]>([]);\n  const [draw_id, setDraw_Id] = useState<number | undefined>(1);\n  const [participants, setParticipants] = useState<IParticipants_Draw[]>([]);\n  const [participant_id, setParticiapant_id] = useState<number | undefined>();\n  const [winnerDraw_id, setWinner_id] = useState<number | undefined>(1);\n  const [winnerDraw, setWinnerDraws] = useState<IWinner_Draw[]>([]);\n  const [image, setImage] = useState<string>();\n  const [video, setVideo] = useState<string>(\" \");\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [draw_idOpen, setDraw_idOpen] = React.useState(false);\n  const [participant_idOpen, setParticipant_idOpen] = useState(false);\n  const [winnerDraw_idOpen, setWinnerDraw_idOpen] = useState(false);\n\n  const handleChangeDraw = (id: number | undefined, index: number) => {\n    setDraw_Id(id);\n  };\n\n  const handleChangeParticipant = (id: number | undefined, index: number) => {\n    setParticiapant_id(id);\n  };\n\n  const handleChangeWinnerDraw = (id: number | undefined, index: number) => {\n    setWinner_id(id);\n  };\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n  useEffect(() => {\n    async function getWinnerDraws() {\n      const { data } = await api.get(\"/winners_draws\");\n\n      setWinnerDraws(data);\n    }\n    getWinnerDraws();\n  }, []);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_draws_quotas?draw_id=${draw_id}`\n      );\n\n      setParticipants(data[0]);\n    }\n    getParticipants();\n  }, [draw_id]);\n\n  const handlChangeDataImage = (file: any) => {\n    setImage(file.base64);\n  };\n\n  const handleCloseDraw_id = () => {\n    setDraw_idOpen(false);\n  };\n\n  const handleOpenDraw_id = () => {\n    setDraw_idOpen(true);\n  };\n\n  const handleCloseParticipant_id = () => {\n    setParticipant_idOpen(false);\n  };\n\n  const handleOpenParticipant_id = () => {\n    setParticipant_idOpen(true);\n  };\n\n  const handleCloseWinnerDraw_id = () => {\n    setWinnerDraw_idOpen(false);\n  };\n\n  const handleOpenWinnerDraw_id = () => {\n    setWinnerDraw_idOpen(true);\n  };\n\n  async function sendApi() {\n    const payload = {\n      image: image,\n      video: video,\n      winner_id: winnerDraw_id,\n      participants_draw_participant_id: participant_id,\n    };\n    const { data } = await api.put(\"/winner_draw\", payload);\n\n    if (data === \"Sucesso em atualizar o ganhador\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"Falhou em atualizar o ganhador\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n  }\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Sorteio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={draw_idOpen}\n          onClose={handleCloseDraw_id}\n          onOpen={handleOpenDraw_id}\n          value={draw_id}\n          required={true}\n        >\n          {draws.map((draw, index) => (\n            <MenuItem\n              key={draw.draw_id}\n              value={draw.draw_id}\n              onClick={() => handleChangeDraw(draw.draw_id, index)}\n            >\n              {draw.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Participantes\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={participant_idOpen}\n          onClose={handleCloseParticipant_id}\n          onOpen={handleOpenParticipant_id}\n          value={participant_id}\n          required={true}\n        >\n          {participants.map((participant, index) =>\n            participant.draw_id === draw_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={participant.participant_id}\n                onClick={() =>\n                  handleChangeParticipant(participant.participant_id, index)\n                }\n              >\n                {`${participant.number}-${\n                  participant.status === \"sold\" ? \"Pago\" : \"\"\n                }${participant.status === \"resevation\" ? \"Reservado\" : \"\"}${\n                  participant.status === \"free\" ? \"Livre\" : \"\"\n                }`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Ganhadores\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={winnerDraw_idOpen}\n          onClose={handleCloseWinnerDraw_id}\n          onOpen={handleOpenWinnerDraw_id}\n          value={winnerDraw_id}\n          required={true}\n        >\n          {winnerDraw.map((winner, index) =>\n            winner.participants_draw_participant_id === participant_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={winnerDraw_id}\n                onClick={() => handleChangeWinnerDraw(winner.winner_id, index)}\n              >\n                {`ID GANHADOR: ${winner.winner_id}- ID PARTICIPANTE ${winner.participants_draw_participant_id}`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <FileBase64 multiple={false} onDone={handlChangeDataImage} />\n      </FormControl>\n      <FormControl fullWidth required={false}  className={classes.margin}>\n        <TextField\n          required={false}\n          onChange={(element) => setVideo(element.target.value)}\n          value={video}\n          id=\"outlined-basic\"\n          label=\"Youtube(URL)\"\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Atualizar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api, { URL } from \"../../../services/api\";\nimport { IDraw, IParticipants_Draw, IWinner_Draw } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Delete() {\n  const classes = useStyles();\n  const [draws, setDraws] = useState<IDraw[]>([]);\n  const [draw_id, setDraw_Id] = useState<number | undefined>(1);\n  const [participants, setParticipants] = useState<IParticipants_Draw[]>([]);\n  const [participant_id, setParticiapant_id] = useState<number | undefined>();\n  const [winnerDraw_id, setWinner_id] = useState<number | undefined>();\n  const [winnerDraw, setWinnerDraws] = useState<IWinner_Draw[]>([]);\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [draw_idOpen, setDraw_idOpen] = React.useState(false);\n  const [participant_idOpen, setParticipant_idOpen] = useState(false);\n  const [winnerDraw_idOpen, setWinnerDraw_idOpen] = useState(false);\n\n  const handleChangeDraw = (id: number | undefined, index: number) => {\n    setDraw_Id(id);\n  };\n\n  const handleChangeParticipant = (id: number | undefined, index: number) => {\n    setParticiapant_id(id);\n  };\n\n  const handleChangeWinnerDraw = (id: number | undefined, index: number) => {\n    setWinner_id(id);\n  };\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n  useEffect(() => {\n    async function getWinnerDraws() {\n      const { data } = await api.get(\"/winners_draws\");\n\n      setWinnerDraws(data);\n    }\n    getWinnerDraws();\n  }, []);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_draws_quotas?draw_id=${draw_id}`\n      );\n\n      setParticipants(data[0]);\n    }\n    getParticipants();\n  }, [draw_id]);\n\n  const handleCloseDraw_id = () => {\n    setDraw_idOpen(false);\n  };\n\n  const handleOpenDraw_id = () => {\n    setDraw_idOpen(true);\n  };\n\n  const handleCloseParticipant_id = () => {\n    setParticipant_idOpen(false);\n  };\n\n  const handleOpenParticipant_id = () => {\n    setParticipant_idOpen(true);\n  };\n\n  const handleCloseWinnerDraw_id = () => {\n    setWinnerDraw_idOpen(false);\n  };\n\n  const handleOpenWinnerDraw_id = () => {\n    setWinnerDraw_idOpen(true);\n  };\n\n  async function sendApi() {\n    const response = await fetch(URL + \"/winner_draw\", {\n      body: JSON.stringify({\n        winner_id: winnerDraw_id,\n        \n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n      },\n      method: \"DELETE\",\n    });\n    const data = await response.json();\n\n    if (data === \"Falhou em deletar o ganhador\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em deletar o ganhador\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Sorteio</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={draw_idOpen}\n          onClose={handleCloseDraw_id}\n          onOpen={handleOpenDraw_id}\n          value={draw_id}\n          required={true}\n        >\n          {draws.map((draw, index) => (\n            <MenuItem\n              key={draw.draw_id}\n              value={draw.draw_id}\n              onClick={() => handleChangeDraw(draw.draw_id, index)}\n            >\n              {draw.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Participantes\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={participant_idOpen}\n          onClose={handleCloseParticipant_id}\n          onOpen={handleOpenParticipant_id}\n          value={participant_id}\n          required={true}\n        >\n          {participants.map((participant, index) =>\n            participant.draw_id === draw_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={participant.participant_id}\n                onClick={() =>\n                  handleChangeParticipant(participant.participant_id, index)\n                }\n              >\n                {`${participant.number}-${\n                  participant.status === \"sold\" ? \"Pago\" : \"\"\n                }${participant.status === \"resevation\" ? \"Reservado\" : \"\"}${\n                  participant.status === \"free\" ? \"Livre\" : \"\"\n                }`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Ganhadores\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={winnerDraw_idOpen}\n          onClose={handleCloseWinnerDraw_id}\n          onOpen={handleOpenWinnerDraw_id}\n          value={winnerDraw_id}\n          required={true}\n        >\n          {winnerDraw.map((winner, index) =>\n            winner.participants_draw_participant_id === participant_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={winnerDraw_id}\n                onClick={() => handleChangeWinnerDraw(winner.winner_id, index)}\n              >\n                {`ID GANHADOR: ${winner.winner_id}- ID PARTICIPANTE ${winner.participants_draw_participant_id}`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Deletar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 800px;\n`;\nexport const Title = styled.h1`\n  font-weight: 700;\n`;\nexport const Subtitle = styled.h2`\n  color: #6a6a6a;\n`;\nexport const Header = styled.header`\n  display: flex;\n  flex-direction: column;\n  padding-left: 20px;\n  width: 100%;\n  height: 60px;\n`;\nexport const ContainerRow = styled.div`\n  display: flex;\n  margin-top: 90px;\n  height: 700px;\n  align-items: center;\n\n`;\n\nexport const ContainerRowInfo = styled.div`\n  display: flex;\n  margin-top: 90px;\n  height: 700px;\n  align-items: center;\n  @media only screen and (min-width: 500px) {\n    flex-wrap: wrap;     \n  }\n\n\n`;\nexport const ContainerSlider = styled.div`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  overflow-x: scroll;\n  display: flex;\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n`;\n\nexport const ImageSlider = styled.img`\n  object-fit: scale-down;\n  width: 100%;\n  height: 100%;\n  display: block;\n`;\n\nexport const ContainerColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  align-items: center;\n`;\n\nexport const ContainerInfoRow = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  height: 41%;\n  @media only screen and (min-width: 500px) {\n   justify-content: space-evenly;\n   width: 80%;\n  }\n`;\n\nexport const ValorTitle = styled.h3`\n  color: \"#fff\";\n  font-weight: \"bold\";\n  text-align: center;\n  line-height: 25px;\n  margin: 0;\n`;\nexport const Valor = styled.div`\n  background-color: #28a745;\n  color: #fff;\n  margin: 0;\n  width: 240px;\n  height: 70px;\n  border-radius: 13px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DateTitle = styled.h3`\n  color: \"#fff\";\n  font-weight: \"bold\";\n  text-align: center;\n  line-height: 25px;\n  margin: 0;\n`;\nexport const DateDraw = styled.div`\n  background-color: #343a40;\n  color: #fff;\n  margin: 0;\n  width: 240px;\n  height: 70px;\n  border-radius: 13px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Description = styled.div`\n  font-family: Roboto, sans-serif;\n  font-size: 15px;\n  height: 100%;\n  max-height: 450px;\n  width: 50%;\n`;\n\nexport const Timer = styled.div`\n  display: flex;\n  width: 50%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  border-radius: 20px;\n  height: 90px;\n  font-size: 16px;\n  font-weight: bold;\n  color: #fff;\n  background-color: #343a40;\n`;\nexport const CardProcess = styled.div`\n  width: 300px;\n  height: 296px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media only screen and (min-width: 500px) {\n    height: 310px;\n    width: 260px;\n  }\n`;\nexport const CardImg = styled.img`\n  width: 240px;\n  height: 197px;\n`;\n\nexport const ContainerQuotas = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 80px;\n  @media only screen and (min-width: 500px) {\n    margin-top: 250px;\n  }\n\n`;\nexport const QuotasHeader = styled.div`\n  width: 100%;\n  font-family: Roboto, sans-serif;\n  padding-left: 10%;\n`;\nexport const ContainerButtonsFilter = styled.div`\n  width: 100%;\n  height: 90px;\n  display: flex;\n  font-family: Roboto, sans-serif;\n  padding-left: 160px;\n  margin-top: 40px;\n`;\n\nexport const ButtonsFilter = styled.button`\n  background-color: ${props => props.color};\n  height: 50px;\n  width: 150px;\n  cursor: pointer;\n  color:#fff;\n  border: 1px solid;\n  font-size: 16px;\n  line-height: 1.5;\n`\n\nexport const ContinerQuotasShow = styled.div `\n  display:flex;\n  flex-wrap:wrap;\n  margin-top: 40px;\n  justify-content:center;\n  min-height: 200px;\n`\nexport const ButtonQuota = styled.button`\n  background-color: ${props => props.color};\n  height: 38px;\n  width: 53px;\n  cursor: pointer;\n  color:#fff;\n  border: 1px solid;\n  font-size: 16px;\n  line-height: 1.5;\n`\nexport const ContainerConfirmation = styled.div `\n  bottom: 0px ;\n  display: ${props => props.length > 0?\"flex\":\"none\"};\n  position:fixed;\n  background-color: #fff;\n  height: 120px;\n  width: 100%;\n  align-items:center;\n  justify-content: space-around;\n `\n export const ButtonConfirmation = styled.button`\n background-color: yellow;\n height: 50px;\n width: 150px;\n cursor: pointer;\n color:#000;\n border: 0px solid;\n font-size: 16px;\n line-height: 1.5;\n`","import React, { useEffect, useState } from \"react\";\nimport api, { URL } from \"../../../services/api\";\nimport {\n  IQuotas_Raffle,\n  IRaffles,\n  IImage,\n  IParticipants_Ruffle,\n} from \"../../../types\";\nimport TimerCounter from \"../../../global/Timer\";\nimport ReactMarkdown from \"react-markdown\";\nimport {\n  Container,\n  Header,\n  Title,\n  Subtitle,\n  ContainerRow,\n  ContainerSlider,\n  ContainerColumn,\n  ContainerInfoRow,\n  Valor,\n  ValorTitle,\n  DateTitle,\n  DateDraw,\n  Description,\n  Timer,\n  CardProcess,\n  CardImg,\n  ContainerQuotas,\n  QuotasHeader,\n  ContainerButtonsFilter,\n  ButtonsFilter,\n  ContinerQuotasShow,\n  ButtonQuota,\n  ContainerConfirmation,\n  ButtonConfirmation,\n  ContainerRowInfo,\n  ImageSlider\n} from \"./styles\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\n\nexport default function MoadalRaffle() {\n  const [quotasRaffle, setQuotasRaffle] = useState<IQuotas_Raffle[]>([]);\n  const [quotasVerifyRaffle, setQuotasVerifyRaffle] = useState<any>([]);\n  const [participants, setParticipants] = useState<IParticipants_Ruffle[]>([]);\n  const [raffle, setRaffle] = useState<IRaffles>();\n  const [images, setImages] = React.useState<IImage[]>([]);\n  const [raffle_id, setRaffle_Id] = useState<number>();\n  const [day, setDay] = useState<string>();\n  const [month, setMonth] = useState<string>();\n  const [year, setYear] = useState<string>();\n  const [minutes, setMinutes] = useState<string>();\n  const [showTime, setShowTime] = useState<string>();\n  const [quotasSelected, setQuotasSelected] = useState<string[]>([]);\n  const [seconds, setSeconds] = useState(0);\n  const [free, setFree] = useState(true);\n  const [resevation, setResevation] = useState(true);\n  const [sold, setSold] = useState(true);\n\n  useEffect(() => {\n    async function getRaffle_Quotas() {\n      const { data } = await api.get(\"/quotas_rafles\");\n      setQuotasRaffle(data);\n    }\n    getRaffle_Quotas();\n  }, []);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_raffles_quotas?raffle_id=${sessionStorage.getItem(\n          \"raffle_id\"\n        )}`\n      );\n      console.log(data[0]);\n      setParticipants(data[0]);\n    }\n    getParticipants();\n  }, []);\n  useEffect(() => {\n    const dateNew: any = new Date(`${raffle?.date_raffle}`);\n    const dateResult = TimerCounter(dateNew);\n    const interval = setInterval(() => {\n      setSeconds((seconds) => seconds + 1);\n\n      if (\n        Math.sign(dateResult.days) === -1 &&\n        Math.sign(dateResult.hours) === -1 &&\n        Math.sign(dateResult.minutes) === -1\n      ) {\n        setShowTime(`Encerrado`);\n      } else if (\n        Math.sign(dateResult.days) === -1 &&\n        Math.sign(dateResult.hours) === 0 &&\n        Math.sign(dateResult.minutes) === -1\n      ) {\n        setShowTime(`Encerrado`);\n      } else if (\n        Math.sign(dateResult.days) === -1 &&\n        Math.sign(dateResult.hours) === -1 &&\n        Math.sign(dateResult.minutes) === 0\n      ) {\n        setShowTime(`Encerrado`);\n      } else if (\n        Math.sign(dateResult.days) === 0 &&\n        Math.sign(dateResult.hours) === -1 &&\n        Math.sign(dateResult.minutes) === -1\n      ) {\n        setShowTime(`Encerrado`);\n      } else if (\n        Math.sign(dateResult.days) === 0 &&\n        Math.sign(dateResult.hours) === 0 &&\n        Math.sign(dateResult.minutes) === -1\n      ) {\n        setShowTime(`Encerrado`);\n      } else if (\n        Math.sign(dateResult.days) === NaN &&\n        Math.sign(dateResult.hours) === NaN &&\n        Math.sign(dateResult.minutes) === NaN\n      ) {\n        setShowTime(`Encerrado`);\n      } else {\n        setShowTime(\n          `Dias: ${dateResult.days} Horas: ${dateResult.hours} Minutos: ${dateResult.minutes}`\n        );\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  });\n  useEffect(() => {\n    async function getRaffles() {\n      const { data } = await api.get(\n        `/raffle/${sessionStorage.getItem(\"raffle_id\")}`\n      );\n\n      const id: any = sessionStorage.getItem(\"raffle_id\");\n      setRaffle_Id(parseInt(id));\n      setRaffle(data[0]);\n\n      const date = new Date(data[0].date_raffle);\n      const months = [\n        `01`,\n        `02`,\n        `03`,\n        `04`,\n        `05`,\n        `06`,\n        `07`,\n        `08`,\n        `09`,\n        `10`,\n        `11`,\n        `12`,\n      ];\n      setDay(`${date.getUTCDate()}`);\n      setMonth(`${months[date.getMonth()]}`);\n      setYear(`${date.getUTCFullYear()}`);\n      setMinutes(`${date.getMinutes()}`);\n    }\n    getRaffles();\n  }, []);\n\n  useEffect(() => {\n    async function getImages() {\n      const { data } = await api.get(\"/images\");\n\n      setImages(data);\n    }\n    getImages();\n  }, []);\n\n  useEffect(() => {\n    function renderQuotas() {\n      const render = quotasRaffle.map((quota_raffle) => {\n        let response;\n\n        if (participants.length === 0) {\n          response = {\n            status: \"free\",\n            number: quota_raffle.number,\n            quota_raffle_id: quota_raffle.quota_raffle_id,\n            raffle_id,\n          };\n        } else {\n          participants.map((participant_item) => {\n            if (\n              participant_item.quota_raffle_id === quota_raffle.quota_raffle_id\n            ) {\n              response = { ...participant_item };\n            }\n          });\n        }\n        if (response === undefined) {\n          response = {\n            status: \"free\",\n            number: quota_raffle.number,\n            quota_raffle_id: quota_raffle.quota_raffle_id,\n            raffle_id,\n          };\n        }\n        return response;\n      });\n\n      setQuotasVerifyRaffle(render);\n    }\n    renderQuotas();\n  }, [quotasRaffle, participants]);\n  const handleSetQuotasSelected = (number: string, status: string) => {\n    if (status === \"free\") {\n      const verify = quotasSelected.filter((quota) => quota === number);\n\n      if (verify.length === 0) {\n        setQuotasSelected([...quotasSelected, number]);\n      }\n    }\n  };\n\n  const handleSetQuotasExcludeSelected = (number: string) => {\n    const verify = quotasSelected.filter((quota) => quota != number);\n    setQuotasSelected(verify);\n  };\n\n  async function sendApi() {\n    if (quotasSelected.length > 0) {\n      const dataUser: any = sessionStorage.getItem(\"data\");\n\n      quotasSelected.map(async (item) => {\n        const payload = {\n          users_user_id: JSON.parse(dataUser).user_id,\n          quotas_raffle_quota_raffle_id: parseInt(\n            `${\n              quotasRaffle.find((quota) => quota.number === item)\n                ?.quota_raffle_id\n            }`\n          ),\n          raffles_raffle_id: raffle_id,\n        };\n\n        const { data } = await api.post(\"/participant_raffle\", payload);\n        console.log(data);\n      });\n    }\n  }\n\n  const handeHandleQuotasFree = () => {\n    const display = free === true ? \"block\" : \"none\";\n    const buttons: NodeListOf<HTMLButtonElement> = document.querySelectorAll(\n      \".gray\"\n    );\n    buttons.forEach((element) => {\n      element.style.display = display;\n    });\n    setFree(!free);\n  };\n\n  const handeHandleQuotasResevation = () => {\n    const display = resevation === true ? \"block\" : \"none\";\n    const buttons: NodeListOf<HTMLButtonElement> = document.querySelectorAll(\n      \".blue\"\n    );\n    buttons.forEach((element) => {\n      element.style.display = display;\n    });\n    setResevation(!resevation);\n  };\n  const handeHandleQuotasGreen = () => {\n    const display = sold === true ? \"block\" : \"none\";\n    const buttons: NodeListOf<HTMLButtonElement> = document.querySelectorAll(\n      \".green\"\n    );\n    buttons.forEach((element) => {\n      element.style.display = display;\n    });\n    setSold(!sold);\n  };\n  return (\n    <Container>\n      <Header>\n        <Title>{raffle?.title}</Title>\n        <Subtitle>{raffle?.subtitle}</Subtitle>\n      </Header>\n      <ContainerRow>\n        <ContainerSlider>\n          <ImageSlider\n            src={raffle?.image}\n          />\n        </ContainerSlider>\n        <ContainerColumn>\n          <ContainerInfoRow>\n            <Valor>\n              <ValorTitle>Valor</ValorTitle>\n              <p style={{ margin: 0 }}>R$ {raffle?.value}</p>\n            </Valor>\n            <DateDraw>\n              <DateTitle>Rifa</DateTitle>\n              <p style={{ margin: 0 }}>\n                {day}/{month}/{year}\n              </p>\n            </DateDraw>\n          </ContainerInfoRow>\n          <Description>\n            {\" \"}\n            <ReactMarkdown source={raffle?.description} escapeHtml={true} />\n          </Description>\n          <Timer>\n            <p>{showTime}</p>\n          </Timer>\n        </ContainerColumn>\n      </ContainerRow>\n      <ContainerRowInfo style={{ justifyContent: \"center\" }}>\n        <CardProcess>\n          <CardImg src={`${URL}/passo-1.png`} />\n          <Subtitle>Escolha uma Rifa</Subtitle>\n          <p style={{ width: \"60%\" }}>\n            Muito fácil participar. Comece escolhendo uma Rifa ativa.\n          </p>\n        </CardProcess>\n        <CardProcess>\n          <CardImg src={`${URL}/passo-2.png`} />\n          <Subtitle>Selecione os números</Subtitle>\n          <p style={{ width: \"60%\" }}>\n            Escolha quantos quiser! Quanto mais, mais chances de ganhar.\n          </p>\n        </CardProcess>\n        <CardProcess>\n          <CardImg src={`${URL}/passo-3.png`} />\n          <Subtitle>Faça o pagamento</Subtitle>\n          <p style={{ width: \"60%\" }}>\n            Escolha uma das formas de pagamento disponíveis.\n          </p>\n        </CardProcess>\n        <CardProcess>\n          <CardImg src={`${URL}/passo-4.png`} />\n          <Subtitle>Aguarde o sorteio</Subtitle>\n          <p style={{ width: \"60%\" }}>\n            Agora é aguardar o sorteio pela Loteria Federal e boa sorte!\n          </p>\n        </CardProcess>\n      </ContainerRowInfo>\n      <ContainerQuotas>\n        <QuotasHeader>\n          <h1>Cotas</h1>\n          <Subtitle>Clique e selecione quantas cotas você quiser!</Subtitle>\n        </QuotasHeader>\n        <ContainerButtonsFilter>\n          <div>\n            <ButtonsFilter color={\"gray\"} onClick={handeHandleQuotasFree}>\n              Livre\n            </ButtonsFilter>\n            <ButtonsFilter color={\"blue\"} onClick={handeHandleQuotasResevation}>\n              Reservados\n            </ButtonsFilter>\n            <ButtonsFilter color={\"green\"} onClick={handeHandleQuotasGreen}>\n              Pagos\n            </ButtonsFilter>\n          </div>\n        </ContainerButtonsFilter>\n        <ContinerQuotasShow>\n          {quotasVerifyRaffle.map((quota) => {\n            let colorValue = \"green\";\n            if (quota?.status === \"resevation\") {\n              colorValue = \"blue\";\n            } else if (quota?.status === \"sold\") {\n              colorValue = \"green\";\n            } else if (quota?.status === \"free\") {\n              colorValue = \"gray\";\n            }\n            return (\n              <ButtonQuota\n                className={colorValue}\n                onClick={() =>\n                  handleSetQuotasSelected(quota?.number, quota?.status)\n                }\n                color={colorValue}\n              >\n                {quota?.number}\n              </ButtonQuota>\n            );\n          })}\n        </ContinerQuotasShow>\n      </ContainerQuotas>\n      <ContainerConfirmation length={quotasSelected.length}>\n        <div style={{ width: \"400px\" }}>\n          {quotasSelected.map((quota) => (\n            <ButtonQuota\n              color={\"blue\"}\n              onClick={() => handleSetQuotasExcludeSelected(quota)}\n            >\n              {quota}\n            </ButtonQuota>\n          ))}\n        </div>\n        <div>\n          <p>\n            {quotasSelected.length}x {raffle?.value} = R${\" \"}\n            {quotasSelected.length * parseInt(`${raffle?.value}`)}{\" \"}\n          </p>\n          <ButtonConfirmation onClick={sendApi}>Finalizar</ButtonConfirmation>\n        </div>\n      </ContainerConfirmation>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport api from \"../../../services/api\";\nimport { Container } from \"./styles\";\nimport { IRaffles } from \"../../../types\";\nimport { useDispatch } from \"react-redux\";\nimport { Action } from \"../../../store/screen\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@material-ui/core\";\nimport { CarouselProvider, Slider, Slide } from \"pure-react-carousel\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\nimport ReactMarkdown from \"react-markdown\";\nimport ModalRaffle from \"../ModalRaffle\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: 0,\n  },\n});\n\n\nexport default function Create() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [raffles, setRaffles] = useState<IRaffles[]>([]);\n\n  useEffect(() => {\n    async function getRaffles() {\n      const { data } = await api.get(\"/raffles\");\n\n      setRaffles(data);\n    }\n    getRaffles();\n  }, []);\n  function handleModalRaffle(id: number | undefined) {\n    sessionStorage.setItem(\"raffle_id\", `${id}`);\n    dispatch<Action>({ type: \"set\", state: ModalRaffle });\n  }\n\n  return (\n    <Container>\n      {raffles.length > 0\n        ? raffles.map((raffle) => (\n            <Card\n              className={classes.root}\n              style={{ width: \"30%\", minWidth: \"350px\",margin: \"10px 10px 10px 10px\" }}\n            >\n              <CardActionArea>\n                <CarouselProvider\n                  naturalSlideWidth={130}\n                  naturalSlideHeight={60}\n                  totalSlides={1}\n                >\n                  <Slider>\n                    {\n                      <Slide index={1} style={{ height: \"400px\" }}>\n                        <CardMedia\n                          component=\"img\"\n                          style={{objectFit: \"scale-down\"}}\n                          alt={raffle.title}\n                          height=\"300px\"\n                          width=\"300px\"\n                          image={raffle.image}\n                          title={raffle.title}\n                        />\n                      </Slide>\n                    }\n                  </Slider>\n                </CarouselProvider>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h6\">\n                    {raffle.title}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {raffle.subtitle}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <ReactMarkdown\n                      source={raffle.description}\n                      escapeHtml={true}\n                    />\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    R$ {raffle.value}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                    style={{\n                      width: \"20px\",\n                      height: \"20px\",\n                      borderRadius: \"5.1em\",\n                      backgroundColor: `${\n                        raffle.status === \"active\" ? \"green\" : \"red\"\n                      }`,\n                    }}\n                  />\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button\n                  size=\"medium\"\n                  color=\"primary\"\n                  style={{\n                    display: `${raffle.status === \"active\" ? \"block\" : \"none\"}`,\n                  }}\n                  onClick={() => handleModalRaffle(raffle.raffle_id)}\n                >\n                  Participar\n                </Button>\n              </CardActions>\n            </Card>\n          ))\n        : \"\"}\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api from \"../../../services/api\";\nimport { IRaffles, IParticipants_Ruffle, IUser } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nimport Timer from '../../../global/Timer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Update() {\n  const classes = useStyles();\n\n  const [raffle_id, setRaffle_id] = React.useState<number | undefined>(1);\n  const [raffles, setRaffle] = React.useState<IRaffles[]>([]);\n  const [participants, setParticipants] = useState<IParticipants_Ruffle[]>([]);\n  const [participant_id, setParticipan_id] = useState<number | undefined>();\n  const [quotas_raffle_quota_raffle_id,setRaffle_Quotas_Raffle_Quota_Id] = useState<number | undefined>();\n  const [users_user_id, setUsers_User_Id] = useState<number | undefined>();\n  const [raffle_idOpen, setRaffle_idOpen] = React.useState(false);\n  const [participant_idOpen, setParticipant_idOpen] = useState(false);\n  const [statusOpen, setStatusOpen] = useState(false);\n  const [status, setStatus] = useState<string>();\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handleChangeDraw = (id: number | undefined, index: number) => {\n    setRaffle_id(id);\n  };\n  const handleChangeParticipant = (id: number | undefined, index: number) => {\n    setParticipan_id(id);\n    setUsers_User_Id(participants[index].users_user_id);\n    \n    setRaffle_Quotas_Raffle_Quota_Id(participants[index].quota_raffle_id);\n  };\n\n  useEffect(() => {\n    async function getRaffles() {\n      const { data } = await api.get(\"/raffles\");\n\n      setRaffle(data);\n    }\n    getRaffles();\n  }, []);\n  useEffect(() => {\n    async function getUsers() {\n      const { data } = await api.get<IParticipants_Ruffle[]>(\"/participants_raffles\");\n      setUsers_User_Id(\n        data.find((participant) => participant.participant_id === participant_id)?.users_user_id\n      );\n    }\n    getUsers();\n  }, [participant_id]);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(`/join_participants_raffles_quotas?raffle_id=${raffle_id}`);\n      console.log(data[0])\n      setParticipants(data[0]);\n    }\n    getParticipants()\n  }, [raffle_id]);\n\n  const handleCloseRaffle_id = () => {\n    setRaffle_idOpen(false);\n  };\n\n  const handleOpenRaffle_id = () => {\n    setRaffle_idOpen(true);\n  };\n\n  const handleCloseParticipant_id = () => {\n    setParticipant_idOpen(false);\n  };\n\n  const handleOpenParticipant_id = () => {\n    setParticipant_idOpen(true);\n  };\n\n  const handleCloseStatus = () => {\n    setStatusOpen(false);\n  };\n\n  const handleOpenStatus = () => {\n    setStatusOpen(true);\n  };\n\n  async function sendApi() {\n    const payload = {\n      participant_id,\n      quotas_raffle_quota_raffle_id,\n      users_user_id,\n      raffles_raffle_id: raffle_id,\n      status,\n    };\n\n    const { data } = await api.put(\"/participant_raffle\", payload);\n    console.log(data)\n    if (data === \"Sucesso em atualizar o participante\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"Falhou em atualizar o participante\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n  }\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Rifa</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={raffle_idOpen}\n          onClose={handleCloseRaffle_id}\n          onOpen={handleOpenRaffle_id}\n          value={raffle_id}\n          required={true}\n        >\n          {raffles.map((raffle, index) => (\n            <MenuItem\n              key={raffle.raffle_id}\n              value={raffle.raffle_id}\n              onClick={() => handleChangeDraw(raffle.raffle_id, index)}\n            >\n              {raffle.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Participantes\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={participant_idOpen}\n          onClose={handleCloseParticipant_id}\n          onOpen={handleOpenParticipant_id}\n          value={participant_id}\n          required={true}\n        >\n          {participants.map((participant, index) => participant.raffle_id === raffle_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={participant.participant_id}\n                onClick={() =>\n                  handleChangeParticipant(participant.participant_id, index)\n                }\n              >\n                {\n                `${participant.number}-${participant.status === \"sold\" ? \"Pago\" : \"\"}\n                ${participant.status === \"resevation\" ? \"Reservado\" : \"\"}${participant.status === \"free\" ? \"Livre\" : \"\"}\n                - Horas: ${Math.abs(Timer(new Date(`${participant.created_at}`))?.hours)}\n                `}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Status</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={statusOpen}\n          onClose={handleCloseStatus}\n          onOpen={handleOpenStatus}\n          value={status}\n          required={true}\n        >\n          <MenuItem key={1} value=\"sold\" onClick={() => setStatus(\"sold\")}>\n            Pago\n          </MenuItem>\n          <MenuItem\n            key={2}\n            value=\"resevation\"\n            onClick={() => setStatus(\"resevation\")}\n          >\n            Reservado\n          </MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Atualizar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport api, { URL } from \"../../../services/api\";\nimport { IRaffles, IParticipants_Ruffle } from \"../../../types\";\nimport Timer from '../../../global/Timer'\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Update() {\n  const classes = useStyles();\n\n  const [raffle_id, setRaffle_id] = React.useState<number | undefined>(1);\n  const [raffles, setRaffles] = React.useState<IRaffles[]>([]);\n  const [participants, setParticipants] = useState<IParticipants_Ruffle[]>([]);\n  const [participant_id, setParticipan_id] = useState<number | undefined>();\n  const [\n    quotas_raffle_quota_raffle_id,\n    setRaffle_Quotas_Raffle_Quota_Id,\n  ] = useState<number | undefined>();\n  const [users_user_id, setUsers_User_Id] = useState<number | undefined>();\n  const [raffle_idOpen, setRaffle_idOpen] = React.useState(false);\n  const [participant_idOpen, setParticipant_idOpen] = useState(false);\n  const [response, setResponse] = React.useState<JSX.Element>();\n\n  const handleChangeRaffle = (id: number | undefined, index: number) => {\n    setRaffle_id(id);\n  };\n  const handleChangeParticipant = (id: number | undefined, index: number) => {\n    setParticipan_id(id);\n    setUsers_User_Id(participants[index].users_user_id);\n    setRaffle_Quotas_Raffle_Quota_Id(participants[index].quota_raffle_id);\n  };\n\n  useEffect(() => {\n    async function getRaffles() {\n      const { data } = await api.get(\"/raffles\");\n\n      setRaffles(data);\n    }\n    getRaffles();\n  }, []);\n  useEffect(() => {\n    async function getUsers() {\n      const { data } = await api.get<IParticipants_Ruffle[]>(\n        \"/participants_raffles\"\n      );\n\n      setUsers_User_Id(\n        data.find(\n          (participant) => participant.participant_id === participant_id\n        )?.users_user_id\n      );\n    }\n    getUsers();\n  }, [participant_id]);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_raffles_quotas?raffle_id=${raffle_id}`\n      );\n\n      setParticipants(data[0]);\n    }\n    getParticipants();\n  }, [raffle_id]);\n\n  const handleCloseRaffle_id = () => {\n    setRaffle_idOpen(false);\n  };\n\n  const handleOpenRaffle_id = () => {\n    setRaffle_idOpen(true);\n  };\n\n  const handleCloseParticipant_id = () => {\n    setParticipant_idOpen(false);\n  };\n\n  const handleOpenParticipant_id = () => {\n    setParticipant_idOpen(true);\n  };\n\n  async function sendApi() {\n    const response = await fetch(URL + \"/participant_raffle\", {\n      body: JSON.stringify({\n        participant_id,\n        quotas_raffle_quota_raffle_id,\n        users_user_id,\n        raffles_raffle_id: raffle_id,\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n      },\n      method: \"DELETE\",\n    });\n    const data = await response.json();\n\n    if (data === \"Falhou em deletar o participante\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em deletar o participante\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Rifa</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={raffle_idOpen}\n          onClose={handleCloseRaffle_id}\n          onOpen={handleOpenRaffle_id}\n          value={raffle_id}\n          required={true}\n        >\n          {raffles.map((raffle, index) => (\n            <MenuItem\n              key={raffle.raffle_id}\n              value={raffle.raffle_id}\n              onClick={() => handleChangeRaffle(raffle.raffle_id, index)}\n            >\n              {raffle.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Participantes\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={participant_idOpen}\n          onClose={handleCloseParticipant_id}\n          onOpen={handleOpenParticipant_id}\n          value={participant_id}\n          required={true}\n        >\n          {participants.map((participant, index) =>\n            participant.raffle_id === raffle_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={participant.participant_id}\n                onClick={() =>\n                  handleChangeParticipant(participant.participant_id, index)\n                }\n              >\n                {\n                `${participant.number}-${participant.status === \"sold\" ? \"Pago\" : \"\"}${participant.status === \"resevation\" ? \"Reservado\" : \"\"}${participant.status === \"free\" ? \"Livre\" : \"\"}- Horas: ${Math.abs(Timer(new Date(`${participant.created_at}`))?.hours)}`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Deletar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    height: 100%;\n    width: 100%;\n    display:flex;\n    flex-wrap: wrap;\n`","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Ijoin_raffles_participants_users_quotas_raffles } from \"../../../types\";\nimport ReactPlayer from \"react-player\";\n\nimport { Container } from \"./styles\";\nimport api from \"../../../services/api\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400,\n    maxHeight: 670,\n  },\n  media: {\n    height: 300,\n  },\n});\n\nexport default function MediaCard() {\n  const classes = useStyles();\n  const [winnerRaffles, setWinnerRaffles] = useState<\n    Ijoin_raffles_participants_users_quotas_raffles[]\n  >([]);\n\n  useEffect(() => {\n    async function getWinnerDraws() {\n      const { data } = await api.get(\n        \"/join_raffles_participants_users_quotas_raffles\"\n      );\n\n      setWinnerRaffles(data[0]);\n    }\n\n    getWinnerDraws();\n  }, []);\n\n  return (\n    <Container>\n      {winnerRaffles.length > 0\n        ? winnerRaffles.map((winner) => (\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  component=\"img\"\n                  className={classes.media}\n                  image={winner.image}\n                  title={winner.name}\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {winner.name}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h5\" component=\"h3\">\n                    {winner.title}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    #{winner.cotas}\n                  </Typography>\n                  <ReactPlayer style={{diplay: `${winner.video !== \" \" ? \"block\":\"none\" }`}}  url={winner.video} width={winner.video !== \" \" ? 360:0} height={winner.video !== \" \" ? 250:0} controls={true} />\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          ))\n        : \"\"}\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FileBase64 from \"react-file-base64\";\nimport api from \"../../../services/api\";\nimport { IRaffles, IParticipants_Ruffle } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Create() {\n  const classes = useStyles();\n  const [raffles, setRaffles] = useState<IRaffles[]>([]);\n  const [raffle_id, setRaffle_Id] = useState<number | undefined>(1);\n  const [participants, setParticipants] = useState<IParticipants_Ruffle[]>([]);\n  const [participant_id, setParticiapant_id] = useState<number>();\n  const [image, setImage] = useState<string>();\n  const [video, setVideo] = useState<string>(\" \");\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [raffle_idOpen, setRaffle_idOpen] = React.useState(false);\n  const [participant_idOpen, setParticipant_idOpen] = useState(false);\n\n  const handleChangeRaffle = (id: number | undefined, index: number) => {\n    setRaffle_Id(id);\n  };\n\n  const handleChangeParticipant = (id: number | undefined, index: number) => {\n    setParticiapant_id(id);\n  };\n  useEffect(() => {\n    async function getRaffles() {\n      const { data } = await api.get(\"/raffles\");\n\n      setRaffles(data);\n    }\n    getRaffles();\n  }, []);\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_raffles_quotas?raffle_id=${raffle_id}`\n      );\n      console.log(data[0])\n      setParticipants(data[0]);\n    }\n    getParticipants();\n  }, [raffle_id]);\n\n  const handlChangeDataImage = (file: any) => {\n    setImage(file.base64);\n  };\n\n  const handleCloseRaffle_id = () => {\n    setRaffle_idOpen(false);\n  };\n\n  const handleOpenRaffle_id = () => {\n    setRaffle_idOpen(true);\n  };\n\n  const handleCloseParticipant_id = () => {\n    setParticipant_idOpen(false);\n  };\n\n  const handleOpenParticipant_id = () => {\n    setParticipant_idOpen(true);\n  };\n  async function sendApi() {\n    const payload = {\n      image: image,\n      video: video,\n      participants_raffle_participant_id: participant_id,\n    };\n    const { data } = await api.post(\"/winner_raffle\", payload);\n\n    if (data === \"Sucesso em criar ganhador\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"Falhou em criar o ganhador\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n  }\n\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Rifa</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={raffle_idOpen}\n          onClose={handleCloseRaffle_id}\n          onOpen={handleOpenRaffle_id}\n          value={raffle_id}\n          required={true}\n        >\n          {raffles.map((raffle, index) => (\n            <MenuItem\n              key={raffle.raffle_id}\n              value={raffle.raffle_id}\n              onClick={() => handleChangeRaffle(raffle.raffle_id, index)}\n            >\n              {raffle.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Participantes\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={participant_idOpen}\n          onClose={handleCloseParticipant_id}\n          onOpen={handleOpenParticipant_id}\n          value={participant_id}\n          required={true}\n        >\n          {participants.map((participant, index) =>\n          \n            participant.raffle_id === raffle_id ? (\n              \n              <MenuItem\n                key={Math.random() * 9999}\n                value={participant.participant_id}\n                onClick={() =>\n                  handleChangeParticipant(participant.participant_id, index)\n                }\n              >\n                {`${participant.number}-${\n                  participant.status === \"sold\" ? \"Pago\" : \"\"\n                }${participant.status === \"resevation\" ? \"Reservado\" : \"\"}${\n                  participant.status === \"free\" ? \"Livre\" : \"\"\n                }`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <FileBase64 multiple={false} onDone={handlChangeDataImage} />\n      </FormControl>\n      <FormControl fullWidth required={false}  className={classes.margin}>\n        <TextField\n          required={false}\n          onChange={(element) => setVideo(element.target.value)}\n          value={video}\n          id=\"outlined-basic\"\n          label=\"Youtube(URL)\"\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Cadastar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FileBase64 from \"react-file-base64\";\nimport api from \"../../../services/api\";\nimport { IRaffles, IParticipants_Ruffle, IWinner_Raffle } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Update() {\n  const classes = useStyles();\n  const [raffles, setRaffles] = useState<IRaffles[]>([]);\n  const [raffle_id, setRaffle_Id] = useState<number | undefined>(1);\n  const [participants, setParticipants] = useState<IParticipants_Ruffle[]>([]);\n  const [participant_id, setParticiapant_id] = useState<number | undefined>();\n  const [winnerRaffle_id, setWinnerRaffle_id] = useState<number | undefined>(1);\n  const [winnerRaffle, setWinnerRaffle] = useState<IWinner_Raffle[]>([]);\n  const [image, setImage] = useState<string>();\n  const [video, setVideo] = useState<string>(\" \");\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [raffle_idOpen, setRaffle_idOpen] = React.useState(false);\n  const [participant_idOpen, setParticipant_idOpen] = useState(false);\n  const [winnerRaffle_idOpen, setWinnerRaffle_idOpen] = useState(false);\n\n  const handleChangeRaffle = (id: number | undefined, index: number) => {\n    setRaffle_Id(id);\n  };\n\n  const handleChangeParticipant = (id: number | undefined, index: number) => {\n    setParticiapant_id(id);\n  };\n\n  const handleChangeWinnerDraw = (id: number | undefined, index: number) => {\n    setWinnerRaffle_id(id);\n  };\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/raffles\");\n\n      setRaffles(data);\n    }\n    getDraws();\n  }, []);\n  useEffect(() => {\n    async function getWinnerRaffles() {\n      const { data } = await api.get(\"/winners_raffles\");\n\n      setWinnerRaffle(data);\n    }\n    getWinnerRaffles();\n  }, []);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_raffles_quotas?raffle_id=${raffle_id}`\n      );\n\n      setParticipants(data[0]);\n    }\n    getParticipants();\n  }, [raffle_id]);\n\n  const handlChangeDataImage = (file: any) => {\n    setImage(file.base64);\n  };\n\n  const handleCloseRaffle_id = () => {\n    setRaffle_idOpen(false);\n  };\n\n  const handleOpenRaffle_id = () => {\n    setRaffle_idOpen(true);\n  };\n\n  const handleCloseParticipant_id = () => {\n    setParticipant_idOpen(false);\n  };\n\n  const handleOpenParticipant_id = () => {\n    setParticipant_idOpen(true);\n  };\n\n  const handleCloseWinnerRaffle_id = () => {\n    setWinnerRaffle_idOpen(false);\n  };\n\n  const handleOpenWinnerRaffle_id = () => {\n    setWinnerRaffle_idOpen(true);\n  };\n\n  async function sendApi() {\n    const payload = {\n      image: image,\n      video: video,\n      winner_id: winnerRaffle_id,\n      participants_raffle_participant_id: participant_id,\n    };\n    const { data } = await api.put(\"/winner_raffle\", payload);\n\n    if (data === \"Sucesso em atualizar ganhador\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    } else if (data === \"Falhou em atualizar o ganhador\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    }\n  }\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Rifas</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={raffle_idOpen}\n          onClose={handleCloseRaffle_id}\n          onOpen={handleOpenRaffle_id}\n          value={raffle_id}\n          required={true}\n        >\n          {raffles.map((raffle, index) => (\n            <MenuItem\n              key={raffle.raffle_id}\n              value={raffle.raffle_id}\n              onClick={() => handleChangeRaffle(raffle.raffle_id, index)}\n            >\n              {raffle.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Participantes\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={participant_idOpen}\n          onClose={handleCloseParticipant_id}\n          onOpen={handleOpenParticipant_id}\n          value={participant_id}\n          required={true}\n        >\n          {participants.map((participant, index) =>\n            participant.raffle_id === raffle_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={participant.participant_id}\n                onClick={() =>\n                  handleChangeParticipant(participant.participant_id, index)\n                }\n              >\n                {`${participant.number}-${\n                  participant.status === \"sold\" ? \"Pago\" : \"\"\n                }${participant.status === \"resevation\" ? \"Reservado\" : \"\"}${\n                  participant.status === \"free\" ? \"Livre\" : \"\"\n                }`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Ganhadores\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={winnerRaffle_idOpen}\n          onClose={handleCloseWinnerRaffle_id}\n          onOpen={handleOpenWinnerRaffle_id}\n          value={winnerRaffle_id}\n          required={true}\n        >\n          {winnerRaffle.map((winner, index) =>\n            winner.participants_raffle_participant_id === participant_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={winnerRaffle_id}\n                onClick={() => handleChangeWinnerDraw(winner.winner_id, index)}\n              >\n                {`ID GANHADOR: ${winner.winner_id}- ID PARTICIPANTE ${winner.participants_raffle_participant_id}`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <FileBase64 multiple={false} onDone={handlChangeDataImage} />\n      </FormControl>\n      <FormControl fullWidth required={false} className={classes.margin}>\n        <TextField\n          required={false}\n          onChange={(element) => setVideo(element.target.value)}\n          value={video}\n          id=\"outlined-basic\"\n          label=\"Youtube(URL)\"\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Atualizar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport api, { URL } from \"../../../services/api\";\nimport { IRaffles, IParticipants_Ruffle, IWinner_Raffle } from \"../../../types\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\nexport default function Delete() {\n  const classes = useStyles();\n  const [raffles, setRaffles] = useState<IRaffles[]>([]);\n  const [raffle_id, setRaffle_Id] = useState<number | undefined>(1);\n  const [participants, setParticipants] = useState<IParticipants_Ruffle[]>([]);\n  const [participant_id, setParticiapant_id] = useState<number | undefined>();\n  const [winnerRaffle_id, setWinner_id] = useState<number | undefined>();\n  const [winnerRaffle, setWinnerRaffle] = useState<IWinner_Raffle[]>([]);\n  const [response, setResponse] = React.useState<JSX.Element>();\n  const [raffle_idOpen, setRaffle_idOpen] = React.useState(false);\n  const [participant_idOpen, setParticipant_idOpen] = useState(false);\n  const [winnerRaffle_idOpen, setWinnerRaffle_idOpen] = useState(false);\n\n  const handleChangeRaffle = (id: number | undefined, index: number) => {\n    setRaffle_Id(id);\n  };\n\n  const handleChangeParticipant = (id: number | undefined, index: number) => {\n    setParticiapant_id(id);\n  };\n\n  const handleChangeWinnerRaffle = (id: number | undefined, index: number) => {\n    setWinner_id(id);\n  };\n\n  useEffect(() => {\n    async function getRaffles() {\n      const { data } = await api.get(\"/raffles\");\n\n      setRaffles(data);\n    }\n    getRaffles();\n  }, []);\n  useEffect(() => {\n    async function getWinnerRaffles() {\n      const { data } = await api.get(\"/winners_raffles\");\n\n      setWinnerRaffle(data);\n    }\n    getWinnerRaffles();\n  }, []);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_raffles_quotas?raffle_id=${raffle_id}`\n      );\n\n      setParticipants(data[0]);\n    }\n    getParticipants();\n  }, [raffle_id]);\n\n  const handleCloseRaffle_id = () => {\n    setRaffle_idOpen(false);\n  };\n\n  const handleOpenDraw_id = () => {\n    setRaffle_idOpen(true);\n  };\n\n  const handleCloseParticipant_id = () => {\n    setParticipant_idOpen(false);\n  };\n\n  const handleOpenParticipant_id = () => {\n    setParticipant_idOpen(true);\n  };\n\n  const handleCloseWinnerRaffle_id = () => {\n    setWinnerRaffle_idOpen(false);\n  };\n\n  const handleOpenWinnerDraw_id = () => {\n    setWinnerRaffle_idOpen(true);\n  };\n\n  async function sendApi() {\n    const response = await fetch(URL + \"/winner_raffle\", {\n      body: JSON.stringify({\n        winner_id: winnerRaffle_id,\n        participants_raffle_participant_id: participant_id,\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n      },\n      method: \"DELETE\",\n    });\n    const data = await response.json();\n\n    if (data === \"Falhou em deletar o ganhador\") {\n      setResponse(<Alert severity=\"error\">{data}</Alert>);\n    } else if (data === \"Sucesso em deletar ganhador\") {\n      setResponse(<Alert severity=\"success\">{data}</Alert>);\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate={false}\n      onSubmit={(event) => event.preventDefault()}\n      autoComplete=\"off\"\n    >\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Rifa</InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={raffle_idOpen}\n          onClose={handleCloseRaffle_id}\n          onOpen={handleOpenDraw_id}\n          value={raffle_id}\n          required={true}\n        >\n          {raffles.map((raffle, index) => (\n            <MenuItem\n              key={raffle.raffle_id}\n              value={raffle.raffle_id}\n              onClick={() => handleChangeRaffle(raffle.raffle_id, index)}\n            >\n              {raffle.title}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Participantes\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={participant_idOpen}\n          onClose={handleCloseParticipant_id}\n          onOpen={handleOpenParticipant_id}\n          value={participant_id}\n          required={true}\n        >\n          {participants.map((participant, index) =>\n            participant.raffle_id === raffle_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={participant.participant_id}\n                onClick={() =>\n                  handleChangeParticipant(participant.participant_id, index)\n                }\n              >\n                {`${participant.number}-${\n                  participant.status === \"sold\" ? \"Pago\" : \"\"\n                }${participant.status === \"resevation\" ? \"Reservado\" : \"\"}${\n                  participant.status === \"free\" ? \"Livre\" : \"\"\n                }`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Ganhadores\n        </InputLabel>\n        <Select\n          style={{ width: \"200px\" }}\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={winnerRaffle_idOpen}\n          onClose={handleCloseWinnerRaffle_id}\n          onOpen={handleOpenWinnerDraw_id}\n          value={winnerRaffle_id}\n          required={true}\n        >\n          {winnerRaffle.map((winner, index) =>\n            winner.participants_raffle_participant_id === participant_id ? (\n              <MenuItem\n                key={Math.random() * 9999}\n                value={winnerRaffle_id}\n                onClick={() =>\n                  handleChangeWinnerRaffle(winner.winner_id, index)\n                }\n              >\n                {`ID GANHADOR: ${winner.winner_id}- ID PARTICIPANTE ${winner.participants_raffle_participant_id}`}\n              </MenuItem>\n            ) : (\n              <div key={Math.random() * 9999} style={{ display: \"none\" }}></div>\n            )\n          )}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={sendApi}\n          style={{ width: \"200px\" }}\n          className={classes.button}\n        >\n          Deletar\n        </Button>\n      </FormControl>\n      {response}\n    </form>\n  );\n}\n","import styled, { createGlobalStyle } from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n\n  #pages {\n    width: 100% !important;\n    display: flex;\n    align-items: center;\n  }\n\n  table {\n    font-family: \"Trebuchet MS\", Arial, Helvetica, sans-serif;\n    border-collapse: collapse;\n    width: 100%;\n  }\n\n  table td,\n  table th {\n    border: 1px solid #ddd;\n    padding: 8px;\n  }\n\n  table tr:nth-child(even) {\n    background-color: #f2f2f2;\n  }\n\n  table tr:hover {\n    background-color: #ddd;\n  }\n\n  table th {\n    padding-top: 12px;\n    padding-bottom: 12px;\n    text-align: left;\n    background-color: #3f51b5;\n    color: white;\n  }\n`;\nexport const Caption = styled.caption`\n  font-family: Roboto, sans-serif;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const ContainerPrint = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: center;\n`;\n\nexport const GlobalCSSPRINT = createGlobalStyle`\n  @media print { \n    #root > div > div { \n      display:none;\n    }\n    #root > div > header { \n      display:none;\n    }\n    \n    #button-print { \n      display: none;\n    }\n    #draw-select{\n      display: none;\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Select from \"@material-ui/core/Select\";\nimport api from \"../../../services/api\";\nimport {\n  IDraw,\n  Ijoin_winners_participants_users_quotas_draw,\n} from \"../../../types\";\nimport { Container, Caption, ContainerPrint, GlobalCSSPRINT } from \"./styles\";\nimport Printer, { print } from \"react-pdf-print\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      display: \"block\",\n      marginTop: theme.spacing(2),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n  })\n);\n\nconst ids = [\"1\"];\n\nexport default function Draws() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [draws, setDraws] = useState<IDraw[]>([]);\n  const [participantsDraw, setParticipantsDraw] = useState<\n    Ijoin_winners_participants_users_quotas_draw[]\n  >([]);\n  const [draw_id, setDraw_id] = useState<number>(1);\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(`/draws`);\n      setDraws(data);\n    }\n    getDraws();\n  }, [draw_id]);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_draws_quotas?draw_id=${draw_id}`\n      );\n      setParticipantsDraw(data[0]);\n    }\n    getParticipants();\n  }, [draw_id]);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDraw_id(event.target.value as number);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <GlobalCSSPRINT />\n      <Container>\n        <FormControl id=\"draw-select\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Sorteio\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={draw_id}\n            onChange={handleChange}\n          >\n            {draws.map((draw) => (\n              <MenuItem key={draw.draw_id} value={draw.draw_id}>\n                {draw.title}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <ContainerPrint>\n          <Printer id=\"print\">\n            <div id=\"page\" style={{ width: \"100%\" }}>\n              <table id={\"1\"}>\n                <Caption>RELATÓRIO DE SORTEIOS | PILOTANDO PRÊMIOS </Caption>\n                <tr>\n                  <th>NOME</th>\n                  <th>COTA</th>\n                </tr>\n                {participantsDraw.map((participant) => (\n                  <tr>\n                    <td>{participant.name}</td>\n                    <td>{participant.number}</td>\n                  </tr>\n                ))}\n              </table>\n            </div>\n          </Printer>\n        </ContainerPrint>\n        <Button\n         id=\"button-print\"\n          fullWidth={true}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => window.print()}\n          value=\"Stampa\"\n        >\n          Gerar Pdf\n        </Button>\n      </Container>\n    </>\n  );\n}\n","import styled,{createGlobalStyle} from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  \n\n  #pages {\n    width: 100% !important;\n    display:flex;\n    align-items:center;\n  }\n  #page {\n    width: 100% !important;\n    \n  }\n  table {\n    font-family: \"Trebuchet MS\", Arial, Helvetica, sans-serif;\n    border-collapse: collapse;\n    width: 100%;\n  }\n\n  table td,\n  table th {\n    border: 1px solid #ddd;\n    padding: 8px;\n  }\n\n  table tr:nth-child(even) {\n    background-color: #f2f2f2;\n  }\n\n  table tr:hover {\n    background-color: #ddd;\n  }\n\n  table th {\n    padding-top: 12px;\n    padding-bottom: 12px;\n    text-align: left;\n    background-color: #3f51b5;\n    color: white;\n  }\n`;\nexport const Caption = styled.caption`\n  font-family: Roboto, sans-serif;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const ContainerPrint = styled.div `\n    display:flex;\n    align-items:center;\n    width: 100%;\n    justify-content: center;\n    \n `\n export const GlobalCSSPRINT = createGlobalStyle`\n @media print { \n   #root > div > div { \n     display:none;\n   }\n   #root > div > header { \n     display:none;\n   }\n   \n   #button-print { \n     display: none;\n   }\n   #raffle-select{\n     display: none;\n   }\n }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Select from \"@material-ui/core/Select\";\nimport api from \"../../../services/api\";\nimport {\n  Ijoin_raffles_participants_users_quotas_raffles,\n  IRaffles,\n} from \"../../../types\";\nimport { Container, Caption, ContainerPrint, GlobalCSSPRINT } from \"./styles\";\nimport Printer, { print } from \"react-pdf-print\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      display: \"block\",\n      marginTop: theme.spacing(2),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n  })\n);\n\nconst ids = [\"1\"];\n\nexport default function Raffles() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [raffles, setRaffles] = useState<IRaffles[]>([]);\n  const [participantsDraw, setParticipantsDraw] = useState<\n    Ijoin_raffles_participants_users_quotas_raffles[]\n  >([]);\n  const [raffle_id, setRaffle_id] = useState<number>(1);\n\n  useEffect(() => {\n    async function getRaffles() {\n      const { data } = await api.get(`/raffles`);\n      setRaffles(data);\n    }\n    getRaffles();\n  }, [raffle_id]);\n\n  useEffect(() => {\n    async function getParticipants() {\n      const { data } = await api.get(\n        `/join_participants_raffles_quotas?raffle_id=${raffle_id}`\n      );\n      setParticipantsDraw(data[0]);\n    }\n    getParticipants();\n  }, [raffle_id]);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setRaffle_id(event.target.value as number);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <GlobalCSSPRINT />\n      <Container>\n        <FormControl id=\"raffle-select\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Rifas</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={raffle_id}\n            onChange={handleChange}\n          >\n            {raffles.map((raffle) => (\n              <MenuItem key={raffle.raffle_id} value={raffle.raffle_id}>\n                {raffle.title}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <ContainerPrint>\n          <Printer id=\"print\">\n            <div id=\"page\" style={{ width: \"100%\" }}>\n              <table id={ids[0]}>\n                <Caption>RELATÓRIO DE RIFAS | PILOTANDO PRÊMIOS </Caption>\n                <tr>\n                  <th>NOME</th>\n                  <th>COTA</th>\n                </tr>\n                {participantsDraw.map((participant) => (\n                  <tr>\n                    <td>{participant.name}</td>\n                    <td>{participant.number}</td>\n                  </tr>\n                ))}\n              </table>\n            </div>\n          </Printer>\n        </ContainerPrint>\n        <Button\n          id=\"button-print\"\n          fullWidth={true}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => window.print()}\n          value=\"Stampa\"\n        >\n          Gerar Pdf\n        </Button>\n      </Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ConfirmationNumberIcon from \"@material-ui/icons/ConfirmationNumber\";\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport LensIcon from \"@material-ui/icons/Lens\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport { useDispatch } from \"react-redux\";\nimport { Action } from \"../../store/screen\";\n\nimport DrawList from \"../Draw/List\";\nimport DrawCreate from \"../Draw/Create\";\nimport DrawUpdate from \"../Draw/Update\";\nimport DrawDelete from \"../Draw/Delete\";\n\nimport RaffleList from \"../Raffle/List\";\nimport RaffleCreate from \"../Raffle/Create\";\nimport RaffleUpdate from \"../Raffle/Update\";\nimport RaffleDelete from \"../Raffle/Delete\";\n\nimport ImageList from \"../Images/List\";\nimport ImageCreate from \"../Images/Create\";\nimport ImageUpdate from \"../Images/Update\";\nimport ImageDelete from \"../Images/Delete\";\n\nimport QuotasDrawList from \"../Quotas_Draw/List\";\nimport QuotasDrawCreate from \"../Quotas_Draw/Create\";\nimport QuotasDrawUpdate from \"../Quotas_Draw/Update\";\nimport QuotasDrawDelete from \"../Quotas_Draw/Delete\";\n\nimport Quotas_RaffleList from \"../Quotas_Raffle/List\";\nimport Quotas_RaffleCreate from \"../Quotas_Raffle/Create\";\nimport Quotas_RaffleUpdate from \"../Quotas_Raffle/Update\";\nimport Quotas_RaffleDelete from \"../Quotas_Raffle/Delete\";\n\nimport BusinessList from \"../Business/List\";\nimport BusinessCreate from \"../Business/Create\";\nimport BusinessUpdate from \"../Business/Update\";\nimport BusinessDelete from \"../Business/Delete\";\n\nimport BanksAccountList from \"../BanksAccount/List\";\nimport BanksAccountCreate from \"../BanksAccount/Create\";\nimport BanksAccountUpdate from \"../BanksAccount/Update\";\nimport BanksAccountDelete from \"../BanksAccount/Delete\";\n\nimport UsersCreate from \"../Users/Create\";\nimport UsersUpdate from \"../Users/Update\";\nimport UsersDelete from \"../Users/Delete\";\n\nimport ParticipantsDrawCreate from \"../ParticipantsDraws/Create\";\nimport ParticipantsDrawUpdate from \"../ParticipantsDraws/Update\";\nimport ParticipantsDrawDelete from \"../ParticipantsDraws/Delete\";\n\nimport WinnerDrawList from \"../WinnerDraw/List\";\nimport WinnerDrawCreate from \"../WinnerDraw/Create\";\nimport WinnerDrawUpdate from \"../WinnerDraw/Update\";\nimport WinnerDrawDelete from \"../WinnerDraw/Delete\";\n\nimport ParticipantsRaffleCreate from \"../ParticipantsRaffles/Create\";\nimport ParticipantsRaffleUpdate from \"../ParticipantsRaffles/Upate\";\nimport ParticipantsRaffleDelete from \"../ParticipantsRaffles/Delete\";\n\nimport WinnerRaffleList from \"../WinnerRaffle/List\";\nimport WinnerRaffleCreate from \"../WinnerRaffle/Create\";\nimport WinnerRaffleUpdate from \"../WinnerRaffle/Update\";\nimport WinnerRaffleDelete from \"../WinnerRaffle/Delete\";\n\nimport ReportsDraw from \"../Reports/Draws\"\nimport ReportsRaffle from \"../Reports/Raffles\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(2),\n  },\n}));\nexport default function MenuAdmin() {\n  const classes = useStyles();\n  const [drawsOpen, setDrawsOpen] = React.useState(false);\n  const [rafflesOpen, setRafflesOpen] = React.useState(false);\n  const [winnersDraw, setWinnersDraw] = React.useState(false);\n  const [winnersRaffle, setWinnersRaffle] = React.useState(false);\n  const [participantsDraw, setParticipantsDraw] = React.useState(false);\n  const [participantsRaffle, setParticipantsRaffle] = React.useState(false);\n  const [reports, setReports] = React.useState(false);\n  const [quotasDraws, setQuotasDraws] = React.useState(false);\n  const [quotasRaffles, setQuotasRaffles] = React.useState(false);\n  const [business, setBusiness] = React.useState(false);\n  const [images, setImages] = React.useState(false);\n  const [users, setUsers] = React.useState(false);\n  const [banks, setBanks] = React.useState(false);\n  const usertype:any = JSON.parse(`${sessionStorage.getItem(\"data\")}`)?.type\n\n  const dispatch = useDispatch();\n\n  const handleClickParticipantsDraw = () => {\n    setParticipantsDraw(!participantsDraw);\n  };\n\n  const handleClickParticipantsRaffle = () => {\n    setParticipantsRaffle(!participantsRaffle);\n  };\n\n  const handleClickDraws = () => {\n    setDrawsOpen(!drawsOpen);\n  };\n  const handleClickRaffles = () => {\n    setRafflesOpen(!rafflesOpen);\n  };\n\n  const handleClickWinnersDrawRaffles = () => {\n    setWinnersDraw(!winnersDraw);\n  };\n\n  const handleClickWinnersRaffles = () => {\n    setWinnersRaffle(!winnersRaffle);\n  };\n\n  const handleClickReports = () => {\n    setReports(!reports);\n  };\n\n  const handleClickQuotasDraw = () => {\n    setQuotasDraws(!quotasDraws);\n  };\n\n  const handleClickQuotasRaffles = () => {\n    setQuotasRaffles(!quotasRaffles);\n  };\n\n  const handleClickBusiness = () => {\n    setBusiness(!business);\n  };\n  const handleClickImages = () => {\n    setImages(!images);\n  };\n\n  const handleClickUsers = () => {\n    setUsers(!users);\n  };\n\n  const handleClickBanks = () => {\n    setBanks(!banks);\n  };\n\n  function handlePageDrawCreate() {\n    dispatch<Action>({ type: \"set\", state: DrawCreate });\n  }\n  function handlePageDrawUpdate() {\n    dispatch<Action>({ type: \"set\", state: DrawUpdate });\n  }\n  function handlePageDrawDelete() {\n    dispatch<Action>({ type: \"set\", state: DrawDelete });\n  }\n  function handlePageDrawList() {\n    dispatch<Action>({ type: \"set\", state: DrawList });\n  }\n\n  function handlePageRaffleCreate() {\n    dispatch<Action>({ type: \"set\", state: RaffleCreate });\n  }\n  function handlePageRaffleUpdate() {\n    dispatch<Action>({ type: \"set\", state: RaffleUpdate });\n  }\n  function handlePageRaffleDelete() {\n    dispatch<Action>({ type: \"set\", state: RaffleDelete });\n  }\n  function handlePageRaffleList() {\n    dispatch<Action>({ type: \"set\", state: RaffleList });\n  }\n  function handlePageImageCreate() {\n    dispatch<Action>({ type: \"set\", state: ImageCreate });\n  }\n  function handlePageImageUpdate() {\n    dispatch<Action>({ type: \"set\", state: ImageUpdate });\n  }\n  function handlePageImageDelete() {\n    dispatch<Action>({ type: \"set\", state: ImageDelete });\n  }\n  function handlePageImageList() {\n    dispatch<Action>({ type: \"set\", state: ImageList });\n  }\n  function handlePageQuotasDrawCreate() {\n    dispatch<Action>({ type: \"set\", state: QuotasDrawCreate });\n  }\n  function handlePageQuotasDrawUpdate() {\n    dispatch<Action>({ type: \"set\", state: QuotasDrawUpdate });\n  }\n\n  function handlePageQuotasDrawDelete() {\n    dispatch<Action>({ type: \"set\", state: QuotasDrawDelete });\n  }\n  function handlePageQuotasDrawList() {\n    dispatch<Action>({ type: \"set\", state: QuotasDrawList });\n  }\n  function handlePageQuotas_RaffleCreate() {\n    dispatch<Action>({ type: \"set\", state: Quotas_RaffleCreate });\n  }\n  function handlePageQuotas_RaffleUpdate() {\n    dispatch<Action>({ type: \"set\", state: Quotas_RaffleUpdate });\n  }\n\n  function handlePageQuotas_RaffleDelete() {\n    dispatch<Action>({ type: \"set\", state: Quotas_RaffleDelete });\n  }\n\n  function handlePageQuotas_RaffleList() {\n    dispatch<Action>({ type: \"set\", state: Quotas_RaffleList });\n  }\n\n  function handleBusinessCreate() {\n    dispatch<Action>({ type: \"set\", state: BusinessCreate });\n  }\n\n  function handleBusinessUpdate() {\n    dispatch<Action>({ type: \"set\", state: BusinessUpdate });\n  }\n  function handleBusinessDelete() {\n    dispatch<Action>({ type: \"set\", state: BusinessDelete });\n  }\n\n  function handleBusinessList() {\n    dispatch<Action>({ type: \"set\", state: BusinessList });\n  }\n  function handleBanksAccountCreate() {\n    dispatch<Action>({ type: \"set\", state: BanksAccountCreate });\n  }\n  function handleBanksAccountUpdate() {\n    dispatch<Action>({ type: \"set\", state: BanksAccountUpdate });\n  }\n\n  function handleBanksAccountDelete() {\n    dispatch<Action>({ type: \"set\", state: BanksAccountDelete });\n  }\n  function handleBanksAccountList() {\n    dispatch<Action>({ type: \"set\", state: BanksAccountList });\n  }\n\n  function handleUsersCreate() {\n    dispatch<Action>({ type: \"set\", state: UsersCreate });\n  }\n\n  function handleUsersUpdate() {\n    dispatch<Action>({ type: \"set\", state: UsersUpdate });\n  }\n  function handleUsersDelete() {\n    dispatch<Action>({ type: \"set\", state: UsersDelete });\n  }\n\n  function handleParticipantsDrawCreate() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsDrawCreate });\n  }\n\n  function handleParticipantsDrawUpdate() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsDrawUpdate });\n  }\n\n  function handleParticipantsDrawDelete() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsDrawDelete });\n  }\n  function handleWinnerDrawCreate() {\n    dispatch<Action>({ type: \"set\", state: WinnerDrawCreate });\n  }\n\n  function handleWinnerDrawUpdate() {\n    dispatch<Action>({ type: \"set\", state: WinnerDrawUpdate });\n  }\n\n  function handleWinnerDrawDelete() {\n    dispatch<Action>({ type: \"set\", state: WinnerDrawDelete });\n  }\n\n  function handleWinnerDrawList() {\n    dispatch<Action>({ type: \"set\", state: WinnerDrawList });\n  }\n\n  function handleParticipantsRaffleCreate() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsRaffleCreate });\n  }\n\n  function handleParticipantsRaffleUpdate() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsRaffleUpdate });\n  }\n\n  function handleParticipantsRaffleDelete() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsRaffleDelete });\n  }\n\n  function handleWinnerRaffleList() {\n    dispatch<Action>({ type: \"set\", state: WinnerRaffleList });\n  }\n  function handleWinnerRaffleCreate() {\n    dispatch<Action>({ type: \"set\", state: WinnerRaffleCreate });\n  }\n  function handleWinnerRaffleUpdate() {\n    dispatch<Action>({ type: \"set\", state: WinnerRaffleUpdate });\n  }\n  function handleWinnerRaffleDelete() {\n    dispatch<Action>({ type: \"set\", state: WinnerRaffleDelete });\n  }\n  function handleReportsDraw() {\n    dispatch<Action>({ type: \"set\", state: ReportsDraw });\n  }\n  function handleReportsRaffle() {\n    dispatch<Action>({ type: \"set\", state: ReportsRaffle });\n  }\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n      style={{display: `${usertype === \"admin\"? \"block\":\"none\" }`}}\n    >\n      <ListItem button onClick={handleClickDraws}>\n        <ListItemIcon>\n          <ConfirmationNumberIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Sorteios\" />{\" \"}\n        {drawsOpen ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={drawsOpen} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageDrawList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Listar Sorteios\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageDrawCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Sorteio\" />\n        </ListItem>\n        <ListItem button className={classes.nested}>\n          <ListItemIcon></ListItemIcon>\n          <ListItemText\n            primary=\"Atualizar Sorteio\"\n            onClick={handlePageDrawUpdate}\n          />\n        </ListItem>\n\n        <ListItem button className={classes.nested}>\n          <ListItemIcon></ListItemIcon>\n          <ListItemText\n            primary=\"Deletar Sorteio\"\n            onClick={handlePageDrawDelete}\n          />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickRaffles}>\n        <ListItemIcon>\n          <ConfirmationNumberIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Rifas\" />{\" \"}\n        {rafflesOpen ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={rafflesOpen} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageRaffleList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Listar Rifas\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageRaffleCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Rifa\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageRaffleUpdate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Atualizar Rifa\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageRaffleDelete}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Deletar Rifa\" />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickParticipantsDraw}>\n        <ListItemIcon>\n          <PersonIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"P de Sorteios\" />{\" \"}\n        {participantsDraw ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={participantsDraw} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleParticipantsDrawCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Participantes\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleParticipantsDrawUpdate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Atualizar Participantes\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleParticipantsDrawDelete}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Deletar Participantes\" />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickWinnersDrawRaffles}>\n        <ListItemIcon>\n          <PersonIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"G de Sorteios\" />{\" \"}\n        {winnersDraw ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={winnersDraw} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleWinnerDrawList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Listar Ganhadores\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleWinnerDrawCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Ganhador\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleWinnerDrawUpdate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Atualizar Ganhador\" />\n        </ListItem>\n        <ListItem button className={classes.nested}>\n          <ListItemIcon></ListItemIcon>\n          <ListItemText\n            primary=\"Deletar Ganhador\"\n            onClick={handleWinnerDrawDelete}\n          />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickQuotasDraw}>\n        <ListItemIcon>\n          <LensIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Cotas de Sorteios\" />{\" \"}\n        {quotasDraws ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={quotasDraws} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageQuotasDrawList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Listar Cotas\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageQuotasDrawCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Cota\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageQuotasDrawUpdate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Atualizar Cota\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageQuotasDrawDelete}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Deletar Cota\" />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickImages}>\n        <ListItemIcon>\n          <ImageIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Imagens\" />{\" \"}\n        {images ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={images} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageImageList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Listar Imagens\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageImageCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Imagem\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageImageUpdate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Atualizar Imagem\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageImageDelete}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Deletar Imagem\" />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickQuotasRaffles}>\n        <ListItemIcon>\n          <LensIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Cotas de Rifas\" />{\" \"}\n        {quotasRaffles ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={quotasRaffles} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageQuotas_RaffleList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Listar Cotas\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageQuotas_RaffleCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Cota\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageQuotas_RaffleUpdate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Atualizar Cota\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handlePageQuotas_RaffleDelete}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Deletar Cota\" />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickParticipantsRaffle}>\n        <ListItemIcon>\n          <PersonIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"P de Rifas\" />{\" \"}\n        {participantsRaffle ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={participantsRaffle} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleParticipantsRaffleCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Participantes\" />\n        </ListItem>\n        <ListItem button className={classes.nested}>\n          <ListItemIcon></ListItemIcon>\n          <ListItemText\n            primary=\"Atualizar Participantes\"\n            onClick={handleParticipantsRaffleUpdate}\n          />\n        </ListItem>\n        <ListItem button className={classes.nested}>\n          <ListItemIcon></ListItemIcon>\n          <ListItemText\n            primary=\"Deletar Participantes\"\n            onClick={handleParticipantsRaffleDelete}\n          />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickWinnersRaffles}>\n        <ListItemIcon>\n          <PersonIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"G de Rifas\" />{\" \"}\n        {winnersRaffle ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={winnersRaffle} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleWinnerRaffleList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Listar Ganhadores\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleWinnerRaffleCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Ganhador\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleWinnerRaffleUpdate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Atualizar Ganhador\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleWinnerRaffleDelete}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Deletar Ganhador\" />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickUsers}>\n        <ListItemIcon>\n          <SupervisorAccountIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Usuarios\" />{\" \"}\n        {users ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={users} timeout=\"auto\" unmountOnExit>\n        <ListItem button className={classes.nested} onClick={handleUsersCreate}>\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Usuario\" />\n        </ListItem>\n        <ListItem button className={classes.nested}>\n          <ListItemIcon></ListItemIcon>\n          <ListItemText\n            primary=\"Atualizar Usuario\"\n            onClick={handleUsersUpdate}\n          />\n        </ListItem>\n        <ListItem button className={classes.nested}>\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Deletar Usuario\" onClick={handleUsersDelete} />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickBusiness}>\n        <ListItemIcon>\n          <BusinessIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Negócio\" />{\" \"}\n        {business ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={business} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleBusinessList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Listar Informações\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleBusinessCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Informações\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleBusinessUpdate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Atualizar Informações\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleBusinessDelete}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Deletar Informações\" />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickBanks}>\n        <ListItemIcon>\n          <AccountBalanceIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Contas Bancárias\" />{\" \"}\n        {banks ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={banks} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleBanksAccountList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Listar Contas\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleBanksAccountCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Cadastrar Conta\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleBanksAccountUpdate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Atualizar Conta\" />\n        </ListItem>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleBanksAccountDelete}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Deletar Conta\" />\n        </ListItem>\n      </Collapse>\n      <ListItem button onClick={handleClickReports}>\n        <ListItemIcon>\n          <DescriptionIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Ralatorios\" />{\" \"}\n        {reports ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={reports} timeout=\"auto\" unmountOnExit>\n        <ListItem button className={classes.nested} onClick={handleReportsDraw} >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Sorteios\" />\n        </ListItem>\n        <ListItem button className={classes.nested} onClick={handleReportsRaffle}>\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Rifas\" />\n        </ListItem>\n      </Collapse>\n      <ListItem\n          button\n          className={classes.nested}\n          onClick={handleBanksAccountDelete}\n        >\n          <ListItemIcon><ExitToApp/></ListItemIcon>\n          <a href=\"/\" style={{textDecoration: \"none\",color:\"black\"}} ><ListItemText primary=\"Sair\" /></a>\n        </ListItem>\n    </List>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nexport const CardItem = styled.div`\n  height: 166px;\n  margin: 10px 10px 10px 10px;\n  \n  -webkit-box-shadow: -1px -1px 22px -6px rgba(106, 143, 123, 1);\n  -moz-box-shadow: -1px -1px 22px -6px rgba(106, 143, 123, 1);\n  box-shadow: -1px -1px 22px -6px rgba(106, 143, 123, 1);\n  display: flex;\n  flex-direction: column;\n  padding: 10px 10px 10px 10px;\n`;\nexport const Title = styled.h2`\n  font-family: Roboto, sans-serif;\n`;\nexport const SubTitle = styled.h4`\n  font-family: Roboto, sans-serif;\n`;\n\nexport const RowText = styled.p`\n  font-family: Roboto, sans-serif;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport api from \"../../services/api\";\nimport {\n  IBusiness,\n  Ijoin_raffles_participants_users_quotas_raffles_by_user_id,\n  Ijoin_winners_participants_users_quotas_draw_by_user_id,\n} from \"../../types\";\nimport { Container, CardItem, Title, SubTitle, RowText } from \"./styles\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport BanksAccount from \"../BanksAccount/List\";\nexport default function MyShopping() {\n  const [participantsRaffles, setParticipantsRaffles] = useState<\n    Ijoin_raffles_participants_users_quotas_raffles_by_user_id[]\n  >([]);\n  const [participantsDraws, setParticipantsDraws] = useState<\n    Ijoin_winners_participants_users_quotas_draw_by_user_id[]\n  >([]);\n  const months = [\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"10\",\n    \"11\",\n    \"12\",\n  ];\n\n  const [business, setBusiness] = useState<IBusiness>();\n\n  useEffect(() => {\n    async function getBusiness() {\n      const { data } = await api.get(\"/business\");\n      setBusiness(data[0]);\n    }\n    getBusiness();\n  }, []);\n  useEffect(() => {\n    async function getParticipantsRaffles() {\n      const { data } = await api.get(\n        `/join_participants_raffles_quotas/${\n          JSON.parse(`${sessionStorage.getItem(\"data\")}`)?.user_id\n        }`\n      );\n      setParticipantsRaffles(data[0]);\n    }\n    getParticipantsRaffles();\n  }, []);\n  useEffect(() => {\n    async function getParticipantsDraws() {\n      const { data } = await api.get(\n        `/join_participants_draws_quotas/${\n          JSON.parse(`${sessionStorage.getItem(\"data\")}`)?.user_id\n        }`\n      );\n      setParticipantsDraws(data[0]);\n    }\n    getParticipantsDraws();\n  }, []);\n  console.log(business);\n  return (\n    <Container>\n      {participantsDraws.map((participant) => (\n        <CardItem>\n          <Title>{participant.title}</Title>\n          <SubTitle>{participant.subtitle}</SubTitle>\n          <RowText>\n            Resv. em{\" \"}\n            {`${new Date(`${participant.created_at}`).getUTCDate()}/${\n              months[new Date(`${participant.created_at}`).getUTCMonth()]\n            }/${new Date(`${participant.created_at}`).getUTCFullYear()}`}\n          </RowText>\n          <RowText>\n            Situação: {participant.status === \"resevation\" ? \"Reservado\" : \"\"}\n            {participant.status === \"sold\" ? \"Pagamento Confirmado\" : \"\"}\n          </RowText>\n          <RowText>Cota:{participant.number}</RowText>\n          <RowText>#SORTEIO #BOA SORTE </RowText>\n          <RowText>\n            <a\n              href={`https://api.whatsapp.com/send?phone=${business?.phone}&text=Olá pilotando prêmios, segue a cota ${participant.number} do sorteio *${participant.title}*`}\n            >\n              <WhatsAppIcon style={{ color: \"green\" }} />\n            </a>\n          </RowText>\n        </CardItem>\n      ))}\n      {participantsRaffles.map((participant) => (\n        <CardItem>\n          <Title>{participant.title}</Title>\n          <SubTitle>{participant.subtitle}</SubTitle>\n          <RowText>\n            Resv. em{\" \"}\n            {`${new Date(`${participant.created_at}`).getUTCDate()}/${\n              months[new Date(`${participant.created_at}`).getUTCMonth()]\n            }/${new Date(`${participant.created_at}`).getUTCFullYear()}`}\n          </RowText>\n          <RowText>\n            Situação: {participant.status === \"resevation\" ? \"Reservado\" : \"\"}\n            {participant.status === \"sold\" ? \"Pagamento Confirmado\" : \"\"}\n          </RowText>\n          <RowText>Cota:{participant.number}</RowText>\n          <RowText>#RIFAS #BOA SORTE</RowText>\n          <RowText>\n            <a\n              href={`https://api.whatsapp.com/send?phone=${business?.phone}&text=Olá pilotando prêmios, segue a cota ${participant.number} da rifa *${participant.title}*`}\n            >\n              <WhatsAppIcon style={{ color: \"green\" }} />\n            </a>\n          </RowText>\n        </CardItem>\n      ))}\n      <BanksAccount />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ConfirmationNumberIcon from \"@material-ui/icons/ConfirmationNumber\";\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport LensIcon from \"@material-ui/icons/Lens\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport { useDispatch } from \"react-redux\";\nimport { Action } from \"../../store/screen\";\n\nimport DrawList from \"../Draw/List\";\nimport DrawCreate from \"../Draw/Create\";\nimport DrawUpdate from \"../Draw/Update\";\nimport DrawDelete from \"../Draw/Delete\";\n\nimport RaffleList from \"../Raffle/List\";\nimport RaffleCreate from \"../Raffle/Create\";\nimport RaffleUpdate from \"../Raffle/Update\";\nimport RaffleDelete from \"../Raffle/Delete\";\n\nimport ImageList from \"../Images/List\";\nimport ImageCreate from \"../Images/Create\";\nimport ImageUpdate from \"../Images/Update\";\nimport ImageDelete from \"../Images/Delete\";\n\nimport QuotasDrawList from \"../Quotas_Draw/List\";\nimport QuotasDrawCreate from \"../Quotas_Draw/Create\";\nimport QuotasDrawUpdate from \"../Quotas_Draw/Update\";\nimport QuotasDrawDelete from \"../Quotas_Draw/Delete\";\n\nimport Quotas_RaffleList from \"../Quotas_Raffle/List\";\nimport Quotas_RaffleCreate from \"../Quotas_Raffle/Create\";\nimport Quotas_RaffleUpdate from \"../Quotas_Raffle/Update\";\nimport Quotas_RaffleDelete from \"../Quotas_Raffle/Delete\";\n\nimport BusinessList from \"../Business/List\";\nimport BusinessCreate from \"../Business/Create\";\nimport BusinessUpdate from \"../Business/Update\";\nimport BusinessDelete from \"../Business/Delete\";\n\nimport BanksAccountList from \"../BanksAccount/List\";\nimport BanksAccountCreate from \"../BanksAccount/Create\";\nimport BanksAccountUpdate from \"../BanksAccount/Update\";\nimport BanksAccountDelete from \"../BanksAccount/Delete\";\n\nimport UsersCreate from \"../Users/Create\";\nimport UsersUpdate from \"../Users/Update\";\nimport UsersDelete from \"../Users/Delete\";\n\nimport ParticipantsDrawCreate from \"../ParticipantsDraws/Create\";\nimport ParticipantsDrawUpdate from \"../ParticipantsDraws/Update\";\nimport ParticipantsDrawDelete from \"../ParticipantsDraws/Delete\";\n\nimport WinnerDrawList from \"../WinnerDraw/List\";\nimport WinnerDrawCreate from \"../WinnerDraw/Create\";\nimport WinnerDrawUpdate from \"../WinnerDraw/Update\";\nimport WinnerDrawDelete from \"../WinnerDraw/Delete\";\n\nimport ParticipantsRaffleCreate from \"../ParticipantsRaffles/Create\";\nimport ParticipantsRaffleUpdate from \"../ParticipantsRaffles/Upate\";\nimport ParticipantsRaffleDelete from \"../ParticipantsRaffles/Delete\";\n\nimport WinnerRaffleList from \"../WinnerRaffle/List\";\nimport WinnerRaffleCreate from \"../WinnerRaffle/Create\";\nimport WinnerRaffleUpdate from \"../WinnerRaffle/Update\";\nimport WinnerRaffleDelete from \"../WinnerRaffle/Delete\";\n\nimport ReportsDraw from \"../Reports/Draws\";\nimport ReportsRaffle from \"../Reports/Raffles\";\n\nimport MyShopping from '../MyShopping'\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(2),\n  },\n}));\nexport default function MenuComum() {\n  const classes = useStyles();\n  const [drawsOpen, setDrawsOpen] = React.useState(false);\n  const [rafflesOpen, setRafflesOpen] = React.useState(false);\n  const [winnersDraw, setWinnersDraw] = React.useState(false);\n  const [winnersRaffle, setWinnersRaffle] = React.useState(false);\n  const [participantsDraw, setParticipantsDraw] = React.useState(false);\n  const [participantsRaffle, setParticipantsRaffle] = React.useState(false);\n  const [reports, setReports] = React.useState(false);\n  const [quotasDraws, setQuotasDraws] = React.useState(false);\n  const [quotasRaffles, setQuotasRaffles] = React.useState(false);\n  const [business, setBusiness] = React.useState(false);\n  const [images, setImages] = React.useState(false);\n  const [users, setUsers] = React.useState(false);\n  const [banks, setBanks] = React.useState(false);\n  const usertype: any = JSON.parse(`${sessionStorage.getItem(\"data\")}`)?.type;\n\n  const dispatch = useDispatch();\n\n  const handleClickParticipantsDraw = () => {\n    setParticipantsDraw(!participantsDraw);\n  };\n\n  const handleClickParticipantsRaffle = () => {\n    setParticipantsRaffle(!participantsRaffle);\n  };\n\n  const handleClickDraws = () => {\n    setDrawsOpen(!drawsOpen);\n  };\n  const handleClickRaffles = () => {\n    setRafflesOpen(!rafflesOpen);\n  };\n\n  const handleClickWinnersDrawRaffles = () => {\n    setWinnersDraw(!winnersDraw);\n  };\n\n  const handleClickWinnersRaffles = () => {\n    setWinnersRaffle(!winnersRaffle);\n  };\n\n  const handleClickReports = () => {\n    setReports(!reports);\n  };\n\n  const handleClickQuotasDraw = () => {\n    setQuotasDraws(!quotasDraws);\n  };\n\n  const handleClickQuotasRaffles = () => {\n    setQuotasRaffles(!quotasRaffles);\n  };\n\n  const handleClickBusiness = () => {\n    setBusiness(!business);\n  };\n  const handleClickImages = () => {\n    setImages(!images);\n  };\n\n  const handleClickUsers = () => {\n    setUsers(!users);\n  };\n\n  const handleClickBanks = () => {\n    setBanks(!banks);\n  };\n\n  function handlePageDrawCreate() {\n    dispatch<Action>({ type: \"set\", state: DrawCreate });\n  }\n  function handlePageDrawUpdate() {\n    dispatch<Action>({ type: \"set\", state: DrawUpdate });\n  }\n  function handlePageDrawDelete() {\n    dispatch<Action>({ type: \"set\", state: DrawDelete });\n  }\n  function handlePageDrawList() {\n    dispatch<Action>({ type: \"set\", state: DrawList });\n  }\n\n  function handlePageRaffleCreate() {\n    dispatch<Action>({ type: \"set\", state: RaffleCreate });\n  }\n  function handlePageRaffleUpdate() {\n    dispatch<Action>({ type: \"set\", state: RaffleUpdate });\n  }\n  function handlePageRaffleDelete() {\n    dispatch<Action>({ type: \"set\", state: RaffleDelete });\n  }\n  function handlePageRaffleList() {\n    dispatch<Action>({ type: \"set\", state: RaffleList });\n  }\n  function handlePageImageCreate() {\n    dispatch<Action>({ type: \"set\", state: ImageCreate });\n  }\n  function handlePageImageUpdate() {\n    dispatch<Action>({ type: \"set\", state: ImageUpdate });\n  }\n  function handlePageImageDelete() {\n    dispatch<Action>({ type: \"set\", state: ImageDelete });\n  }\n  function handlePageImageList() {\n    dispatch<Action>({ type: \"set\", state: ImageList });\n  }\n  function handlePageQuotasDrawCreate() {\n    dispatch<Action>({ type: \"set\", state: QuotasDrawCreate });\n  }\n  function handlePageQuotasDrawUpdate() {\n    dispatch<Action>({ type: \"set\", state: QuotasDrawUpdate });\n  }\n\n  function handlePageQuotasDrawDelete() {\n    dispatch<Action>({ type: \"set\", state: QuotasDrawDelete });\n  }\n  function handlePageQuotasDrawList() {\n    dispatch<Action>({ type: \"set\", state: QuotasDrawList });\n  }\n  function handlePageQuotas_RaffleCreate() {\n    dispatch<Action>({ type: \"set\", state: Quotas_RaffleCreate });\n  }\n  function handlePageQuotas_RaffleUpdate() {\n    dispatch<Action>({ type: \"set\", state: Quotas_RaffleUpdate });\n  }\n\n  function handlePageQuotas_RaffleDelete() {\n    dispatch<Action>({ type: \"set\", state: Quotas_RaffleDelete });\n  }\n\n  function handlePageQuotas_RaffleList() {\n    dispatch<Action>({ type: \"set\", state: Quotas_RaffleList });\n  }\n\n  function handleBusinessCreate() {\n    dispatch<Action>({ type: \"set\", state: BusinessCreate });\n  }\n\n  function handleBusinessUpdate() {\n    dispatch<Action>({ type: \"set\", state: BusinessUpdate });\n  }\n  function handleBusinessDelete() {\n    dispatch<Action>({ type: \"set\", state: BusinessDelete });\n  }\n\n  function handleBusinessList() {\n    dispatch<Action>({ type: \"set\", state: BusinessList });\n  }\n  function handleBanksAccountCreate() {\n    dispatch<Action>({ type: \"set\", state: BanksAccountCreate });\n  }\n  function handleBanksAccountUpdate() {\n    dispatch<Action>({ type: \"set\", state: BanksAccountUpdate });\n  }\n\n  function handleBanksAccountDelete() {\n    dispatch<Action>({ type: \"set\", state: BanksAccountDelete });\n  }\n  function handleBanksAccountList() {\n    dispatch<Action>({ type: \"set\", state: BanksAccountList });\n  }\n\n  function handleUsersCreate() {\n    dispatch<Action>({ type: \"set\", state: UsersCreate });\n  }\n\n  function handleUsersUpdate() {\n    dispatch<Action>({ type: \"set\", state: UsersUpdate });\n  }\n  function handleUsersDelete() {\n    dispatch<Action>({ type: \"set\", state: UsersDelete });\n  }\n\n  function handleParticipantsDrawCreate() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsDrawCreate });\n  }\n\n  function handleParticipantsDrawUpdate() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsDrawUpdate });\n  }\n\n  function handleParticipantsDrawDelete() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsDrawDelete });\n  }\n  function handleWinnerDrawCreate() {\n    dispatch<Action>({ type: \"set\", state: WinnerDrawCreate });\n  }\n\n  function handleWinnerDrawUpdate() {\n    dispatch<Action>({ type: \"set\", state: WinnerDrawUpdate });\n  }\n\n  function handleWinnerDrawDelete() {\n    dispatch<Action>({ type: \"set\", state: WinnerDrawDelete });\n  }\n\n  function handleWinnerDrawList() {\n    dispatch<Action>({ type: \"set\", state: WinnerDrawList });\n  }\n\n  function handleParticipantsRaffleCreate() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsRaffleCreate });\n  }\n\n  function handleParticipantsRaffleUpdate() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsRaffleUpdate });\n  }\n\n  function handleParticipantsRaffleDelete() {\n    dispatch<Action>({ type: \"set\", state: ParticipantsRaffleDelete });\n  }\n\n  function handleWinnerRaffleList() {\n    dispatch<Action>({ type: \"set\", state: WinnerRaffleList });\n  }\n  function handleWinnerRaffleCreate() {\n    dispatch<Action>({ type: \"set\", state: WinnerRaffleCreate });\n  }\n  function handleWinnerRaffleUpdate() {\n    dispatch<Action>({ type: \"set\", state: WinnerRaffleUpdate });\n  }\n  function handleWinnerRaffleDelete() {\n    dispatch<Action>({ type: \"set\", state: WinnerRaffleDelete });\n  }\n  function handleReportsDraw() {\n    dispatch<Action>({ type: \"set\", state: ReportsDraw });\n  }\n  function handleReportsRaffle() {\n    dispatch<Action>({ type: \"set\", state: ReportsRaffle });\n  }\n\n  function handleMyShopping(){\n    dispatch<Action>({ type: \"set\", state: MyShopping });\n\n  }\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n      style={{ display: `${usertype === \"comum\" ? \"block\" : \"none\"}` }}\n    >\n      <ListItem button onClick={handleClickParticipantsDraw}>\n        <ListItemIcon>\n          <PersonIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Sorteios\" />{\" \"}\n        {participantsDraw ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={participantsDraw} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleParticipantsDrawCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Participar\" />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickWinnersDrawRaffles}>\n        <ListItemIcon>\n          <PersonIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"G de Sorteios\" />{\" \"}\n        {winnersDraw ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={winnersDraw} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleWinnerDrawList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Ganhadores\" />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickParticipantsRaffle}>\n        <ListItemIcon>\n          <PersonIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Rifas\" />{\" \"}\n        {participantsRaffle ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={participantsRaffle} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleParticipantsRaffleCreate}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Participar\" />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleClickWinnersRaffles}>\n        <ListItemIcon>\n          <PersonIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"G de Rifas\" />{\" \"}\n        {winnersRaffle ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={winnersRaffle} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleWinnerRaffleList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Ganhadores\" />\n        </ListItem>\n      </Collapse>\n\n      <ListItem button onClick={handleMyShopping}>\n        <ListItemIcon>\n          <AccountBalanceIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Minhas Compras\" />\n      </ListItem>\n      <ListItem button onClick={handleClickBanks}>\n        <ListItemIcon>\n          <AccountBalanceIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Pagamento\" />{\" \"}\n        {banks ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={banks} timeout=\"auto\" unmountOnExit>\n        <ListItem\n          button\n          className={classes.nested}\n          onClick={handleBanksAccountList}\n        >\n          <ListItemIcon></ListItemIcon>\n          <ListItemText primary=\"Contas\" />\n        </ListItem>\n      </Collapse>\n      <ListItem button className={classes.nested}>\n        <ListItemIcon>\n          <ExitToApp />\n        </ListItemIcon>\n        <a href=\"/\" style={{ textDecoration: \"none\", color: \"black\" }}>\n          <ListItemText primary=\"Sair\" />\n        </a>\n      </ListItem>\n    </List>\n  );\n}\n","import React from \"react\";\nimport MenuAdmin from \"../MenuAdmin\";\nimport MenuComum from \"../MenuComum\";\n\nexport default function Sidebar() {\n  const usertype: any = JSON.parse(`${sessionStorage.getItem(\"data\")}`)?.type;\n\n  return <>{usertype === \"admin\" ? <MenuAdmin /> : <MenuComum />}</>;\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport {useSelector} from 'react-redux'\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport Sidebar  from \"../../components/Sidebar\";\nimport {IScreenState} from '../../types'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100%\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const CurrentScreen  = useSelector<IScreenState,IScreenState[\"screen\"]>((state)=> state.screen)\n  \n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        style={{backgroundColor: \"#000\"}}\n        \n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\"></IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <Sidebar />\n        </List>\n        <Divider />\n        <List>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <CurrentScreen/>\n      </main>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100%;\n  width: 100%;\n\n  a {\n    text-decoration: none;\n    color: #fff;\n  }\n`;\n\nexport const Header = styled.div`\n  width: 100%;\n  height: 70px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 24px;\n  padding-right: 24px;\n  background-color: #000000;\n`;\nexport const Logo = styled.img`\n  width: 168px;\n  height: 60px;\n  object-fit: scale-down;\n`;\nexport const SectionRow = styled.div`\n  width: 100%;\n  height: 24px;\n  background-color: #060606;\n  display: flex;\n  align-items: center;\n  padding-left: 10px;\n  flex-wrap: wrap;\n  color: #fff;\n`;\n\nexport const InfoSpan = styled.p`\n  font-family: Roboto, sans-serif;\n  font-size: 15px;\n  margin-right: 15px;\n`;\nexport const Menu = styled.div`\n  width: 100%;\n  max-width: 350px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  font-family: Roboto, sans-serif;\n  color: #fff;\n`;\n\nexport const ItemMenu = styled.li`\n  list-style-type: none;\n  font-weight: bold;\n  font-size: 1em;\n  cursor: pointer;\n\n  :hover {\n    color: #949494;\n  }\n`;\nexport const Banner = styled.div`\n  width: 100%;\n  height: 400px;\n  max-height: 400px;\n  background-image: url(${(props) => props.src});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`;\n\nexport const BannerImage = styled.img`\n  width: 100%;\n  object-fit: scale-down;\n  height: auto;\n`;\n\nexport const ContainerProcess = styled.div`\n  width: 100%;\n  min-height: 340px;\n  min-height: 540px;\n  flex-wrap: wrap;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\nexport const CardProcess = styled.section`\n  max-width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-items: center;\n  align-items: center;\n`;\nexport const ImageProcess = styled.img`\n  max-width: 100%;\n  height: auto;\n`;\nexport const TitleProcess = styled.h3`\n  font-size: 1.2em;\n  font-family: Roboto, sans-serif;\n`;\nexport const DescriptionProcess = styled.p`\n  font-size: 0.9em;\n  line-height: 1.5;\n  font-family: Roboto, sans-serif;\n`;\nexport const ContainerDraws = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 30px;\n  padding-top: 50px;\n  padding-left: 20px;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  width: 100%;\n`;\nexport const TitleDraw = styled.h1`\n  font-family: Roboto, sans-serif;\n  font-size: 1.3em;\n`;\nexport const ContainerRow = styled.div`\n  display: flex;\n  margin-top: 20px;\n  flex-wrap: wrap;\n`;\nexport const CardDraw = styled.div`\n  width: 301px;\n  display: flex;\n  margin: 15px 15px 15px 15px;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 4em;\n  height: 380px;\n  -webkit-box-shadow: 3px 3px 12px 0px rgba(57, 50, 50, 0.51);\n  -moz-box-shadow: 3px 3px 12px 0px rgba(57, 50, 50, 0.51);\n  box-shadow: 3px 3px 12px 0px rgba(57, 50, 50, 0.51);\n`;\nexport const SliderDraw = styled.div`\n  height: 250px;\n  width: 100%;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  ::-webkit-scrollbar {\n    width: 5px;\n  }\n`;\nexport const ImageDraw = styled.img`\n  width: 100%;\n`;\n\nexport const StatusDraw = styled.div`\n  width: 100%;\n  font-family: Roboto, sans-serif;\n  display: flex;\n  margin-top: 48px;\n  border-radius: 50px;\n  color: #fff;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n  background-color: ${(props) => (props.status === \"active\" ? \"green\" : \"red\")};\n`;\n\nexport const ContainerRowWinners = styled.div`\n  display: flex;\n  margin-top: 20px;\n  overflow-x: auto; \n\n`;\n\nexport const Footer = styled.footer`\n  display: flex;\n  padding-left: 20px;\n  padding-right: 20px;\n  flex-direction: column;\n  width: 100%;\n  height: 120px;\n  justify-content: space-between;\n`;\nexport const FooterRow = styled.div`\n  width: 100%;\n  height: 60px;\n  align-items: center;\n  justify-content: space-between;\n  display: flex;\n`;\nexport const ItemFooter = styled.span`\n  width: 100px;\n  height: 40px;\n  font-family: Roboto, sans-serif;\n  font-weight: 700;\n  text-align: center;\n  line-height: 35px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: #ededed;\n  }\n`;\nexport const FooterSocial = styled.div`\n  width: 200px;\n`;\nexport const Hr = styled.hr`\n  background-color: #000;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport api, { URL } from \"../../services/api\";\nimport { IBusiness, IDraw, IImage } from \"../../types\";\nimport Facebook from \"@material-ui/icons/Facebook\";\nimport Instagram from \"@material-ui/icons/Instagram\";\nimport WhatsApp from \"@material-ui/icons/WhatsApp\";\nimport ReactMarkdown from \"react-markdown\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\n\nimport {\n  Container,\n  Menu,\n  ItemMenu,\n  Header,\n  Logo,\n  SectionRow,\n  InfoSpan,\n  Banner,\n  BannerImage,\n  ContainerProcess,\n  CardProcess,\n  TitleProcess,\n  ImageProcess,\n  DescriptionProcess,\n  ContainerDraws,\n  ContainerRow,\n  TitleDraw,\n  CardDraw,\n  SliderDraw,\n  ImageDraw,\n  StatusDraw,\n  ContainerRowWinners,\n  Footer,\n  FooterRow,\n  FooterSocial,\n  ItemFooter,\n  Hr,\n} from \"./styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport WinnerListDraws from \"../../components/WinnerDraw/List\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: 0,\n  },\n});\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function Home() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [draws, setDraws] = useState<IDraw[]>([]);\n  const [images, setImages] = useState<IImage[]>([]);\n  const [businnes, setBusinnes] = useState<IBusiness>();\n  const [countWinners, setCounterWinnners] = useState<number>(0);\n\n  useEffect(() => {\n    async function getImages() {\n      const { data } = await api.get(\"/images\");\n\n      setImages(data);\n    }\n    getImages();\n  }, []);\n\n  useEffect(() => {\n    async function getDraws() {\n      const { data } = await api.get(\"/draws\");\n\n      setDraws(data);\n    }\n    getDraws();\n  }, []);\n\n  useEffect(() => {\n    async function getWinners() {\n      const { data } = await api.get(\n        \"/join_winners_participants_users_quotas_draw\"\n      );\n\n      setCounterWinnners(data[0]?.length);\n    }\n    getWinners();\n  }, []);\n\n  useEffect(() => {\n    async function getBusinnes() {\n      const { data } = await api.get(\"/business\");\n\n      setBusinnes(data[0]);\n    }\n    getBusinnes();\n  }, []);\n  return (\n    <Container>\n      <SectionRow>\n        <InfoSpan>CNPJ: {businnes?.cnpj}</InfoSpan>\n        <InfoSpan>{businnes?.fantasy_name}</InfoSpan>\n      </SectionRow>\n      <Header>\n        <Logo src={businnes?.logo} alt=\"Logo\" />\n        <Menu>\n          <ItemMenu>\n            <a href=\"/Signin\">LOGIN</a>\n          </ItemMenu>\n        </Menu>\n      </Header>\n      <Banner src={businnes?.banner}></Banner>\n      <ContainerProcess>\n        <CardProcess>\n          <ImageProcess src={`${URL}/passo-1.png`} />\n          <TitleProcess>Escolha uma Rifa</TitleProcess>\n          <DescriptionProcess>\n            Muito fácil participar. Comece escolhendo uma Rifa ativa.\n          </DescriptionProcess>\n        </CardProcess>\n        <CardProcess>\n          <ImageProcess src={`${URL}/passo-2.png`} />\n          <TitleProcess>Selecione os números</TitleProcess>\n          <DescriptionProcess>\n            Escolha quantos quiser! Quanto mais, mais chances de ganhar.\n          </DescriptionProcess>\n        </CardProcess>\n        <CardProcess>\n          <ImageProcess src={`${URL}/passo-3.png`} />\n          <TitleProcess>Faça o pagamento</TitleProcess>\n          <DescriptionProcess>\n            Escolha uma das formas de pagamento disponíveis.\n          </DescriptionProcess>\n        </CardProcess>\n        <CardProcess>\n          <ImageProcess src={`${URL}/passo-4.png`} />\n          <TitleProcess>Aguarde o sorteio</TitleProcess>\n          <DescriptionProcess>\n            Agora é aguardar o sorteio pela Loteria Federal e boa sorte!\n          </DescriptionProcess>\n        </CardProcess>\n      </ContainerProcess>\n      <ContainerDraws>\n        <TitleDraw id=\"sorteios\">SORTEIOS </TitleDraw>\n\n        <p>Acesse o ambiente para participar dos sorteios</p>\n        <ContainerRow>\n          {draws.map((draw) => (\n            <CardDraw>\n              <SliderDraw>\n                {images.map((image) =>\n                  image.draws_draw_id === draw.draw_id ? (\n                    <ImageDraw src={image.data_image} />\n                  ) : (\n                    <></>\n                  )\n                )}\n              </SliderDraw>\n              <TitleDraw>{draw.title}</TitleDraw>\n              <h4 style={{ color: \"#8c8c8c\",textAlign: \"center\" }}>{draw.subtitle}</h4>\n              <StatusDraw status={draw.status}>\n                <p>{draw.status === \"active\" ? \"Ativo\" : \"Encerrado\"}</p>\n              </StatusDraw>\n            </CardDraw>\n          ))}\n        </ContainerRow>\n      </ContainerDraws>\n      <ContainerDraws\n        style={{ display: `${countWinners > 0 ? \"flex\" : \"none\"}` }}\n      >\n        <TitleDraw>GANHADORES </TitleDraw>\n        <p>Veja quem já ganhou</p>\n        <ContainerRowWinners style={{ marginTop: \"30px\" }}>\n          <WinnerListDraws />\n        </ContainerRowWinners>\n      </ContainerDraws>\n      <Footer>\n        <FooterRow>\n          <ItemFooter onClick={handleClickOpen} style={{ color: \"#000\" }}>\n            Regulação\n          </ItemFooter>\n          <FooterSocial>\n            <a\n              href={businnes?.social\n                ?.split(\",\")[0]\n                .replace(`\"`, \"\")\n                .replace(`\"`, \"\")}\n              style={{ color: \"#083aa6\" }}\n            >\n              <Facebook fontSize={\"large\"} />\n            </a>\n            <a\n              href={businnes?.social\n                ?.split(\",\")[2]\n                .replace(`\"`, \"\")\n                .replace(`\"`, \"\")}\n              style={{ color: \"#8c6dad\" }}\n            >\n              <Instagram fontSize={\"large\"} />\n            </a>\n            <a\n              href={businnes?.social\n                ?.split(\",\")[1]\n                .replace(`\"`, \"\")\n                .replace(`\"`, \"\")}\n              style={{ color: \"green\" }}\n            >\n              <WhatsApp fontSize={\"large\"} />\n            </a>\n          </FooterSocial>\n        </FooterRow>\n        <Hr />\n        <FooterRow>\n          <p style={{ fontFamily: \"Roboto,sans-serif\", color: \"#999999\" }}>\n            ©{new Date().getFullYear()} Todos os direitos reservados\n          </p>\n        </FooterRow>\n      </Footer>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Regulação\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            <ReactMarkdown source={businnes?.regulation} escapeHtml={true} />\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n    </Container>\n  );\n}\n","function isAuthenticated () {\n    const token = sessionStorage.getItem('token')\n    return token\n}\n\nexport default isAuthenticated","import { createBrowserHistory } from \"history\"\n\nconst history = createBrowserHistory()\n\nexport default history","import React from \"react\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Login from \"./pages/Login\";\nimport ForgoutPassword from './pages/ForgoutPassword'\nimport UserRegistration from \"./pages/UserRegistration\"\nimport Dashboard from \"./pages/Dashboard\"\nimport Home from './pages/Home'\n\nimport isAuthenticated from \"./global/Auth\";\nimport History from \"./global/History\"\n\n\n\nconst PrivateRoute  = ({ component: Component, ...rest }:any) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuthenticated() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: \"/Signin\", state: { from: props.location } }} />\n      )\n    }\n  />\n)\n\nconst Routes = () => (\n  <Router history={History}>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/Signin\" component={Login} />\n      <Route exact path=\"/ForgoutPassword\" component={ForgoutPassword}/>\n      <Route exact path=\"/UserRegistration\" component={UserRegistration}/>\n      <PrivateRoute exact path=\"/Dashboard\" component={Dashboard} />\n    </Switch>\n  </Router>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport store from './store/index'\nimport Routes from \"./routes\"\n\nconst App = () => {\n    return (\n    <Provider store={store}>\n        <Routes />\n    </Provider>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}